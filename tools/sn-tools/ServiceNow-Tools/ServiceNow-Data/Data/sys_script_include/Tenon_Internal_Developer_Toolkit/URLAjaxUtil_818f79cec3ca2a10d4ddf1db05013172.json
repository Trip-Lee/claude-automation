{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "818f79cec3ca2a10d4ddf1db05013172",
    "extracted_at": "2025-09-19T21:48:28.849Z",
    "display_value": "URLAjaxUtil",
    "application": "Tenon_Internal_Developer_Toolkit",
    "scope": {
      "display_value": "Tenon Internal Developer Toolkit",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/dfe2b587872f4650369f33373cbb3540",
      "value": "dfe2b587872f4650369f33373cbb3540"
    }
  },
  "client_callable": {
    "value": "true",
    "display_value": "true"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "11",
    "display_value": "11"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-06-12 16:42:48",
    "display_value": "2025-06-12 09:42:48 AM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "var URLAjaxUtil = Class.create();\r\nURLAjaxUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\r\n    getUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId'), instanceName: gs.getProperty('instance_name') || '', table: this.getParameter('sysparm_table') || '' };\r\n        const {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            table = this.getParameter('sysparm_table') || '',\r\n            instanceName = gs.getProperty('instance_name')\r\n        } = inp;\r\n        var urlBase = 'https://' + instanceName + '.service-now.com/';\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return urlBase + table + '.do?sys_id=' + sysId;\r\n    },\r\n\r\n    getSyncChangeUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') || '', instanceName: gs.getProperty('instance_name') || '', useName: false };\r\n        let {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            instanceName = gs.getProperty('instance_name'),\r\n\t\t\tuseName = false\r\n        } = inp;\r\n        let table = '';\r\n        const sysChangeGr = new GlideRecord('sys_sync_change');\r\n\r\n        if (!sysId || !sysChangeGr.get(sysId)) return '';\r\n\r\n        var versionGr = sysChangeGr.version.getRefRecord();\r\n\r\n        if (versionGr.isValidRecord()) {\r\n\t\t\tif (useName) {\r\n\t\t\t\tconst record = this.convertName({ name: versionGr.getDisplayValue('name') });\r\n\t\t\t\ttable = record.table;\r\n\t\t\t\tsysId = record.sysId;\r\n\t\t\t} else {\r\n\t\t\t\tconst metadata = this.getMetadata({ versionGr });\r\n\t\t\t\ttable = metadata.table;\r\n\t\t\t\tsysId = metadata.sysId;\r\n\t\t\t}\r\n        }\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return this.getUrl({\r\n            sysId,\r\n            table,\r\n            instanceName\r\n        });\r\n    },\r\n\r\n    getYardUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkyard',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getShopUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkshop',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getUATUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo7',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getQAUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo8',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n\tconvertName: function({ name }) {\r\n\t\tif (!name) return { table: \"\", sysId: \"\" };\r\n\t\tconst lastUnderscoreIndex = name.lastIndexOf(\"_\");\r\n\t\tif (lastUnderscoreIndex === -1) {\r\n\t\t\treturn { table: \"\", sysId: \"\" };\r\n\t\t}\r\n\t\tconst table = name.substring(0, lastUnderscoreIndex);\r\n\t\tconst sysId = name.substring(lastUnderscoreIndex + 1);\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n\tgetMetadata: function({ versionGr }) {\r\n\t\tlet table = '';\r\n\t\tlet sysId = '';\r\n\t\tvar metaDataGr = new GlideRecord(\"sys_metadata\");\r\n\t\tmetaDataGr.addQuery(\"sys_update_name\", versionGr.getValue('name'));\r\n\t\tmetaDataGr.query();\r\n\r\n\t\tif (metaDataGr.next()) {\r\n\t\t\ttable = metaDataGr.getValue('sys_class_name');\r\n\t\t\tif (!table) return '';\r\n\t\t\tvar relatedRecordGr = new GlideRecord(table);\r\n\t\t\tif (relatedRecordGr.get(metaDataGr.getUniqueValue())) {\r\n\t\t\t\tsysId = relatedRecordGr.getUniqueValue();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n    type: 'URLAjaxUtil'\r\n});",
    "display_value": "var URLAjaxUtil = Class.create();\r\nURLAjaxUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\r\n    getUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId'), instanceName: gs.getProperty('instance_name') || '', table: this.getParameter('sysparm_table') || '' };\r\n        const {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            table = this.getParameter('sysparm_table') || '',\r\n            instanceName = gs.getProperty('instance_name')\r\n        } = inp;\r\n        var urlBase = 'https://' + instanceName + '.service-now.com/';\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return urlBase + table + '.do?sys_id=' + sysId;\r\n    },\r\n\r\n    getSyncChangeUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') || '', instanceName: gs.getProperty('instance_name') || '', useName: false };\r\n        let {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            instanceName = gs.getProperty('instance_name'),\r\n\t\t\tuseName = false\r\n        } = inp;\r\n        let table = '';\r\n        const sysChangeGr = new GlideRecord('sys_sync_change');\r\n\r\n        if (!sysId || !sysChangeGr.get(sysId)) return '';\r\n\r\n        var versionGr = sysChangeGr.version.getRefRecord();\r\n\r\n        if (versionGr.isValidRecord()) {\r\n\t\t\tif (useName) {\r\n\t\t\t\tconst record = this.convertName({ name: versionGr.getDisplayValue('name') });\r\n\t\t\t\ttable = record.table;\r\n\t\t\t\tsysId = record.sysId;\r\n\t\t\t} else {\r\n\t\t\t\tconst metadata = this.getMetadata({ versionGr });\r\n\t\t\t\ttable = metadata.table;\r\n\t\t\t\tsysId = metadata.sysId;\r\n\t\t\t}\r\n        }\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return this.getUrl({\r\n            sysId,\r\n            table,\r\n            instanceName\r\n        });\r\n    },\r\n\r\n    getYardUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkyard',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getShopUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkshop',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getUATUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo7',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getQAUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo8',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n\tconvertName: function({ name }) {\r\n\t\tif (!name) return { table: \"\", sysId: \"\" };\r\n\t\tconst lastUnderscoreIndex = name.lastIndexOf(\"_\");\r\n\t\tif (lastUnderscoreIndex === -1) {\r\n\t\t\treturn { table: \"\", sysId: \"\" };\r\n\t\t}\r\n\t\tconst table = name.substring(0, lastUnderscoreIndex);\r\n\t\tconst sysId = name.substring(lastUnderscoreIndex + 1);\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n\tgetMetadata: function({ versionGr }) {\r\n\t\tlet table = '';\r\n\t\tlet sysId = '';\r\n\t\tvar metaDataGr = new GlideRecord(\"sys_metadata\");\r\n\t\tmetaDataGr.addQuery(\"sys_update_name\", versionGr.getValue('name'));\r\n\t\tmetaDataGr.query();\r\n\r\n\t\tif (metaDataGr.next()) {\r\n\t\t\ttable = metaDataGr.getValue('sys_class_name');\r\n\t\t\tif (!table) return '';\r\n\t\t\tvar relatedRecordGr = new GlideRecord(table);\r\n\t\t\tif (relatedRecordGr.get(metaDataGr.getUniqueValue())) {\r\n\t\t\t\tsysId = relatedRecordGr.getUniqueValue();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n    type: 'URLAjaxUtil'\r\n});",
    "formatted_script": {
      "line_count": 139,
      "char_count": 4155,
      "preview": "var URLAjaxUtil = Class.create();\r\nURLAjaxUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\r\n    getUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId')...",
      "full_script": "var URLAjaxUtil = Class.create();\r\nURLAjaxUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\r\n    getUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId'), instanceName: gs.getProperty('instance_name') || '', table: this.getParameter('sysparm_table') || '' };\r\n        const {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            table = this.getParameter('sysparm_table') || '',\r\n            instanceName = gs.getProperty('instance_name')\r\n        } = inp;\r\n        var urlBase = 'https://' + instanceName + '.service-now.com/';\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return urlBase + table + '.do?sys_id=' + sysId;\r\n    },\r\n\r\n    getSyncChangeUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') || '', instanceName: gs.getProperty('instance_name') || '', useName: false };\r\n        let {\r\n            sysId = this.getParameter('sysparm_sysId') || '',\r\n            instanceName = gs.getProperty('instance_name'),\r\n\t\t\tuseName = false\r\n        } = inp;\r\n        let table = '';\r\n        const sysChangeGr = new GlideRecord('sys_sync_change');\r\n\r\n        if (!sysId || !sysChangeGr.get(sysId)) return '';\r\n\r\n        var versionGr = sysChangeGr.version.getRefRecord();\r\n\r\n        if (versionGr.isValidRecord()) {\r\n\t\t\tif (useName) {\r\n\t\t\t\tconst record = this.convertName({ name: versionGr.getDisplayValue('name') });\r\n\t\t\t\ttable = record.table;\r\n\t\t\t\tsysId = record.sysId;\r\n\t\t\t} else {\r\n\t\t\t\tconst metadata = this.getMetadata({ versionGr });\r\n\t\t\t\ttable = metadata.table;\r\n\t\t\t\tsysId = metadata.sysId;\r\n\t\t\t}\r\n        }\r\n\r\n        if (!sysId || !table) return '';\r\n\r\n        return this.getUrl({\r\n            sysId,\r\n            table,\r\n            instanceName\r\n        });\r\n    },\r\n\r\n    getYardUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkyard',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getShopUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonworkshop',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getUATUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo7',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n    getQAUrl: function(inp) {\r\n\t\tinp = inp || { sysId: this.getParameter('sysparm_sysId') };\r\n        let {\r\n\t\t\tsysId = this.getParameter('sysparm_sysId') || ''\r\n\t\t} = inp;\r\n        if (!sysId) return '';\r\n\r\n        return this.getSyncChangeUrl({\r\n            sysId,\r\n            instanceName: 'tenonsoftwareincdemo8',\r\n\t\t\tuseName: true\r\n        });\r\n    },\r\n\r\n\tconvertName: function({ name }) {\r\n\t\tif (!name) return { table: \"\", sysId: \"\" };\r\n\t\tconst lastUnderscoreIndex = name.lastIndexOf(\"_\");\r\n\t\tif (lastUnderscoreIndex === -1) {\r\n\t\t\treturn { table: \"\", sysId: \"\" };\r\n\t\t}\r\n\t\tconst table = name.substring(0, lastUnderscoreIndex);\r\n\t\tconst sysId = name.substring(lastUnderscoreIndex + 1);\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n\tgetMetadata: function({ versionGr }) {\r\n\t\tlet table = '';\r\n\t\tlet sysId = '';\r\n\t\tvar metaDataGr = new GlideRecord(\"sys_metadata\");\r\n\t\tmetaDataGr.addQuery(\"sys_update_name\", versionGr.getValue('name'));\r\n\t\tmetaDataGr.query();\r\n\r\n\t\tif (metaDataGr.next()) {\r\n\t\t\ttable = metaDataGr.getValue('sys_class_name');\r\n\t\t\tif (!table) return '';\r\n\t\t\tvar relatedRecordGr = new GlideRecord(table);\r\n\t\t\tif (relatedRecordGr.get(metaDataGr.getUniqueValue())) {\r\n\t\t\t\tsysId = relatedRecordGr.getUniqueValue();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { table, sysId };\r\n\t},\r\n\r\n    type: 'URLAjaxUtil'\r\n});"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "dfe2b587872f4650369f33373cbb3540",
    "display_value": "Tenon Internal Developer Toolkit"
  },
  "sys_update_name": {
    "value": "sys_script_include_818f79cec3ca2a10d4ddf1db05013172",
    "display_value": "sys_script_include_818f79cec3ca2a10d4ddf1db05013172"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "api_name": {
    "value": "x_cadso_ti_devkit.URLAjaxUtil",
    "display_value": "x_cadso_ti_devkit.URLAjaxUtil"
  },
  "sys_created_on": {
    "value": "2025-06-11 21:33:06",
    "display_value": "2025-06-11 02:33:06 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "URLAjaxUtil",
    "display_value": "URLAjaxUtil"
  },
  "sys_name": {
    "value": "URLAjaxUtil",
    "display_value": "URLAjaxUtil"
  },
  "sys_scope": {
    "value": "dfe2b587872f4650369f33373cbb3540",
    "display_value": "Tenon Internal Developer Toolkit"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
