{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "0f53933b33c5a2107b18bc534d5c7b13",
    "extracted_at": "2025-09-19T21:48:28.881Z",
    "display_value": "FeatureAvailability",
    "application": "Tenon_-_Core",
    "scope": {
      "display_value": "Tenon - Core",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/608cd026c374e250d4ddf1db050131bb",
      "value": "608cd026c374e250d4ddf1db050131bb"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "3",
    "display_value": "3"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-04-29 18:13:03",
    "display_value": "2025-04-29 11:13:03 AM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "var FeatureAvailability = Class.create();\r\nFeatureAvailability.prototype = {\r\n    initialize: function() {},\r\n\r\n    isLeadEnabled: function() {\r\n        let leadDisableProp = gs.getProperty('x_cadso_core.disable_lead_features');\r\n        if (leadDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('sn_lead_mgmt_core');\r\n        }\r\n    },\r\n\r\n    isContactEnabled: function() {\r\n        let contactDisableProp = gs.getProperty('x_cadso_core.disable_contact_features');\r\n        if (contactDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isConsumerEnabled: function() {\r\n        let consumerDisableProp = gs.getProperty('x_cadso_core.disable_consumer_features');\r\n        if (consumerDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isAccountEnabled: function() {\r\n        let accountDisableProp = gs.getProperty('x_cadso_core.disable_account_features');\r\n        if (accountDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    type: 'FeatureAvailability'\r\n};",
    "display_value": "var FeatureAvailability = Class.create();\r\nFeatureAvailability.prototype = {\r\n    initialize: function() {},\r\n\r\n    isLeadEnabled: function() {\r\n        let leadDisableProp = gs.getProperty('x_cadso_core.disable_lead_features');\r\n        if (leadDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('sn_lead_mgmt_core');\r\n        }\r\n    },\r\n\r\n    isContactEnabled: function() {\r\n        let contactDisableProp = gs.getProperty('x_cadso_core.disable_contact_features');\r\n        if (contactDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isConsumerEnabled: function() {\r\n        let consumerDisableProp = gs.getProperty('x_cadso_core.disable_consumer_features');\r\n        if (consumerDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isAccountEnabled: function() {\r\n        let accountDisableProp = gs.getProperty('x_cadso_core.disable_account_features');\r\n        if (accountDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    type: 'FeatureAvailability'\r\n};",
    "formatted_script": {
      "line_count": 46,
      "char_count": 1534,
      "preview": "var FeatureAvailability = Class.create();\r\nFeatureAvailability.prototype = {\r\n    initialize: function() {},\r\n\r\n    isLeadEnabled: function() {\r\n        let leadDisableProp = gs.getProperty('x_cadso_c...",
      "full_script": "var FeatureAvailability = Class.create();\r\nFeatureAvailability.prototype = {\r\n    initialize: function() {},\r\n\r\n    isLeadEnabled: function() {\r\n        let leadDisableProp = gs.getProperty('x_cadso_core.disable_lead_features');\r\n        if (leadDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('sn_lead_mgmt_core');\r\n        }\r\n    },\r\n\r\n    isContactEnabled: function() {\r\n        let contactDisableProp = gs.getProperty('x_cadso_core.disable_contact_features');\r\n        if (contactDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isConsumerEnabled: function() {\r\n        let consumerDisableProp = gs.getProperty('x_cadso_core.disable_consumer_features');\r\n        if (consumerDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    isAccountEnabled: function() {\r\n        let accountDisableProp = gs.getProperty('x_cadso_core.disable_account_features');\r\n        if (accountDisableProp === 'true') {\r\n            return false;\r\n        } else {\r\n            let pMgr = new GlidePluginManager();\r\n            return pMgr.isActive('com.sn_customerservice');\r\n        }\r\n    },\r\n\r\n    type: 'FeatureAvailability'\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_update_name": {
    "value": "sys_script_include_0f53933b33c5a2107b18bc534d5c7b13",
    "display_value": "sys_script_include_0f53933b33c5a2107b18bc534d5c7b13"
  },
  "sys_updated_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "api_name": {
    "value": "x_cadso_core.FeatureAvailability",
    "display_value": "x_cadso_core.FeatureAvailability"
  },
  "sys_created_on": {
    "value": "2025-04-28 20:54:05",
    "display_value": "2025-04-28 01:54:05 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "FeatureAvailability",
    "display_value": "FeatureAvailability"
  },
  "sys_name": {
    "value": "FeatureAvailability",
    "display_value": "FeatureAvailability"
  },
  "sys_scope": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_created_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
