{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "26d937eec3062e10d4ddf1db050131d1",
    "extracted_at": "2025-09-19T21:48:28.827Z",
    "display_value": "UTMsApiMS",
    "application": "Tenon_-_Core",
    "scope": {
      "display_value": "Tenon - Core",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/608cd026c374e250d4ddf1db050131bb",
      "value": "608cd026c374e250d4ddf1db050131bb"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "24",
    "display_value": "24"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-07-29 00:53:06",
    "display_value": "2025-07-28 05:53:06 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "const UTMsApiMS = Class.create();\r\nUTMsApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.tables = {\r\n\t\t\t'email': 'x_cadso_automate_email',\r\n\t\t\t'emailSend': 'x_cadso_automate_email_send',\r\n\t\t\t'emailTemplate': 'x_cadso_automate_content_template',\r\n\t\t\t'page': 'x_cadso_cloud_page',\r\n\t\t\t'pageTemplate': 'x_cadso_automate_content_template',\r\n\t\t};\r\n\t\tthis.utmFields = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'utm_string',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t\tthis.states = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'initialized,draft,new',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t},\r\n\r\n\tgetTemplateDefault: function({ type }) {\r\n\t\tconst templateGr = new GlideRecordSecure('x_cadso_core_utm_template');\r\n\t\ttemplateGr.addQuery('type', type);\r\n\t\ttemplateGr.addActiveQuery();\r\n\t\ttemplateGr.orderByDesc('default');\r\n\t\ttemplateGr.query();\r\n\t\treturn templateGr.next() ? templateGr.getUniqueValue() : '';\r\n\t},\r\n\r\n\tgetTableFromType: function({ type }) {\r\n\t\treturn this.tables[type] || '';\r\n\t},\r\n\r\n\tgetUTMField: function({ type }) {\r\n\t\treturn this.utmFields[type] || '';\r\n\t},\r\n\r\n\tgetAcceptableStates: function({ type }) {\r\n\t\treturn this.states[type] || '';\r\n\t},\r\n\r\n\tformatValue: function({ value = '' }) {\r\n\t\tvalue = value.trim();\r\n\t\tvalue = value.replaceAll(/[^a-zA-Z0-9]/g, '_');\r\n\t\tvalue = value.replaceAll('__', '_');\r\n\t\tvalue = value.replaceAll(/_$/g, '');\r\n\t\treturn value;\r\n\t},\r\n\r\n\tgetRecordValue: function({ sysId, table, field, value }) {\r\n\t\tconst tableGr = new GlideRecordSecure(table);\r\n\t\t\r\n\t\tif (tableGr.get(sysId) && tableGr.isValidField(field)) {\r\n\t\t\tvalue = tableGr.getDisplayValue(field) || '';\r\n\t\t}\r\n\t\treturn this.formatValue({ value });\r\n\t},\r\n\r\n\tcreateParamters: function({ mapping }) {\r\n\t\tvar utmMappingOptionGr = new GlideRecord('x_cadso_core_utm_mapping_option');\r\n\t\tutmMappingOptionGr.addQuery('mapping', mapping);\r\n\t\tutmMappingOptionGr.orderBy('order');\r\n\t\tutmMappingOptionGr.query();\r\n\t\tlet values = [];\r\n\t\twhile (utmMappingOptionGr.next()) {\r\n\t\t\tif (utmMappingOptionGr.value.nil()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvalues.push(utmMappingOptionGr.getValue('parameter'));\r\n\t\t}\r\n\t\tvalues = values.join('&');\r\n\t\treturn values && values.length ? '?' + values : '';\r\n\t},\r\n\r\n\tcreateMappingOption: function({ tableGr, data }) {\r\n\t\tconst { utm, template, mapping, table, record, order, name, locked = false, dynamicValue = false } = data;\r\n\t\t\r\n\t\tif (!tableGr) {\r\n\t\t\ttableGr = new GlideRecordSecure('x_cadso_core_utm_mapping_option');\r\n\t\t}\r\n\r\n        tableGr.initialize();\r\n        tableGr.newRecord();\r\n        tableGr.setValue('utm', utm);\r\n        tableGr.setValue('template', template);\r\n        tableGr.setValue('mapping', mapping);\r\n        tableGr.setValue('table', table);\r\n        tableGr.setValue('record', record);\r\n        tableGr.setValue('order', order);\r\n        tableGr.setValue('name', name);\r\n        tableGr.setValue('locked', locked);\r\n        tableGr.setValue('dynamic_value', dynamicValue);\r\n        tableGr.insert();\r\n\t},\r\n\r\n\tcanCreateMappingOptions: function({ recordGr, type }) {\r\n\t\tconst acceptableStates = this.getAcceptableStates({ type });\r\n\t\tconst table = this.getTableFromType({ type });\r\n\t\treturn recordGr && recordGr.isValidRecord() && recordGr.getTableName() === table && acceptableStates.split(',').includes(recordGr.getValue('state'));\r\n\t},\r\n\r\n    type: \"UTMsApiMS\",\r\n};",
    "display_value": "const UTMsApiMS = Class.create();\r\nUTMsApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.tables = {\r\n\t\t\t'email': 'x_cadso_automate_email',\r\n\t\t\t'emailSend': 'x_cadso_automate_email_send',\r\n\t\t\t'emailTemplate': 'x_cadso_automate_content_template',\r\n\t\t\t'page': 'x_cadso_cloud_page',\r\n\t\t\t'pageTemplate': 'x_cadso_automate_content_template',\r\n\t\t};\r\n\t\tthis.utmFields = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'utm_string',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t\tthis.states = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'initialized,draft,new',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t},\r\n\r\n\tgetTemplateDefault: function({ type }) {\r\n\t\tconst templateGr = new GlideRecordSecure('x_cadso_core_utm_template');\r\n\t\ttemplateGr.addQuery('type', type);\r\n\t\ttemplateGr.addActiveQuery();\r\n\t\ttemplateGr.orderByDesc('default');\r\n\t\ttemplateGr.query();\r\n\t\treturn templateGr.next() ? templateGr.getUniqueValue() : '';\r\n\t},\r\n\r\n\tgetTableFromType: function({ type }) {\r\n\t\treturn this.tables[type] || '';\r\n\t},\r\n\r\n\tgetUTMField: function({ type }) {\r\n\t\treturn this.utmFields[type] || '';\r\n\t},\r\n\r\n\tgetAcceptableStates: function({ type }) {\r\n\t\treturn this.states[type] || '';\r\n\t},\r\n\r\n\tformatValue: function({ value = '' }) {\r\n\t\tvalue = value.trim();\r\n\t\tvalue = value.replaceAll(/[^a-zA-Z0-9]/g, '_');\r\n\t\tvalue = value.replaceAll('__', '_');\r\n\t\tvalue = value.replaceAll(/_$/g, '');\r\n\t\treturn value;\r\n\t},\r\n\r\n\tgetRecordValue: function({ sysId, table, field, value }) {\r\n\t\tconst tableGr = new GlideRecordSecure(table);\r\n\t\t\r\n\t\tif (tableGr.get(sysId) && tableGr.isValidField(field)) {\r\n\t\t\tvalue = tableGr.getDisplayValue(field) || '';\r\n\t\t}\r\n\t\treturn this.formatValue({ value });\r\n\t},\r\n\r\n\tcreateParamters: function({ mapping }) {\r\n\t\tvar utmMappingOptionGr = new GlideRecord('x_cadso_core_utm_mapping_option');\r\n\t\tutmMappingOptionGr.addQuery('mapping', mapping);\r\n\t\tutmMappingOptionGr.orderBy('order');\r\n\t\tutmMappingOptionGr.query();\r\n\t\tlet values = [];\r\n\t\twhile (utmMappingOptionGr.next()) {\r\n\t\t\tif (utmMappingOptionGr.value.nil()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvalues.push(utmMappingOptionGr.getValue('parameter'));\r\n\t\t}\r\n\t\tvalues = values.join('&');\r\n\t\treturn values && values.length ? '?' + values : '';\r\n\t},\r\n\r\n\tcreateMappingOption: function({ tableGr, data }) {\r\n\t\tconst { utm, template, mapping, table, record, order, name, locked = false, dynamicValue = false } = data;\r\n\t\t\r\n\t\tif (!tableGr) {\r\n\t\t\ttableGr = new GlideRecordSecure('x_cadso_core_utm_mapping_option');\r\n\t\t}\r\n\r\n        tableGr.initialize();\r\n        tableGr.newRecord();\r\n        tableGr.setValue('utm', utm);\r\n        tableGr.setValue('template', template);\r\n        tableGr.setValue('mapping', mapping);\r\n        tableGr.setValue('table', table);\r\n        tableGr.setValue('record', record);\r\n        tableGr.setValue('order', order);\r\n        tableGr.setValue('name', name);\r\n        tableGr.setValue('locked', locked);\r\n        tableGr.setValue('dynamic_value', dynamicValue);\r\n        tableGr.insert();\r\n\t},\r\n\r\n\tcanCreateMappingOptions: function({ recordGr, type }) {\r\n\t\tconst acceptableStates = this.getAcceptableStates({ type });\r\n\t\tconst table = this.getTableFromType({ type });\r\n\t\treturn recordGr && recordGr.isValidRecord() && recordGr.getTableName() === table && acceptableStates.split(',').includes(recordGr.getValue('state'));\r\n\t},\r\n\r\n    type: \"UTMsApiMS\",\r\n};",
    "formatted_script": {
      "line_count": 109,
      "char_count": 3366,
      "preview": "const UTMsApiMS = Class.create();\r\nUTMsApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.tables = {\r\n\t\t\t'email': 'x_cadso_automate_email',\r\n\t\t\t'emailSend': 'x_cadso_automate_email_send',\r\n\t\t\t'...",
      "full_script": "const UTMsApiMS = Class.create();\r\nUTMsApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.tables = {\r\n\t\t\t'email': 'x_cadso_automate_email',\r\n\t\t\t'emailSend': 'x_cadso_automate_email_send',\r\n\t\t\t'emailTemplate': 'x_cadso_automate_content_template',\r\n\t\t\t'page': 'x_cadso_cloud_page',\r\n\t\t\t'pageTemplate': 'x_cadso_automate_content_template',\r\n\t\t};\r\n\t\tthis.utmFields = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'utm_string',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t\tthis.states = {\r\n\t\t\t'email': '',\r\n\t\t\t'emailSend': 'initialized,draft,new',\r\n\t\t\t'emailTemplate': '',\r\n\t\t\t'page': '',\r\n\t\t\t'pageTemplate': '',\r\n\t\t};\r\n\t},\r\n\r\n\tgetTemplateDefault: function({ type }) {\r\n\t\tconst templateGr = new GlideRecordSecure('x_cadso_core_utm_template');\r\n\t\ttemplateGr.addQuery('type', type);\r\n\t\ttemplateGr.addActiveQuery();\r\n\t\ttemplateGr.orderByDesc('default');\r\n\t\ttemplateGr.query();\r\n\t\treturn templateGr.next() ? templateGr.getUniqueValue() : '';\r\n\t},\r\n\r\n\tgetTableFromType: function({ type }) {\r\n\t\treturn this.tables[type] || '';\r\n\t},\r\n\r\n\tgetUTMField: function({ type }) {\r\n\t\treturn this.utmFields[type] || '';\r\n\t},\r\n\r\n\tgetAcceptableStates: function({ type }) {\r\n\t\treturn this.states[type] || '';\r\n\t},\r\n\r\n\tformatValue: function({ value = '' }) {\r\n\t\tvalue = value.trim();\r\n\t\tvalue = value.replaceAll(/[^a-zA-Z0-9]/g, '_');\r\n\t\tvalue = value.replaceAll('__', '_');\r\n\t\tvalue = value.replaceAll(/_$/g, '');\r\n\t\treturn value;\r\n\t},\r\n\r\n\tgetRecordValue: function({ sysId, table, field, value }) {\r\n\t\tconst tableGr = new GlideRecordSecure(table);\r\n\t\t\r\n\t\tif (tableGr.get(sysId) && tableGr.isValidField(field)) {\r\n\t\t\tvalue = tableGr.getDisplayValue(field) || '';\r\n\t\t}\r\n\t\treturn this.formatValue({ value });\r\n\t},\r\n\r\n\tcreateParamters: function({ mapping }) {\r\n\t\tvar utmMappingOptionGr = new GlideRecord('x_cadso_core_utm_mapping_option');\r\n\t\tutmMappingOptionGr.addQuery('mapping', mapping);\r\n\t\tutmMappingOptionGr.orderBy('order');\r\n\t\tutmMappingOptionGr.query();\r\n\t\tlet values = [];\r\n\t\twhile (utmMappingOptionGr.next()) {\r\n\t\t\tif (utmMappingOptionGr.value.nil()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvalues.push(utmMappingOptionGr.getValue('parameter'));\r\n\t\t}\r\n\t\tvalues = values.join('&');\r\n\t\treturn values && values.length ? '?' + values : '';\r\n\t},\r\n\r\n\tcreateMappingOption: function({ tableGr, data }) {\r\n\t\tconst { utm, template, mapping, table, record, order, name, locked = false, dynamicValue = false } = data;\r\n\t\t\r\n\t\tif (!tableGr) {\r\n\t\t\ttableGr = new GlideRecordSecure('x_cadso_core_utm_mapping_option');\r\n\t\t}\r\n\r\n        tableGr.initialize();\r\n        tableGr.newRecord();\r\n        tableGr.setValue('utm', utm);\r\n        tableGr.setValue('template', template);\r\n        tableGr.setValue('mapping', mapping);\r\n        tableGr.setValue('table', table);\r\n        tableGr.setValue('record', record);\r\n        tableGr.setValue('order', order);\r\n        tableGr.setValue('name', name);\r\n        tableGr.setValue('locked', locked);\r\n        tableGr.setValue('dynamic_value', dynamicValue);\r\n        tableGr.insert();\r\n\t},\r\n\r\n\tcanCreateMappingOptions: function({ recordGr, type }) {\r\n\t\tconst acceptableStates = this.getAcceptableStates({ type });\r\n\t\tconst table = this.getTableFromType({ type });\r\n\t\treturn recordGr && recordGr.isValidRecord() && recordGr.getTableName() === table && acceptableStates.split(',').includes(recordGr.getValue('state'));\r\n\t},\r\n\r\n    type: \"UTMsApiMS\",\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_update_name": {
    "value": "sys_script_include_26d937eec3062e10d4ddf1db050131d1",
    "display_value": "sys_script_include_26d937eec3062e10d4ddf1db050131d1"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "api_name": {
    "value": "x_cadso_core.UTMsApiMS",
    "display_value": "x_cadso_core.UTMsApiMS"
  },
  "sys_created_on": {
    "value": "2025-06-13 19:32:00",
    "display_value": "2025-06-13 12:32:00 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "UTMsApiMS",
    "display_value": "UTMsApiMS"
  },
  "sys_name": {
    "value": "UTMsApiMS",
    "display_value": "UTMsApiMS"
  },
  "sys_scope": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
