{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "b35b95b533d11a107b18bc534d5c7ba3",
    "extracted_at": "2025-09-19T21:48:29.185Z",
    "display_value": "JourneyBuilderUtils",
    "application": "Tenon_Marketing_Journey_Builder",
    "scope": {
      "display_value": "Tenon Marketing Journey Builder",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/cd61acbbc3c85a1085b196c4e40131bd",
      "value": "cd61acbbc3c85a1085b196c4e40131bd"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "87",
    "display_value": "87"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-07-16 20:36:17",
    "display_value": "2025-07-16 01:36:17 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "var JourneyBuilderUtils = Class.create();\r\nJourneyBuilderUtils.prototype = {\r\n    initialize: function() {\r\n\r\n        this.EVENT_TRIGGER_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'ba4ee2a587c59210369f33373cbb35ca',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n\r\n        this.EVENT_WAIT_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'a76d8161c3dede50d4ddf1db050131fd',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n    },\r\n\r\n    executeMatchingJourneys: function(recordGR, options = {}) {\r\n\t\tconst { refField = '' } = options || {};\r\n        let versionGR = new GlideRecord('x_cadso_journey_version');\r\n        versionGR.addEncodedQuery('published=true^active=true^type=criteria^trigger.table=' + recordGR.getTableName());\r\n        versionGR.query();\r\n        while (versionGR.next()) {\r\n            if (versionGR.trigger.nil()) {\r\n                continue;\r\n            }\r\n            let triggerGR = versionGR.trigger.getRefRecord();\r\n            if (!triggerGR.isValidRecord) continue;\r\n            let condition = triggerGR.getValue('conditions');\r\n            let glideFilter = new GlideFilter(condition);\r\n            glideFilter.setCaseSensitive(false)\r\n            if (!condition || glideFilter.match(recordGR)) {\r\n                let table = recordGR.getTableName();\r\n                let sysID = recordGR.getUniqueValue();\r\n                if (table === 'x_cadso_automate_email_event') {\r\n                    let EMAIL = new x_cadso_automate.EmailMS();\r\n                    let contactGQ = EMAIL.getContactSourceRecord({\r\n                        sysID: recordGR.getValue('contact_detail')\r\n                    });\r\n\r\n                    table = contactGQ.sys_class_name;\r\n                    sysID = contactGQ.sys_id;\r\n                } else if (refField && recordGR.getValue(refField)) {\r\n\t\t\t\t\tconst refRecordGr = recordGR[refField].getRefRecord();\r\n\t\t\t\t\tif (refRecordGr.isValidRecord()) {\r\n\t\t\t\t\t\ttable = refRecordGr.getTableName();\r\n\t\t\t\t\t\tsysID = refRecordGr.getUniqueValue();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                let instance = {\r\n                    journey: versionGR.getValue('journey'),\r\n                    table: table,\r\n                    document_id: sysID\r\n                }\r\n\r\n                let instanceGQ = new global.GlideQuery('x_cadso_journey_instance')\r\n                    .getBy(instance)\r\n                    .orElse(null)\r\n\r\n                if (instanceGQ) {\r\n                    continue;\r\n                }\r\n\r\n                let instanceGR = new GlideRecord('x_cadso_journey_instance');\r\n                instanceGR.setValue('journey', versionGR.getValue('journey'));\r\n                instanceGR.setValue('version', versionGR.getUniqueValue());\r\n                instanceGR.setValue('table', table);\r\n                instanceGR.setValue('document_id', sysID);\r\n                let instanceID = instanceGR.insert();\r\n                instanceGR.initialize();\r\n                if (instanceGR.get(instanceID)) {\r\n                    instanceGR.setValue('status', 'ready');\r\n                    instanceGR.update();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getDynamicStringValue: function(instanceStepGR) {\r\n        let isTrigger = !!instanceStepGR.getValue('trigger');\r\n        let value = new String(instanceStepGR.version_step.conditions);\r\n        let regex = /[{]([0-9a-f]{32}).([.a-z_]*)[}]/gm;\r\n        let match;\r\n\r\n        // while ((match = regex.exec(value)) !== null) {\r\n        //     gs.info('Found match: ' + JSON.stringify(match));\r\n        // }\r\n        let output = '';\r\n        while ((match = regex.exec(value)) !== null) {\r\n            gs.info('Found match: ' + JSON.stringify(match));\r\n            let textToReplace = match[0];\r\n            let versionStepID = match[1];\r\n            let elements = match[2].split(\".\");\r\n            if (!elements) {\r\n                continue;\r\n            }\r\n            let recordGR = this._getRecordGR(isTrigger, versionStepID);\r\n            let newValue = '';\r\n            if (elements.length === 1) {\r\n                newValue = recordGR.getValue(elements[0]);\r\n            } else {\r\n                let elementGR;\r\n                for (let i = 0; i < elements.length; i++) {\r\n                    if (!elementGR) {\r\n                        elementGR = recordGR[elements[i]].getRefRecord();\r\n                    } else {\r\n                        newValue = elementGR[elements[i]].toString();\r\n                        elementGR = elementGR[elements[i]].getRefRecord();\r\n                    }\r\n                    if (elementGR && !elementGR.isValidRecord()) {\r\n                        elementGR = null;\r\n                    }\r\n                }\r\n            }\r\n            value = value.replace(textToReplace, newValue);\r\n        }\r\n        value = value.replaceAll('javascript: ', '');\r\n        return value;\r\n    },\r\n\r\n    _getRecordGR(isTrigger, versionStepID) {\r\n        let table = isTrigger ? 'x_cadso_journey_instance' : 'x_cadso_journey_instance_step';\r\n        let recordGR = new GlideRecord(table);\r\n        if (recordGR.get(versionStepID)) {\r\n            let parentGR = new GlideRecord(recordGR.getValue('table'));\r\n            if (parentGR.get(recordGR.getValue('document_id'))) {\r\n                return parentGR;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    type: 'JourneyBuilderUtils'\r\n};",
    "display_value": "var JourneyBuilderUtils = Class.create();\r\nJourneyBuilderUtils.prototype = {\r\n    initialize: function() {\r\n\r\n        this.EVENT_TRIGGER_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'ba4ee2a587c59210369f33373cbb35ca',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n\r\n        this.EVENT_WAIT_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'a76d8161c3dede50d4ddf1db050131fd',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n    },\r\n\r\n    executeMatchingJourneys: function(recordGR, options = {}) {\r\n\t\tconst { refField = '' } = options || {};\r\n        let versionGR = new GlideRecord('x_cadso_journey_version');\r\n        versionGR.addEncodedQuery('published=true^active=true^type=criteria^trigger.table=' + recordGR.getTableName());\r\n        versionGR.query();\r\n        while (versionGR.next()) {\r\n            if (versionGR.trigger.nil()) {\r\n                continue;\r\n            }\r\n            let triggerGR = versionGR.trigger.getRefRecord();\r\n            if (!triggerGR.isValidRecord) continue;\r\n            let condition = triggerGR.getValue('conditions');\r\n            let glideFilter = new GlideFilter(condition);\r\n            glideFilter.setCaseSensitive(false)\r\n            if (!condition || glideFilter.match(recordGR)) {\r\n                let table = recordGR.getTableName();\r\n                let sysID = recordGR.getUniqueValue();\r\n                if (table === 'x_cadso_automate_email_event') {\r\n                    let EMAIL = new x_cadso_automate.EmailMS();\r\n                    let contactGQ = EMAIL.getContactSourceRecord({\r\n                        sysID: recordGR.getValue('contact_detail')\r\n                    });\r\n\r\n                    table = contactGQ.sys_class_name;\r\n                    sysID = contactGQ.sys_id;\r\n                } else if (refField && recordGR.getValue(refField)) {\r\n\t\t\t\t\tconst refRecordGr = recordGR[refField].getRefRecord();\r\n\t\t\t\t\tif (refRecordGr.isValidRecord()) {\r\n\t\t\t\t\t\ttable = refRecordGr.getTableName();\r\n\t\t\t\t\t\tsysID = refRecordGr.getUniqueValue();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                let instance = {\r\n                    journey: versionGR.getValue('journey'),\r\n                    table: table,\r\n                    document_id: sysID\r\n                }\r\n\r\n                let instanceGQ = new global.GlideQuery('x_cadso_journey_instance')\r\n                    .getBy(instance)\r\n                    .orElse(null)\r\n\r\n                if (instanceGQ) {\r\n                    continue;\r\n                }\r\n\r\n                let instanceGR = new GlideRecord('x_cadso_journey_instance');\r\n                instanceGR.setValue('journey', versionGR.getValue('journey'));\r\n                instanceGR.setValue('version', versionGR.getUniqueValue());\r\n                instanceGR.setValue('table', table);\r\n                instanceGR.setValue('document_id', sysID);\r\n                let instanceID = instanceGR.insert();\r\n                instanceGR.initialize();\r\n                if (instanceGR.get(instanceID)) {\r\n                    instanceGR.setValue('status', 'ready');\r\n                    instanceGR.update();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getDynamicStringValue: function(instanceStepGR) {\r\n        let isTrigger = !!instanceStepGR.getValue('trigger');\r\n        let value = new String(instanceStepGR.version_step.conditions);\r\n        let regex = /[{]([0-9a-f]{32}).([.a-z_]*)[}]/gm;\r\n        let match;\r\n\r\n        // while ((match = regex.exec(value)) !== null) {\r\n        //     gs.info('Found match: ' + JSON.stringify(match));\r\n        // }\r\n        let output = '';\r\n        while ((match = regex.exec(value)) !== null) {\r\n            gs.info('Found match: ' + JSON.stringify(match));\r\n            let textToReplace = match[0];\r\n            let versionStepID = match[1];\r\n            let elements = match[2].split(\".\");\r\n            if (!elements) {\r\n                continue;\r\n            }\r\n            let recordGR = this._getRecordGR(isTrigger, versionStepID);\r\n            let newValue = '';\r\n            if (elements.length === 1) {\r\n                newValue = recordGR.getValue(elements[0]);\r\n            } else {\r\n                let elementGR;\r\n                for (let i = 0; i < elements.length; i++) {\r\n                    if (!elementGR) {\r\n                        elementGR = recordGR[elements[i]].getRefRecord();\r\n                    } else {\r\n                        newValue = elementGR[elements[i]].toString();\r\n                        elementGR = elementGR[elements[i]].getRefRecord();\r\n                    }\r\n                    if (elementGR && !elementGR.isValidRecord()) {\r\n                        elementGR = null;\r\n                    }\r\n                }\r\n            }\r\n            value = value.replace(textToReplace, newValue);\r\n        }\r\n        value = value.replaceAll('javascript: ', '');\r\n        return value;\r\n    },\r\n\r\n    _getRecordGR(isTrigger, versionStepID) {\r\n        let table = isTrigger ? 'x_cadso_journey_instance' : 'x_cadso_journey_instance_step';\r\n        let recordGR = new GlideRecord(table);\r\n        if (recordGR.get(versionStepID)) {\r\n            let parentGR = new GlideRecord(recordGR.getValue('table'));\r\n            if (parentGR.get(recordGR.getValue('document_id'))) {\r\n                return parentGR;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    type: 'JourneyBuilderUtils'\r\n};",
    "formatted_script": {
      "line_count": 161,
      "char_count": 6365,
      "preview": "var JourneyBuilderUtils = Class.create();\r\nJourneyBuilderUtils.prototype = {\r\n    initialize: function() {\r\n\r\n        this.EVENT_TRIGGER_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: ...",
      "full_script": "var JourneyBuilderUtils = Class.create();\r\nJourneyBuilderUtils.prototype = {\r\n    initialize: function() {\r\n\r\n        this.EVENT_TRIGGER_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'ba4ee2a587c59210369f33373cbb35ca',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n\r\n        this.EVENT_WAIT_ACTION_MAP = {\r\n            opened: {\r\n                sys_id: 'a76d8161c3dede50d4ddf1db050131fd',\r\n                short_description: 'Email Opened'\r\n            },\r\n            clicked: {\r\n                sys_id: '7fcc8921c3dede50d4ddf1db05013186',\r\n                short_description: 'Email Clicked'\r\n            },\r\n            delivered: {\r\n                sys_id: '6e5d8921c3dede50d4ddf1db0501318f',\r\n                short_description: 'Email Delivered'\r\n            },\r\n            keywordReceived: {\r\n                sys_id: '380eaeb5c39a5290d4ddf1db05013142',\r\n                short_description: 'SMS Keyword Received'\r\n            }\r\n        };\r\n    },\r\n\r\n    executeMatchingJourneys: function(recordGR, options = {}) {\r\n\t\tconst { refField = '' } = options || {};\r\n        let versionGR = new GlideRecord('x_cadso_journey_version');\r\n        versionGR.addEncodedQuery('published=true^active=true^type=criteria^trigger.table=' + recordGR.getTableName());\r\n        versionGR.query();\r\n        while (versionGR.next()) {\r\n            if (versionGR.trigger.nil()) {\r\n                continue;\r\n            }\r\n            let triggerGR = versionGR.trigger.getRefRecord();\r\n            if (!triggerGR.isValidRecord) continue;\r\n            let condition = triggerGR.getValue('conditions');\r\n            let glideFilter = new GlideFilter(condition);\r\n            glideFilter.setCaseSensitive(false)\r\n            if (!condition || glideFilter.match(recordGR)) {\r\n                let table = recordGR.getTableName();\r\n                let sysID = recordGR.getUniqueValue();\r\n                if (table === 'x_cadso_automate_email_event') {\r\n                    let EMAIL = new x_cadso_automate.EmailMS();\r\n                    let contactGQ = EMAIL.getContactSourceRecord({\r\n                        sysID: recordGR.getValue('contact_detail')\r\n                    });\r\n\r\n                    table = contactGQ.sys_class_name;\r\n                    sysID = contactGQ.sys_id;\r\n                } else if (refField && recordGR.getValue(refField)) {\r\n\t\t\t\t\tconst refRecordGr = recordGR[refField].getRefRecord();\r\n\t\t\t\t\tif (refRecordGr.isValidRecord()) {\r\n\t\t\t\t\t\ttable = refRecordGr.getTableName();\r\n\t\t\t\t\t\tsysID = refRecordGr.getUniqueValue();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                let instance = {\r\n                    journey: versionGR.getValue('journey'),\r\n                    table: table,\r\n                    document_id: sysID\r\n                }\r\n\r\n                let instanceGQ = new global.GlideQuery('x_cadso_journey_instance')\r\n                    .getBy(instance)\r\n                    .orElse(null)\r\n\r\n                if (instanceGQ) {\r\n                    continue;\r\n                }\r\n\r\n                let instanceGR = new GlideRecord('x_cadso_journey_instance');\r\n                instanceGR.setValue('journey', versionGR.getValue('journey'));\r\n                instanceGR.setValue('version', versionGR.getUniqueValue());\r\n                instanceGR.setValue('table', table);\r\n                instanceGR.setValue('document_id', sysID);\r\n                let instanceID = instanceGR.insert();\r\n                instanceGR.initialize();\r\n                if (instanceGR.get(instanceID)) {\r\n                    instanceGR.setValue('status', 'ready');\r\n                    instanceGR.update();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getDynamicStringValue: function(instanceStepGR) {\r\n        let isTrigger = !!instanceStepGR.getValue('trigger');\r\n        let value = new String(instanceStepGR.version_step.conditions);\r\n        let regex = /[{]([0-9a-f]{32}).([.a-z_]*)[}]/gm;\r\n        let match;\r\n\r\n        // while ((match = regex.exec(value)) !== null) {\r\n        //     gs.info('Found match: ' + JSON.stringify(match));\r\n        // }\r\n        let output = '';\r\n        while ((match = regex.exec(value)) !== null) {\r\n            gs.info('Found match: ' + JSON.stringify(match));\r\n            let textToReplace = match[0];\r\n            let versionStepID = match[1];\r\n            let elements = match[2].split(\".\");\r\n            if (!elements) {\r\n                continue;\r\n            }\r\n            let recordGR = this._getRecordGR(isTrigger, versionStepID);\r\n            let newValue = '';\r\n            if (elements.length === 1) {\r\n                newValue = recordGR.getValue(elements[0]);\r\n            } else {\r\n                let elementGR;\r\n                for (let i = 0; i < elements.length; i++) {\r\n                    if (!elementGR) {\r\n                        elementGR = recordGR[elements[i]].getRefRecord();\r\n                    } else {\r\n                        newValue = elementGR[elements[i]].toString();\r\n                        elementGR = elementGR[elements[i]].getRefRecord();\r\n                    }\r\n                    if (elementGR && !elementGR.isValidRecord()) {\r\n                        elementGR = null;\r\n                    }\r\n                }\r\n            }\r\n            value = value.replace(textToReplace, newValue);\r\n        }\r\n        value = value.replaceAll('javascript: ', '');\r\n        return value;\r\n    },\r\n\r\n    _getRecordGR(isTrigger, versionStepID) {\r\n        let table = isTrigger ? 'x_cadso_journey_instance' : 'x_cadso_journey_instance_step';\r\n        let recordGR = new GlideRecord(table);\r\n        if (recordGR.get(versionStepID)) {\r\n            let parentGR = new GlideRecord(recordGR.getValue('table'));\r\n            if (parentGR.get(recordGR.getValue('document_id'))) {\r\n                return parentGR;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    type: 'JourneyBuilderUtils'\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "sys_update_name": {
    "value": "sys_script_include_b35b95b533d11a107b18bc534d5c7ba3",
    "display_value": "sys_script_include_b35b95b533d11a107b18bc534d5c7ba3"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "api_name": {
    "value": "x_cadso_journey.JourneyBuilderUtils",
    "display_value": "x_cadso_journey.JourneyBuilderUtils"
  },
  "sys_created_on": {
    "value": "2024-10-17 21:15:31",
    "display_value": "2024-10-17 02:15:31 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "JourneyBuilderUtils",
    "display_value": "JourneyBuilderUtils"
  },
  "sys_name": {
    "value": "JourneyBuilderUtils",
    "display_value": "JourneyBuilderUtils"
  },
  "sys_scope": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "sys_created_by": {
    "value": "rob.medved",
    "display_value": "rob.medved"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
