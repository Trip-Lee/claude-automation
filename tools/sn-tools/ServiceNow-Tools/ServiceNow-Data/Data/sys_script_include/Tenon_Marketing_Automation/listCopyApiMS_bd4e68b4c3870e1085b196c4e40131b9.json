{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "bd4e68b4c3870e1085b196c4e40131b9",
    "extracted_at": "2025-09-19T21:48:29.471Z",
    "display_value": "listCopyApiMS",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "26",
    "display_value": "26"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2024-08-12 19:02:00",
    "display_value": "2024-08-12 12:02:00 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "var listCopyApiMS = Class.create();\r\nlistCopyApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.response = {\r\n\t\t\titems: [],\r\n\t\t\tsuccess: true,\r\n\t\t\terror: \"\"\r\n\t\t};\r\n    },\r\n\r\n\tfetch: function ({ table, type, domainSysId }) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\ttarget.addQuery(\"type\", \"=\", type);\r\n\t\ttarget.addQuery(\"domain.sys_id\", \"=\", domainSysId);\r\n\t\ttarget.query();\r\n\r\n\t\twhile (target.next()) {\r\n\t\t\tvar obj = {};\r\n\t\t\t// obj[\"status\"] = target.getValue(\"status\");\r\n\t\t\tobj[\"status\"] = target[\"status\"].getDisplayValue();\r\n\t\t\tobj[\"hostname\"] = target.getValue(\"hostname\");\r\n\t\t\tobj[\"active\"] = target.getValue(\"active\");\r\n\t\t\tobj[\"sysId\"] = target.getValue(\"sys_id\");\r\n\t\t\tobj[\"entervalue\"] = target.getValue(\"value\");\r\n\t\t\tobj[\"currentvalue\"] = target.getValue(\"current_value\");\r\n\t\t\tobj[\"priority\"] = target.getValue(\"priority\");\r\n\t\t\t\r\n\t\t\tthis.response.items.push(obj);\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tdeleteRecord: function ({table, sysId}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\tif (target.canDelete()) {\r\n\t\t\t\ttarget.deleteRecord();\r\n\t\t\t} else {\r\n\t\t\t\tthis.response.success = false;\r\n\t\t\t\tthis.response.error = \"not enough access to delete record\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tupdateRecordActive: function ({table, sysId, newValue}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\ttarget.setValue(\"active\", newValue);\r\n\t\t\ttarget.update();\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\t\t\r\n\t\treturn this.response;\r\n\t},\r\n\r\n    type: 'listCopyApiMS'\r\n};",
    "display_value": "var listCopyApiMS = Class.create();\r\nlistCopyApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.response = {\r\n\t\t\titems: [],\r\n\t\t\tsuccess: true,\r\n\t\t\terror: \"\"\r\n\t\t};\r\n    },\r\n\r\n\tfetch: function ({ table, type, domainSysId }) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\ttarget.addQuery(\"type\", \"=\", type);\r\n\t\ttarget.addQuery(\"domain.sys_id\", \"=\", domainSysId);\r\n\t\ttarget.query();\r\n\r\n\t\twhile (target.next()) {\r\n\t\t\tvar obj = {};\r\n\t\t\t// obj[\"status\"] = target.getValue(\"status\");\r\n\t\t\tobj[\"status\"] = target[\"status\"].getDisplayValue();\r\n\t\t\tobj[\"hostname\"] = target.getValue(\"hostname\");\r\n\t\t\tobj[\"active\"] = target.getValue(\"active\");\r\n\t\t\tobj[\"sysId\"] = target.getValue(\"sys_id\");\r\n\t\t\tobj[\"entervalue\"] = target.getValue(\"value\");\r\n\t\t\tobj[\"currentvalue\"] = target.getValue(\"current_value\");\r\n\t\t\tobj[\"priority\"] = target.getValue(\"priority\");\r\n\t\t\t\r\n\t\t\tthis.response.items.push(obj);\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tdeleteRecord: function ({table, sysId}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\tif (target.canDelete()) {\r\n\t\t\t\ttarget.deleteRecord();\r\n\t\t\t} else {\r\n\t\t\t\tthis.response.success = false;\r\n\t\t\t\tthis.response.error = \"not enough access to delete record\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tupdateRecordActive: function ({table, sysId, newValue}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\ttarget.setValue(\"active\", newValue);\r\n\t\t\ttarget.update();\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\t\t\r\n\t\treturn this.response;\r\n\t},\r\n\r\n    type: 'listCopyApiMS'\r\n};",
    "formatted_script": {
      "line_count": 65,
      "char_count": 1707,
      "preview": "var listCopyApiMS = Class.create();\r\nlistCopyApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.response = {\r\n\t\t\titems: [],\r\n\t\t\tsuccess: true,\r\n\t\t\terror: \"\"\r\n\t\t};\r\n    },\r\n\r\n\tfetch: function ({...",
      "full_script": "var listCopyApiMS = Class.create();\r\nlistCopyApiMS.prototype = {\r\n    initialize: function() {\r\n\t\tthis.response = {\r\n\t\t\titems: [],\r\n\t\t\tsuccess: true,\r\n\t\t\terror: \"\"\r\n\t\t};\r\n    },\r\n\r\n\tfetch: function ({ table, type, domainSysId }) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\ttarget.addQuery(\"type\", \"=\", type);\r\n\t\ttarget.addQuery(\"domain.sys_id\", \"=\", domainSysId);\r\n\t\ttarget.query();\r\n\r\n\t\twhile (target.next()) {\r\n\t\t\tvar obj = {};\r\n\t\t\t// obj[\"status\"] = target.getValue(\"status\");\r\n\t\t\tobj[\"status\"] = target[\"status\"].getDisplayValue();\r\n\t\t\tobj[\"hostname\"] = target.getValue(\"hostname\");\r\n\t\t\tobj[\"active\"] = target.getValue(\"active\");\r\n\t\t\tobj[\"sysId\"] = target.getValue(\"sys_id\");\r\n\t\t\tobj[\"entervalue\"] = target.getValue(\"value\");\r\n\t\t\tobj[\"currentvalue\"] = target.getValue(\"current_value\");\r\n\t\t\tobj[\"priority\"] = target.getValue(\"priority\");\r\n\t\t\t\r\n\t\t\tthis.response.items.push(obj);\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tdeleteRecord: function ({table, sysId}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\tif (target.canDelete()) {\r\n\t\t\t\ttarget.deleteRecord();\r\n\t\t\t} else {\r\n\t\t\t\tthis.response.success = false;\r\n\t\t\t\tthis.response.error = \"not enough access to delete record\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\r\n\t\treturn this.response;\r\n\t},\r\n\r\n\tupdateRecordActive: function ({table, sysId, newValue}) {\r\n\t\tvar target = new GlideRecord(table);\r\n\t\tif (target.get(sysId)) {\r\n\t\t\ttarget.setValue(\"active\", newValue);\r\n\t\t\ttarget.update();\r\n\t\t} else {\r\n\t\t\tthis.response.success = false;\r\n\t\t\tthis.response.error = \"record does not exist\";\r\n\t\t}\r\n\t\t\r\n\t\treturn this.response;\r\n\t},\r\n\r\n    type: 'listCopyApiMS'\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_script_include_bd4e68b4c3870e1085b196c4e40131b9",
    "display_value": "sys_script_include_bd4e68b4c3870e1085b196c4e40131b9"
  },
  "sys_updated_by": {
    "value": "nathan.long",
    "display_value": "nathan.long"
  },
  "api_name": {
    "value": "x_cadso_automate.listCopyApiMS",
    "display_value": "x_cadso_automate.listCopyApiMS"
  },
  "sys_created_on": {
    "value": "2024-06-24 19:27:19",
    "display_value": "2024-06-24 12:27:19 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "listCopyApiMS",
    "display_value": "listCopyApiMS"
  },
  "sys_name": {
    "value": "listCopyApiMS",
    "display_value": "listCopyApiMS"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "tyler.liu",
    "display_value": "tyler.liu"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
