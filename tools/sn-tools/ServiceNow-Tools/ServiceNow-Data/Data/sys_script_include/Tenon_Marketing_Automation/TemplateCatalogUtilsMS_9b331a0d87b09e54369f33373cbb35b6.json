{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "9b331a0d87b09e54369f33373cbb35b6",
    "extracted_at": "2025-09-19T21:48:29.258Z",
    "display_value": "TemplateCatalogUtilsMS",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "76",
    "display_value": "76"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "SI to interface with read-only content template API.",
    "display_value": "SI to interface with read-only content template API."
  },
  "sys_updated_on": {
    "value": "2025-06-12 01:41:48",
    "display_value": "2025-06-11 06:41:48 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "var TemplateCatalogUtilsMS = Class.create();\r\nTemplateCatalogUtilsMS.prototype = {\r\n\r\n    initialize: function() {\r\n        this.token = this._getToken();\r\n    },\r\n\r\n    _getToken: function() {\r\n        return gs.getProperty('x_cadso_automate.template_catalog_token');\r\n    },\r\n\r\n    get: function(base_param, qs_params = null) {\r\n        let output = {\r\n            message: 'Start',\r\n            status: 404,\r\n            success: false\r\n        };\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            // Rebuild qs params\r\n            if (JSON.stringify(qs_params) !== '{}') {\r\n                let qs_arr = [];\r\n                for (var key in qs_params) {\r\n                    qs_arr.push(key + '=' + qs_params[key]);\r\n                }\r\n                let qs = '?' + qs_arr.join('&');\r\n                r.setStringParameterNoEscape('params', qs);\r\n                output.queryString = qs;\r\n            }\r\n\r\n            var response = r.execute();\r\n            output.endPoint = r.getEndpoint();\r\n            var responseBody = response.getBody();\r\n            output.status = response.getStatusCode();\r\n            output = {\r\n                ...output,\r\n                ...JSON.parse(responseBody)\r\n            };\r\n            output.success = output.status === 200;\r\n\t\t\toutput.message = 'Finished as planned.';\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error('Tenon Template Catalog Error: ' + message);\r\n            output.message = message;\r\n            output.status = 400;\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    get_single: function(base_param, item_id) {\r\n        let output = '{}';\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            r.setStringParameter('params', item_id);\r\n            var response = r.execute();\r\n            var responseBody = response.getBody();\r\n            var httpStatus = response.getStatusCode();\r\n            if (httpStatus === 200) {\r\n                output = responseBody;\r\n            }\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error(message);\r\n        }\r\n\r\n        return JSON.parse(output);\r\n    },\r\n\r\n    type: 'TemplateCatalogUtilsMS'\r\n};",
    "display_value": "var TemplateCatalogUtilsMS = Class.create();\r\nTemplateCatalogUtilsMS.prototype = {\r\n\r\n    initialize: function() {\r\n        this.token = this._getToken();\r\n    },\r\n\r\n    _getToken: function() {\r\n        return gs.getProperty('x_cadso_automate.template_catalog_token');\r\n    },\r\n\r\n    get: function(base_param, qs_params = null) {\r\n        let output = {\r\n            message: 'Start',\r\n            status: 404,\r\n            success: false\r\n        };\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            // Rebuild qs params\r\n            if (JSON.stringify(qs_params) !== '{}') {\r\n                let qs_arr = [];\r\n                for (var key in qs_params) {\r\n                    qs_arr.push(key + '=' + qs_params[key]);\r\n                }\r\n                let qs = '?' + qs_arr.join('&');\r\n                r.setStringParameterNoEscape('params', qs);\r\n                output.queryString = qs;\r\n            }\r\n\r\n            var response = r.execute();\r\n            output.endPoint = r.getEndpoint();\r\n            var responseBody = response.getBody();\r\n            output.status = response.getStatusCode();\r\n            output = {\r\n                ...output,\r\n                ...JSON.parse(responseBody)\r\n            };\r\n            output.success = output.status === 200;\r\n\t\t\toutput.message = 'Finished as planned.';\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error('Tenon Template Catalog Error: ' + message);\r\n            output.message = message;\r\n            output.status = 400;\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    get_single: function(base_param, item_id) {\r\n        let output = '{}';\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            r.setStringParameter('params', item_id);\r\n            var response = r.execute();\r\n            var responseBody = response.getBody();\r\n            var httpStatus = response.getStatusCode();\r\n            if (httpStatus === 200) {\r\n                output = responseBody;\r\n            }\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error(message);\r\n        }\r\n\r\n        return JSON.parse(output);\r\n    },\r\n\r\n    type: 'TemplateCatalogUtilsMS'\r\n};",
    "formatted_script": {
      "line_count": 75,
      "char_count": 2445,
      "preview": "var TemplateCatalogUtilsMS = Class.create();\r\nTemplateCatalogUtilsMS.prototype = {\r\n\r\n    initialize: function() {\r\n        this.token = this._getToken();\r\n    },\r\n\r\n    _getToken: function() {\r\n     ...",
      "full_script": "var TemplateCatalogUtilsMS = Class.create();\r\nTemplateCatalogUtilsMS.prototype = {\r\n\r\n    initialize: function() {\r\n        this.token = this._getToken();\r\n    },\r\n\r\n    _getToken: function() {\r\n        return gs.getProperty('x_cadso_automate.template_catalog_token');\r\n    },\r\n\r\n    get: function(base_param, qs_params = null) {\r\n        let output = {\r\n            message: 'Start',\r\n            status: 404,\r\n            success: false\r\n        };\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            // Rebuild qs params\r\n            if (JSON.stringify(qs_params) !== '{}') {\r\n                let qs_arr = [];\r\n                for (var key in qs_params) {\r\n                    qs_arr.push(key + '=' + qs_params[key]);\r\n                }\r\n                let qs = '?' + qs_arr.join('&');\r\n                r.setStringParameterNoEscape('params', qs);\r\n                output.queryString = qs;\r\n            }\r\n\r\n            var response = r.execute();\r\n            output.endPoint = r.getEndpoint();\r\n            var responseBody = response.getBody();\r\n            output.status = response.getStatusCode();\r\n            output = {\r\n                ...output,\r\n                ...JSON.parse(responseBody)\r\n            };\r\n            output.success = output.status === 200;\r\n\t\t\toutput.message = 'Finished as planned.';\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error('Tenon Template Catalog Error: ' + message);\r\n            output.message = message;\r\n            output.status = 400;\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    get_single: function(base_param, item_id) {\r\n        let output = '{}';\r\n\r\n        try {\r\n            var r = new sn_ws.RESTMessageV2('x_cadso_automate.TenonTemplateCatalogApi', base_param);\r\n            r.setStringParameter('token', this.token);\r\n            r.setStringParameter('params', item_id);\r\n            var response = r.execute();\r\n            var responseBody = response.getBody();\r\n            var httpStatus = response.getStatusCode();\r\n            if (httpStatus === 200) {\r\n                output = responseBody;\r\n            }\r\n        } catch (ex) {\r\n            var message = ex.message;\r\n            gs.error(message);\r\n        }\r\n\r\n        return JSON.parse(output);\r\n    },\r\n\r\n    type: 'TemplateCatalogUtilsMS'\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_script_include_9b331a0d87b09e54369f33373cbb35b6",
    "display_value": "sys_script_include_9b331a0d87b09e54369f33373cbb35b6"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "api_name": {
    "value": "x_cadso_automate.TemplateCatalogUtilsMS",
    "display_value": "x_cadso_automate.TemplateCatalogUtilsMS"
  },
  "sys_created_on": {
    "value": "2024-09-20 21:30:18",
    "display_value": "2024-09-20 02:30:18 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "TemplateCatalogUtilsMS",
    "display_value": "TemplateCatalogUtilsMS"
  },
  "sys_name": {
    "value": "TemplateCatalogUtilsMS",
    "display_value": "TemplateCatalogUtilsMS"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "nathan.long",
    "display_value": "nathan.long"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
