{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "06f89e9c87e36910b656fe66cebb35e8",
    "extracted_at": "2025-09-19T21:48:31.503Z",
    "display_value": "activityStreamApi",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "17",
    "display_value": "17"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2024-10-11 02:45:55",
    "display_value": "2024-10-10 07:45:55 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "const activityStreamApi = Class.create();\nactivityStreamApi.prototype = Object.extendsObject(x_cadso_work.activityStreamApiMS, {\n\tinitialize: function () {\n\t\tx_cadso_work.activityStreamApiMS.prototype.initialize.apply(this, arguments);\n\t},\n\n\tgetAvatar: function ({ fieldName, tableGr, imageFieldName }) {\n\t\tlet avatar = \"\";\n\t\tlet displayValue = '';\n\n\t\t\tif (tableGr.isValidField(fieldName) && !tableGr[fieldName].nil()) {\n\t\t\t\tvar regex = /([a-fA-F0-9]){32}/g;\n\t\t\t\tvar fieldValue = tableGr.getValue(fieldName);\n\n\t\t\t\tconst userGr = new GlideRecord(\"sys_user\");\n\t\t\t\tif (fieldValue.match(regex) && userGr.get(fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t} else if (userGr.get('user_name', fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn {avatar: avatar + '.iix', displayValue, };\n\t},\n\n\t_getAvatar: function({userGr}) {\n\t\tlet avatar = userGr.getValue('avatar');\n\t\tavatar = avatar == null ? '' : avatar;\n\t\tlet photo = userGr.getValue('photo');\n\t\tphoto = photo == null ? '' : photo;\n\t\tconst userAvatar = avatar || photo;\n\t\treturn userAvatar ? userAvatar + '.iix' : '';\n\t},\n\n\tgetField: function ({ fieldName, tableGr, value = false, displayValue = false }) {\n\t\treturn {\n\t\t\tdisplayValue: displayValue || tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: value || tableGr.getValue(fieldName),\n\t\t};\n\t},\n\n\tgetDateTimeField: function ({ fieldName, tableGr }) {\n\t\treturn {\n\t\t\tdisplayValue: tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: new GlideDateTime(tableGr.getValue(fieldName)).getNumericValue() + \"\",\n\t\t};\n\t},\n\n\tsortResponse: function () {\n\t\tconst { itemsObj } = this.response;\n\t\tconst reponseArray = [];\n\t\tObject.keys(itemsObj)\n\t\t\t.sort((a, b) => b - a)\n\t\t\t.forEach((key) => {\n\t\t\treponseArray.push(itemsObj[key]);\n\t\t});\n\n\t\tthis.response.items = reponseArray;\n\t},\n\n\ttype: \"activityStreamApi\",\n});\n",
    "display_value": "const activityStreamApi = Class.create();\nactivityStreamApi.prototype = Object.extendsObject(x_cadso_work.activityStreamApiMS, {\n\tinitialize: function () {\n\t\tx_cadso_work.activityStreamApiMS.prototype.initialize.apply(this, arguments);\n\t},\n\n\tgetAvatar: function ({ fieldName, tableGr, imageFieldName }) {\n\t\tlet avatar = \"\";\n\t\tlet displayValue = '';\n\n\t\t\tif (tableGr.isValidField(fieldName) && !tableGr[fieldName].nil()) {\n\t\t\t\tvar regex = /([a-fA-F0-9]){32}/g;\n\t\t\t\tvar fieldValue = tableGr.getValue(fieldName);\n\n\t\t\t\tconst userGr = new GlideRecord(\"sys_user\");\n\t\t\t\tif (fieldValue.match(regex) && userGr.get(fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t} else if (userGr.get('user_name', fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn {avatar: avatar + '.iix', displayValue, };\n\t},\n\n\t_getAvatar: function({userGr}) {\n\t\tlet avatar = userGr.getValue('avatar');\n\t\tavatar = avatar == null ? '' : avatar;\n\t\tlet photo = userGr.getValue('photo');\n\t\tphoto = photo == null ? '' : photo;\n\t\tconst userAvatar = avatar || photo;\n\t\treturn userAvatar ? userAvatar + '.iix' : '';\n\t},\n\n\tgetField: function ({ fieldName, tableGr, value = false, displayValue = false }) {\n\t\treturn {\n\t\t\tdisplayValue: displayValue || tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: value || tableGr.getValue(fieldName),\n\t\t};\n\t},\n\n\tgetDateTimeField: function ({ fieldName, tableGr }) {\n\t\treturn {\n\t\t\tdisplayValue: tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: new GlideDateTime(tableGr.getValue(fieldName)).getNumericValue() + \"\",\n\t\t};\n\t},\n\n\tsortResponse: function () {\n\t\tconst { itemsObj } = this.response;\n\t\tconst reponseArray = [];\n\t\tObject.keys(itemsObj)\n\t\t\t.sort((a, b) => b - a)\n\t\t\t.forEach((key) => {\n\t\t\treponseArray.push(itemsObj[key]);\n\t\t});\n\n\t\tthis.response.items = reponseArray;\n\t},\n\n\ttype: \"activityStreamApi\",\n});\n",
    "formatted_script": {
      "line_count": 65,
      "char_count": 1920,
      "preview": "const activityStreamApi = Class.create();\nactivityStreamApi.prototype = Object.extendsObject(x_cadso_work.activityStreamApiMS, {\n\tinitialize: function () {\n\t\tx_cadso_work.activityStreamApiMS.prototype...",
      "full_script": "const activityStreamApi = Class.create();\nactivityStreamApi.prototype = Object.extendsObject(x_cadso_work.activityStreamApiMS, {\n\tinitialize: function () {\n\t\tx_cadso_work.activityStreamApiMS.prototype.initialize.apply(this, arguments);\n\t},\n\n\tgetAvatar: function ({ fieldName, tableGr, imageFieldName }) {\n\t\tlet avatar = \"\";\n\t\tlet displayValue = '';\n\n\t\t\tif (tableGr.isValidField(fieldName) && !tableGr[fieldName].nil()) {\n\t\t\t\tvar regex = /([a-fA-F0-9]){32}/g;\n\t\t\t\tvar fieldValue = tableGr.getValue(fieldName);\n\n\t\t\t\tconst userGr = new GlideRecord(\"sys_user\");\n\t\t\t\tif (fieldValue.match(regex) && userGr.get(fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t} else if (userGr.get('user_name', fieldValue)) {\n\t\t\t\t\tavatar = this._getAvatar({userGr});\n\t\t\t\t\tdisplayValue = userGr.getDisplayValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn {avatar: avatar + '.iix', displayValue, };\n\t},\n\n\t_getAvatar: function({userGr}) {\n\t\tlet avatar = userGr.getValue('avatar');\n\t\tavatar = avatar == null ? '' : avatar;\n\t\tlet photo = userGr.getValue('photo');\n\t\tphoto = photo == null ? '' : photo;\n\t\tconst userAvatar = avatar || photo;\n\t\treturn userAvatar ? userAvatar + '.iix' : '';\n\t},\n\n\tgetField: function ({ fieldName, tableGr, value = false, displayValue = false }) {\n\t\treturn {\n\t\t\tdisplayValue: displayValue || tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: value || tableGr.getValue(fieldName),\n\t\t};\n\t},\n\n\tgetDateTimeField: function ({ fieldName, tableGr }) {\n\t\treturn {\n\t\t\tdisplayValue: tableGr.getDisplayValue(fieldName),\n\t\t\tvalue: new GlideDateTime(tableGr.getValue(fieldName)).getNumericValue() + \"\",\n\t\t};\n\t},\n\n\tsortResponse: function () {\n\t\tconst { itemsObj } = this.response;\n\t\tconst reponseArray = [];\n\t\tObject.keys(itemsObj)\n\t\t\t.sort((a, b) => b - a)\n\t\t\t.forEach((key) => {\n\t\t\treponseArray.push(itemsObj[key]);\n\t\t});\n\n\t\tthis.response.items = reponseArray;\n\t},\n\n\ttype: \"activityStreamApi\",\n});\n"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_update_name": {
    "value": "sys_script_include_06f89e9c87e36910b656fe66cebb35e8",
    "display_value": "sys_script_include_06f89e9c87e36910b656fe66cebb35e8"
  },
  "sys_updated_by": {
    "value": "trevor.offen",
    "display_value": "trevor.offen"
  },
  "api_name": {
    "value": "x_cadso_work.activityStreamApi",
    "display_value": "x_cadso_work.activityStreamApi"
  },
  "sys_created_on": {
    "value": "2023-06-16 17:31:56",
    "display_value": "2023-06-16 10:31:56 AM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "activityStreamApi",
    "display_value": "activityStreamApi"
  },
  "sys_name": {
    "value": "activityStreamApi",
    "display_value": "activityStreamApi"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
