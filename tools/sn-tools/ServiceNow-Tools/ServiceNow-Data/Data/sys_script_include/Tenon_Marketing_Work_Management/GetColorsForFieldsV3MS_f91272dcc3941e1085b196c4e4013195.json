{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "f91272dcc3941e1085b196c4e4013195",
    "extracted_at": "2025-09-19T21:48:29.273Z",
    "display_value": "GetColorsForFieldsV3MS",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "24",
    "display_value": "24"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-06-18 14:40:58",
    "display_value": "2025-06-18 07:40:58 AM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "const GetColorsForFieldsV3MS = Class.create();\r\nGetColorsForFieldsV3MS.prototype = {\r\n    initialize: function() {\r\n        this.colorsV3 = {};\r\n        this.tables = {};\r\n        this.tablesArr = [\r\n            \"x_cadso_work_campaign\",\r\n            \"x_cadso_work_project\",\r\n            \"x_cadso_work_task\",\r\n            \"x_cadso_work_goal\",\r\n            \"x_cadso_work_sprint\",\r\n            \"x_cadso_work_sprint_retro\",\r\n            \"x_cadso_automate_email\",\r\n\t\t\t\"x_cadso_automate_message\",\r\n\t\t\t\"x_cadso_journey_flow\",\r\n\t\t\t\"x_cadso_cloud_page\",\r\n        ];\r\n        this.tablesArr.forEach(function(table) {\r\n            this.tables[table] = {\r\n                state: {},\r\n                status: {},\r\n            };\r\n        }, this);\r\n\r\n        this.colors = {\r\n            rejected: {\r\n                key: \"rejected\",\r\n                dotColor: \"#D92B2B\",\r\n                colorBackground: \"#F43E3E80\",\r\n                colorHover: \"#F43E3EBF\",\r\n                colorActive: \"#F43E3E\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            neutral: {\r\n                key: \"neutral\",\r\n                dotColor: \"#D2DAD5\",\r\n                colorBackground: \"#F5F9F5\",\r\n                colorHover: \"#ECF3EF\",\r\n                colorActive: \"#D2DAD5\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            purple: {\r\n                key: \"purple\",\r\n                dotColor: \"#C0C7FF\",\r\n                colorBackground: \"#C0C7FF80\",\r\n                colorHover: \"#C0C7FFBF\",\r\n                colorActive: \"#C0C7FF\",\r\n                textColor: \"#000B6C\",\r\n            },\r\n            pink: {\r\n                key: \"pink\",\r\n                dotColor: \"#FC8DFE\",\r\n                colorBackground: \"#FEB5FF80\",\r\n                colorHover: \"#FEB5FFBF\",\r\n                colorActive: \"#FEB5FF\",\r\n                textColor: \"#650067\",\r\n            },\r\n            brightGreen: {\r\n                key: \"brightGreen\",\r\n                dotColor: \"#62DC44\",\r\n                colorBackground: \"#B5F5A6\",\r\n                colorHover: \"#77F059\",\r\n                colorActive: \"#62DC44\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            orange: {\r\n                key: \"orange\",\r\n                dotColor: \"#FE853B\",\r\n                colorBackground: \"#FEB68B80\",\r\n                colorHover: \"#FEB68BBF\",\r\n                colorActive: \"#FEB68B\",\r\n                textColor: \"#672700\",\r\n            },\r\n            blue: {\r\n                key: \"blue\",\r\n                dotColor: \"#A5E4FF\",\r\n                colorBackground: \"#C9EDFC80\",\r\n                colorHover: \"#C9EDFCBF\",\r\n                colorActive: \"#C9EDFC\",\r\n                textColor: \"#015072\",\r\n            },\r\n            yellow: {\r\n                key: \"yellow\",\r\n                dotColor: \"#FEED51\",\r\n                colorBackground: \"#FCF19380\",\r\n                colorHover: \"#FCF193BF\",\r\n                colorActive: \"#FCF193\",\r\n                textColor: \"#685E00\",\r\n            },\r\n            softGreen: {\r\n                key: \"softGreen\",\r\n                dotColor: \"#32B57F\",\r\n                colorBackground: \"#32B57F80\",\r\n                colorHover: \"#32B57FBF\",\r\n                colorActive: \"#32B57F\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            red: {\r\n                key: \"red\",\r\n                dotColor: \"#FE6666\",\r\n                colorBackground: \"#FF909080\",\r\n                colorHover: \"#FF9090BF\",\r\n                colorActive: \"#FF9090\",\r\n                textColor: \"#8A0404\",\r\n            },\r\n        };\r\n    },\r\n\r\n    fetchV3: function({\r\n        statusField\r\n    }) {\r\n        let statusFieldQuery = [\"element=state\", \"element=status\"];\r\n        if (statusField && statusField !== 'state' && statusField !== 'status') {\r\n            statusFieldQuery.push('element=' + statusField);\r\n        }\r\n        const sysChoiceGr = new GlideRecord(\"sys_choice\");\r\n        sysChoiceGr.addEncodedQuery(statusFieldQuery.join('^OR'));\r\n        sysChoiceGr.addEncodedQuery(\"nameSTARTSWITHx_cadso_work^ORnameSTARTSWITHx_cadso_automate^ORnameSTARTSWITHx_cadso_cloud\");\r\n        sysChoiceGr.addQuery(\"inactive\", false);\r\n        sysChoiceGr.orderBy(\"table\");\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const table = sysChoiceGr.getValue(\"name\");\r\n            const label = sysChoiceGr.getValue(\"label\");\r\n            const value = sysChoiceGr.getValue(\"value\");\r\n            const element = sysChoiceGr.getValue(\"element\");\r\n            const color = this.selectColors(label);\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n\r\n            if (!this.tables[table][element]) {\r\n                this.tables[table][element] = {};\r\n            }\r\n            this.tables[table][element][value] = color;\r\n        }\r\n\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(\"active=true^visible=true\");\r\n        statusGr.orderBy(\"table\");\r\n        statusGr.query();\r\n\r\n        while (statusGr.next()) {\r\n            const label = statusGr.getValue(\"label\");\r\n            const table = statusGr.getValue(\"table\");\r\n            const value = statusGr.getUniqueValue();\r\n            const color = this.selectColors(label);\r\n\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n            this.tables[table].status[value] = color;\r\n        }\r\n\r\n        return this.tables;\r\n    },\r\n\r\n    selectColors: function(label = \"\") {\r\n        // This function is looking at the label and forcing them into a camelcase for the switch.\r\n        let selectedColor = {};\r\n        const camelCaseLabel = (label + \"\")\r\n            .split(\" \")\r\n            .map((word, index) => {\r\n                if (index === 0) return word.toLowerCase();\r\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n            })\r\n            .join(\"\");\r\n\r\n        switch (camelCaseLabel) {\r\n            case \"backlogged\":\r\n            case \"closedSkipped\":\r\n            case \"archived\":\r\n                selectedColor = this.colors.neutral;\r\n                break;\r\n            case \"new\":\r\n            case \"requested\":\r\n\t\t\tcase \"published\":\r\n                selectedColor = this.colors.purple;\r\n                break;\r\n            case \"planning\":\r\n            case \"read\":\r\n                selectedColor = this.colors.pink;\r\n                break;\r\n            case \"approved\":\r\n                selectedColor = this.colors.brightGreen;\r\n                break;\r\n            case \"upcoming\":\r\n            case \"queue\":\r\n                selectedColor = this.colors.orange;\r\n                break;\r\n            case \"workInProgress\":\r\n            case \"inProgress\":\r\n            case \"open\":\r\n            case \"current\":\r\n            case \"draft\":\r\n                selectedColor = this.colors.blue;\r\n                break;\r\n            case \"blocked\":\r\n            case \"onHold\":\r\n            case \"closedIncomplete\":\r\n            case \"scheduled\":\r\n                selectedColor = this.colors.yellow;\r\n                break;\r\n            case \"closedComplete\":\r\n            case \"closedCompleted\":\r\n            case \"complete\":\r\n            case \"completed\":\r\n            case \"sent\":\r\n\t\t\tcase \"verified\":\r\n                selectedColor = this.colors.softGreen;\r\n                break;\r\n            case \"cancelled\":\r\n            case \"canceled\":\r\n            case \"cancel\":\r\n            case \"rejected\":\r\n            case \"notVerified\":\r\n                selectedColor = this.colors.red;\r\n                break;\r\n            default:\r\n                selectedColor = this.colors[label] || this.colors.neutral;\r\n                break;\r\n        }\r\n\r\n        return selectedColor;\r\n    },\r\n\r\n    type: \"GetColorsForFieldsV3MS\",\r\n};",
    "display_value": "const GetColorsForFieldsV3MS = Class.create();\r\nGetColorsForFieldsV3MS.prototype = {\r\n    initialize: function() {\r\n        this.colorsV3 = {};\r\n        this.tables = {};\r\n        this.tablesArr = [\r\n            \"x_cadso_work_campaign\",\r\n            \"x_cadso_work_project\",\r\n            \"x_cadso_work_task\",\r\n            \"x_cadso_work_goal\",\r\n            \"x_cadso_work_sprint\",\r\n            \"x_cadso_work_sprint_retro\",\r\n            \"x_cadso_automate_email\",\r\n\t\t\t\"x_cadso_automate_message\",\r\n\t\t\t\"x_cadso_journey_flow\",\r\n\t\t\t\"x_cadso_cloud_page\",\r\n        ];\r\n        this.tablesArr.forEach(function(table) {\r\n            this.tables[table] = {\r\n                state: {},\r\n                status: {},\r\n            };\r\n        }, this);\r\n\r\n        this.colors = {\r\n            rejected: {\r\n                key: \"rejected\",\r\n                dotColor: \"#D92B2B\",\r\n                colorBackground: \"#F43E3E80\",\r\n                colorHover: \"#F43E3EBF\",\r\n                colorActive: \"#F43E3E\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            neutral: {\r\n                key: \"neutral\",\r\n                dotColor: \"#D2DAD5\",\r\n                colorBackground: \"#F5F9F5\",\r\n                colorHover: \"#ECF3EF\",\r\n                colorActive: \"#D2DAD5\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            purple: {\r\n                key: \"purple\",\r\n                dotColor: \"#C0C7FF\",\r\n                colorBackground: \"#C0C7FF80\",\r\n                colorHover: \"#C0C7FFBF\",\r\n                colorActive: \"#C0C7FF\",\r\n                textColor: \"#000B6C\",\r\n            },\r\n            pink: {\r\n                key: \"pink\",\r\n                dotColor: \"#FC8DFE\",\r\n                colorBackground: \"#FEB5FF80\",\r\n                colorHover: \"#FEB5FFBF\",\r\n                colorActive: \"#FEB5FF\",\r\n                textColor: \"#650067\",\r\n            },\r\n            brightGreen: {\r\n                key: \"brightGreen\",\r\n                dotColor: \"#62DC44\",\r\n                colorBackground: \"#B5F5A6\",\r\n                colorHover: \"#77F059\",\r\n                colorActive: \"#62DC44\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            orange: {\r\n                key: \"orange\",\r\n                dotColor: \"#FE853B\",\r\n                colorBackground: \"#FEB68B80\",\r\n                colorHover: \"#FEB68BBF\",\r\n                colorActive: \"#FEB68B\",\r\n                textColor: \"#672700\",\r\n            },\r\n            blue: {\r\n                key: \"blue\",\r\n                dotColor: \"#A5E4FF\",\r\n                colorBackground: \"#C9EDFC80\",\r\n                colorHover: \"#C9EDFCBF\",\r\n                colorActive: \"#C9EDFC\",\r\n                textColor: \"#015072\",\r\n            },\r\n            yellow: {\r\n                key: \"yellow\",\r\n                dotColor: \"#FEED51\",\r\n                colorBackground: \"#FCF19380\",\r\n                colorHover: \"#FCF193BF\",\r\n                colorActive: \"#FCF193\",\r\n                textColor: \"#685E00\",\r\n            },\r\n            softGreen: {\r\n                key: \"softGreen\",\r\n                dotColor: \"#32B57F\",\r\n                colorBackground: \"#32B57F80\",\r\n                colorHover: \"#32B57FBF\",\r\n                colorActive: \"#32B57F\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            red: {\r\n                key: \"red\",\r\n                dotColor: \"#FE6666\",\r\n                colorBackground: \"#FF909080\",\r\n                colorHover: \"#FF9090BF\",\r\n                colorActive: \"#FF9090\",\r\n                textColor: \"#8A0404\",\r\n            },\r\n        };\r\n    },\r\n\r\n    fetchV3: function({\r\n        statusField\r\n    }) {\r\n        let statusFieldQuery = [\"element=state\", \"element=status\"];\r\n        if (statusField && statusField !== 'state' && statusField !== 'status') {\r\n            statusFieldQuery.push('element=' + statusField);\r\n        }\r\n        const sysChoiceGr = new GlideRecord(\"sys_choice\");\r\n        sysChoiceGr.addEncodedQuery(statusFieldQuery.join('^OR'));\r\n        sysChoiceGr.addEncodedQuery(\"nameSTARTSWITHx_cadso_work^ORnameSTARTSWITHx_cadso_automate^ORnameSTARTSWITHx_cadso_cloud\");\r\n        sysChoiceGr.addQuery(\"inactive\", false);\r\n        sysChoiceGr.orderBy(\"table\");\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const table = sysChoiceGr.getValue(\"name\");\r\n            const label = sysChoiceGr.getValue(\"label\");\r\n            const value = sysChoiceGr.getValue(\"value\");\r\n            const element = sysChoiceGr.getValue(\"element\");\r\n            const color = this.selectColors(label);\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n\r\n            if (!this.tables[table][element]) {\r\n                this.tables[table][element] = {};\r\n            }\r\n            this.tables[table][element][value] = color;\r\n        }\r\n\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(\"active=true^visible=true\");\r\n        statusGr.orderBy(\"table\");\r\n        statusGr.query();\r\n\r\n        while (statusGr.next()) {\r\n            const label = statusGr.getValue(\"label\");\r\n            const table = statusGr.getValue(\"table\");\r\n            const value = statusGr.getUniqueValue();\r\n            const color = this.selectColors(label);\r\n\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n            this.tables[table].status[value] = color;\r\n        }\r\n\r\n        return this.tables;\r\n    },\r\n\r\n    selectColors: function(label = \"\") {\r\n        // This function is looking at the label and forcing them into a camelcase for the switch.\r\n        let selectedColor = {};\r\n        const camelCaseLabel = (label + \"\")\r\n            .split(\" \")\r\n            .map((word, index) => {\r\n                if (index === 0) return word.toLowerCase();\r\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n            })\r\n            .join(\"\");\r\n\r\n        switch (camelCaseLabel) {\r\n            case \"backlogged\":\r\n            case \"closedSkipped\":\r\n            case \"archived\":\r\n                selectedColor = this.colors.neutral;\r\n                break;\r\n            case \"new\":\r\n            case \"requested\":\r\n\t\t\tcase \"published\":\r\n                selectedColor = this.colors.purple;\r\n                break;\r\n            case \"planning\":\r\n            case \"read\":\r\n                selectedColor = this.colors.pink;\r\n                break;\r\n            case \"approved\":\r\n                selectedColor = this.colors.brightGreen;\r\n                break;\r\n            case \"upcoming\":\r\n            case \"queue\":\r\n                selectedColor = this.colors.orange;\r\n                break;\r\n            case \"workInProgress\":\r\n            case \"inProgress\":\r\n            case \"open\":\r\n            case \"current\":\r\n            case \"draft\":\r\n                selectedColor = this.colors.blue;\r\n                break;\r\n            case \"blocked\":\r\n            case \"onHold\":\r\n            case \"closedIncomplete\":\r\n            case \"scheduled\":\r\n                selectedColor = this.colors.yellow;\r\n                break;\r\n            case \"closedComplete\":\r\n            case \"closedCompleted\":\r\n            case \"complete\":\r\n            case \"completed\":\r\n            case \"sent\":\r\n\t\t\tcase \"verified\":\r\n                selectedColor = this.colors.softGreen;\r\n                break;\r\n            case \"cancelled\":\r\n            case \"canceled\":\r\n            case \"cancel\":\r\n            case \"rejected\":\r\n            case \"notVerified\":\r\n                selectedColor = this.colors.red;\r\n                break;\r\n            default:\r\n                selectedColor = this.colors[label] || this.colors.neutral;\r\n                break;\r\n        }\r\n\r\n        return selectedColor;\r\n    },\r\n\r\n    type: \"GetColorsForFieldsV3MS\",\r\n};",
    "formatted_script": {
      "line_count": 235,
      "char_count": 7995,
      "preview": "const GetColorsForFieldsV3MS = Class.create();\r\nGetColorsForFieldsV3MS.prototype = {\r\n    initialize: function() {\r\n        this.colorsV3 = {};\r\n        this.tables = {};\r\n        this.tablesArr = [\r\n...",
      "full_script": "const GetColorsForFieldsV3MS = Class.create();\r\nGetColorsForFieldsV3MS.prototype = {\r\n    initialize: function() {\r\n        this.colorsV3 = {};\r\n        this.tables = {};\r\n        this.tablesArr = [\r\n            \"x_cadso_work_campaign\",\r\n            \"x_cadso_work_project\",\r\n            \"x_cadso_work_task\",\r\n            \"x_cadso_work_goal\",\r\n            \"x_cadso_work_sprint\",\r\n            \"x_cadso_work_sprint_retro\",\r\n            \"x_cadso_automate_email\",\r\n\t\t\t\"x_cadso_automate_message\",\r\n\t\t\t\"x_cadso_journey_flow\",\r\n\t\t\t\"x_cadso_cloud_page\",\r\n        ];\r\n        this.tablesArr.forEach(function(table) {\r\n            this.tables[table] = {\r\n                state: {},\r\n                status: {},\r\n            };\r\n        }, this);\r\n\r\n        this.colors = {\r\n            rejected: {\r\n                key: \"rejected\",\r\n                dotColor: \"#D92B2B\",\r\n                colorBackground: \"#F43E3E80\",\r\n                colorHover: \"#F43E3EBF\",\r\n                colorActive: \"#F43E3E\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            neutral: {\r\n                key: \"neutral\",\r\n                dotColor: \"#D2DAD5\",\r\n                colorBackground: \"#F5F9F5\",\r\n                colorHover: \"#ECF3EF\",\r\n                colorActive: \"#D2DAD5\",\r\n                textColor: \"#072D18\",\r\n            },\r\n            purple: {\r\n                key: \"purple\",\r\n                dotColor: \"#C0C7FF\",\r\n                colorBackground: \"#C0C7FF80\",\r\n                colorHover: \"#C0C7FFBF\",\r\n                colorActive: \"#C0C7FF\",\r\n                textColor: \"#000B6C\",\r\n            },\r\n            pink: {\r\n                key: \"pink\",\r\n                dotColor: \"#FC8DFE\",\r\n                colorBackground: \"#FEB5FF80\",\r\n                colorHover: \"#FEB5FFBF\",\r\n                colorActive: \"#FEB5FF\",\r\n                textColor: \"#650067\",\r\n            },\r\n            brightGreen: {\r\n                key: \"brightGreen\",\r\n                dotColor: \"#62DC44\",\r\n                colorBackground: \"#B5F5A6\",\r\n                colorHover: \"#77F059\",\r\n                colorActive: \"#62DC44\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            orange: {\r\n                key: \"orange\",\r\n                dotColor: \"#FE853B\",\r\n                colorBackground: \"#FEB68B80\",\r\n                colorHover: \"#FEB68BBF\",\r\n                colorActive: \"#FEB68B\",\r\n                textColor: \"#672700\",\r\n            },\r\n            blue: {\r\n                key: \"blue\",\r\n                dotColor: \"#A5E4FF\",\r\n                colorBackground: \"#C9EDFC80\",\r\n                colorHover: \"#C9EDFCBF\",\r\n                colorActive: \"#C9EDFC\",\r\n                textColor: \"#015072\",\r\n            },\r\n            yellow: {\r\n                key: \"yellow\",\r\n                dotColor: \"#FEED51\",\r\n                colorBackground: \"#FCF19380\",\r\n                colorHover: \"#FCF193BF\",\r\n                colorActive: \"#FCF193\",\r\n                textColor: \"#685E00\",\r\n            },\r\n            softGreen: {\r\n                key: \"softGreen\",\r\n                dotColor: \"#32B57F\",\r\n                colorBackground: \"#32B57F80\",\r\n                colorHover: \"#32B57FBF\",\r\n                colorActive: \"#32B57F\",\r\n                textColor: \"#013F25\",\r\n            },\r\n            red: {\r\n                key: \"red\",\r\n                dotColor: \"#FE6666\",\r\n                colorBackground: \"#FF909080\",\r\n                colorHover: \"#FF9090BF\",\r\n                colorActive: \"#FF9090\",\r\n                textColor: \"#8A0404\",\r\n            },\r\n        };\r\n    },\r\n\r\n    fetchV3: function({\r\n        statusField\r\n    }) {\r\n        let statusFieldQuery = [\"element=state\", \"element=status\"];\r\n        if (statusField && statusField !== 'state' && statusField !== 'status') {\r\n            statusFieldQuery.push('element=' + statusField);\r\n        }\r\n        const sysChoiceGr = new GlideRecord(\"sys_choice\");\r\n        sysChoiceGr.addEncodedQuery(statusFieldQuery.join('^OR'));\r\n        sysChoiceGr.addEncodedQuery(\"nameSTARTSWITHx_cadso_work^ORnameSTARTSWITHx_cadso_automate^ORnameSTARTSWITHx_cadso_cloud\");\r\n        sysChoiceGr.addQuery(\"inactive\", false);\r\n        sysChoiceGr.orderBy(\"table\");\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const table = sysChoiceGr.getValue(\"name\");\r\n            const label = sysChoiceGr.getValue(\"label\");\r\n            const value = sysChoiceGr.getValue(\"value\");\r\n            const element = sysChoiceGr.getValue(\"element\");\r\n            const color = this.selectColors(label);\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n\r\n            if (!this.tables[table][element]) {\r\n                this.tables[table][element] = {};\r\n            }\r\n            this.tables[table][element][value] = color;\r\n        }\r\n\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(\"active=true^visible=true\");\r\n        statusGr.orderBy(\"table\");\r\n        statusGr.query();\r\n\r\n        while (statusGr.next()) {\r\n            const label = statusGr.getValue(\"label\");\r\n            const table = statusGr.getValue(\"table\");\r\n            const value = statusGr.getUniqueValue();\r\n            const color = this.selectColors(label);\r\n\r\n            if (!this.tables[table]) {\r\n                this.tables[table] = {\r\n                    status: {},\r\n                    state: {},\r\n                };\r\n            }\r\n            this.tables[table].status[value] = color;\r\n        }\r\n\r\n        return this.tables;\r\n    },\r\n\r\n    selectColors: function(label = \"\") {\r\n        // This function is looking at the label and forcing them into a camelcase for the switch.\r\n        let selectedColor = {};\r\n        const camelCaseLabel = (label + \"\")\r\n            .split(\" \")\r\n            .map((word, index) => {\r\n                if (index === 0) return word.toLowerCase();\r\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n            })\r\n            .join(\"\");\r\n\r\n        switch (camelCaseLabel) {\r\n            case \"backlogged\":\r\n            case \"closedSkipped\":\r\n            case \"archived\":\r\n                selectedColor = this.colors.neutral;\r\n                break;\r\n            case \"new\":\r\n            case \"requested\":\r\n\t\t\tcase \"published\":\r\n                selectedColor = this.colors.purple;\r\n                break;\r\n            case \"planning\":\r\n            case \"read\":\r\n                selectedColor = this.colors.pink;\r\n                break;\r\n            case \"approved\":\r\n                selectedColor = this.colors.brightGreen;\r\n                break;\r\n            case \"upcoming\":\r\n            case \"queue\":\r\n                selectedColor = this.colors.orange;\r\n                break;\r\n            case \"workInProgress\":\r\n            case \"inProgress\":\r\n            case \"open\":\r\n            case \"current\":\r\n            case \"draft\":\r\n                selectedColor = this.colors.blue;\r\n                break;\r\n            case \"blocked\":\r\n            case \"onHold\":\r\n            case \"closedIncomplete\":\r\n            case \"scheduled\":\r\n                selectedColor = this.colors.yellow;\r\n                break;\r\n            case \"closedComplete\":\r\n            case \"closedCompleted\":\r\n            case \"complete\":\r\n            case \"completed\":\r\n            case \"sent\":\r\n\t\t\tcase \"verified\":\r\n                selectedColor = this.colors.softGreen;\r\n                break;\r\n            case \"cancelled\":\r\n            case \"canceled\":\r\n            case \"cancel\":\r\n            case \"rejected\":\r\n            case \"notVerified\":\r\n                selectedColor = this.colors.red;\r\n                break;\r\n            default:\r\n                selectedColor = this.colors[label] || this.colors.neutral;\r\n                break;\r\n        }\r\n\r\n        return selectedColor;\r\n    },\r\n\r\n    type: \"GetColorsForFieldsV3MS\",\r\n};"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_update_name": {
    "value": "sys_script_include_f91272dcc3941e1085b196c4e4013195",
    "display_value": "sys_script_include_f91272dcc3941e1085b196c4e4013195"
  },
  "sys_updated_by": {
    "value": "desiree.morehouse",
    "display_value": "desiree.morehouse"
  },
  "api_name": {
    "value": "x_cadso_work.GetColorsForFieldsV3MS",
    "display_value": "x_cadso_work.GetColorsForFieldsV3MS"
  },
  "sys_created_on": {
    "value": "2024-08-24 18:31:06",
    "display_value": "2024-08-24 11:31:06 AM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "GetColorsForFieldsV3MS",
    "display_value": "GetColorsForFieldsV3MS"
  },
  "sys_name": {
    "value": "GetColorsForFieldsV3MS",
    "display_value": "GetColorsForFieldsV3MS"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
