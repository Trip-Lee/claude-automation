{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "27c5faa4477ca11085d19fd8036d43c4",
    "extracted_at": "2025-09-19T21:48:31.808Z",
    "display_value": "WorkUtilsMS",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "true",
    "display_value": "true"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "74",
    "display_value": "74"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2024-10-11 02:45:58",
    "display_value": "2024-10-10 07:45:58 PM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "true",
    "display_value": "true"
  },
  "script": {
    "value": "var WorkUtilsMS = Class.create();\nWorkUtilsMS.prototype = Object.extendsObject(x_cadso_work.SegmentUtils, {\n    initialize: function() {\n        x_cadso_work.SegmentUtils.prototype.initialize.apply(this, arguments);\n    },\n\n    groupMemeber: function() {\n        // if (!gs.hasRole('x_cadso_work.admin')) {\n        if (!gs.hasRole('x_cadso_work.manager')) {\n            var gp = ' ';\n\n            //sys_user_grmember has the user to group relationship\n            var grp = new GlideRecord('sys_user_grmember');\n            grp.addQuery('user', gs.getUserID());\n            grp.query();\n            while (grp.next()) {\n                if (gp.length > 0) {\n                    //build a comma separated string of groups if there is more than one\n                    gp += (',' + grp.group);\n                } else {\n                    gp = grp.group;\n                }\n            }\n            // return Groups where assigned to is in those groups we use IN for lists\n            return 'sys_idIN' + gp;\n        }\n\n\n    },\n\n    type: 'WorkUtilsMS'\n});",
    "display_value": "var WorkUtilsMS = Class.create();\nWorkUtilsMS.prototype = Object.extendsObject(x_cadso_work.SegmentUtils, {\n    initialize: function() {\n        x_cadso_work.SegmentUtils.prototype.initialize.apply(this, arguments);\n    },\n\n    groupMemeber: function() {\n        // if (!gs.hasRole('x_cadso_work.admin')) {\n        if (!gs.hasRole('x_cadso_work.manager')) {\n            var gp = ' ';\n\n            //sys_user_grmember has the user to group relationship\n            var grp = new GlideRecord('sys_user_grmember');\n            grp.addQuery('user', gs.getUserID());\n            grp.query();\n            while (grp.next()) {\n                if (gp.length > 0) {\n                    //build a comma separated string of groups if there is more than one\n                    gp += (',' + grp.group);\n                } else {\n                    gp = grp.group;\n                }\n            }\n            // return Groups where assigned to is in those groups we use IN for lists\n            return 'sys_idIN' + gp;\n        }\n\n\n    },\n\n    type: 'WorkUtilsMS'\n});",
    "formatted_script": {
      "line_count": 32,
      "char_count": 1053,
      "preview": "var WorkUtilsMS = Class.create();\nWorkUtilsMS.prototype = Object.extendsObject(x_cadso_work.SegmentUtils, {\n    initialize: function() {\n        x_cadso_work.SegmentUtils.prototype.initialize.apply(th...",
      "full_script": "var WorkUtilsMS = Class.create();\nWorkUtilsMS.prototype = Object.extendsObject(x_cadso_work.SegmentUtils, {\n    initialize: function() {\n        x_cadso_work.SegmentUtils.prototype.initialize.apply(this, arguments);\n    },\n\n    groupMemeber: function() {\n        // if (!gs.hasRole('x_cadso_work.admin')) {\n        if (!gs.hasRole('x_cadso_work.manager')) {\n            var gp = ' ';\n\n            //sys_user_grmember has the user to group relationship\n            var grp = new GlideRecord('sys_user_grmember');\n            grp.addQuery('user', gs.getUserID());\n            grp.query();\n            while (grp.next()) {\n                if (gp.length > 0) {\n                    //build a comma separated string of groups if there is more than one\n                    gp += (',' + grp.group);\n                } else {\n                    gp = grp.group;\n                }\n            }\n            // return Groups where assigned to is in those groups we use IN for lists\n            return 'sys_idIN' + gp;\n        }\n\n\n    },\n\n    type: 'WorkUtilsMS'\n});"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_update_name": {
    "value": "sys_script_include_27c5faa4477ca11085d19fd8036d43c4",
    "display_value": "sys_script_include_27c5faa4477ca11085d19fd8036d43c4"
  },
  "sys_updated_by": {
    "value": "trevor.offen",
    "display_value": "trevor.offen"
  },
  "api_name": {
    "value": "x_cadso_work.WorkUtilsMS",
    "display_value": "x_cadso_work.WorkUtilsMS"
  },
  "sys_created_on": {
    "value": "2023-01-31 21:24:27",
    "display_value": "2023-01-31 01:24:27 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "WorkUtilsMS",
    "display_value": "WorkUtilsMS"
  },
  "sys_name": {
    "value": "WorkUtilsMS",
    "display_value": "WorkUtilsMS"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "Cole.Mefford",
    "display_value": "Cole.Mefford"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
