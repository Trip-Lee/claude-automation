{
  "_metadata": {
    "table": "sys_script_include",
    "sys_id": "d1fa741647f73d10b0361ae8036d4374",
    "extracted_at": "2025-09-19T21:48:31.047Z",
    "display_value": "GetColorsForFieldsMS",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "access": {
    "value": "public",
    "display_value": "All application scopes"
  },
  "mobile_callable": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "63",
    "display_value": "63"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_on": {
    "value": "2025-07-09 14:52:02",
    "display_value": "2025-07-09 07:52:02 AM"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sandbox_callable": {
    "value": "false",
    "display_value": "false"
  },
  "script": {
    "value": "const GetColorsForFieldsMS = Class.create();\r\nGetColorsForFieldsMS.prototype = Object.extendsObject(x_cadso_work.GetColorsForFieldsV3MS, {\r\n    initialize: function() {\r\n        x_cadso_work.GetColorsForFieldsV3MS.prototype.initialize.apply(this, arguments);\r\n        this.states = [];\r\n        this.state = {};\r\n        this.priorities = [];\r\n        this.priority = {};\r\n        this.status = {};\r\n        this.icons = {};\r\n        this.refColors = {};\r\n        this.userAvatars = {};\r\n    },\r\n\r\n    fetchV2: function({\r\n        table,\r\n        field,\r\n        getChoices = false\r\n    }) {\r\n        if (table === 'x_cadso_work_task' && field === 'status') {\r\n            return this.getTaskStatus(getChoices);\r\n        } else {\r\n            return this.getColors({\r\n                table,\r\n                field,\r\n                getChoices\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    getColors: function({\r\n        table,\r\n        field,\r\n        getChoices\r\n    }) {\r\n        var workColorGr = new GlideRecord('x_cadso_work_color');\r\n        workColorGr.addQuery('table', table);\r\n        workColorGr.addQuery('field', field);\r\n        workColorGr.query();\r\n        const colors = {};\r\n        let states = [];\r\n\r\n        while (workColorGr.next()) {\r\n            const value = workColorGr.getValue('value');\r\n\r\n            colors[value] = {\r\n                color: workColorGr.getValue('color'),\r\n                colorHover: workColorGr.getValue('color_hover'),\r\n                colorBackground: workColorGr.getValue('color_background'),\r\n                colorActive: workColorGr.getValue('color_active'),\r\n                label: workColorGr.getValue('display_value'),\r\n                value,\r\n                sysId: workColorGr.getUniqueValue(),\r\n                type: value === '333' ? \"archive\" : value === '22' ? \"hold\" : 'updateState'\r\n            };\r\n        }\r\n\r\n        if (getChoices) {\r\n            states = this.getStateChoices({\r\n                table,\r\n                field,\r\n                colors\r\n            });\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    getStateChoices: function({\r\n        table,\r\n        field,\r\n        colors\r\n    }) {\r\n        const states = [];\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=${field}^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            states.push(colors[value]);\r\n        }\r\n\r\n        return states;\r\n    },\r\n\r\n    getTaskStatus: function(getChoices) {\r\n        var workStatusGr = new GlideRecord('x_cadso_work_status');\r\n        workStatusGr.addEncodedQuery('active=true^visible=true');\r\n        workStatusGr.orderBy('sequence');\r\n        workStatusGr.query();\r\n        const colors = {};\r\n        const states = [];\r\n\r\n        while (workStatusGr.next()) {\r\n            const sysId = workStatusGr.getUniqueValue();\r\n            const state = workStatusGr.getValue('state');\r\n\r\n            colors[sysId] = {\r\n                color: workStatusGr.getValue('color'),\r\n                colorHover: workStatusGr.getValue('color_hover'),\r\n                colorBackground: workStatusGr.getValue('color_background'),\r\n                colorActive: workStatusGr.getValue('color_active'),\r\n                label: workStatusGr.getValue('label'),\r\n                value: sysId,\r\n                sysId,\r\n                type: state === '333' ? \"archive\" : state === '22' ? \"hold\" : 'updateState'\r\n            };\r\n\r\n            if (getChoices) {\r\n                states.push(colors[sysId]);\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    fetch: function(table, requiredUpdate, requiredUpdates) {\r\n        this.setStates(table);\r\n        this.getStateColor(table);\r\n        this.setPriorities(table);\r\n        this.getPriorityColor(table);\r\n        this.getStatus(table);\r\n        this.getIcons();\r\n        let avatars = {};\r\n        let tableColors = {};\r\n\r\n        if (requiredUpdate + '' === 'true') {\r\n            Object.keys(requiredUpdates.avatars).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.avatars[sysId];\r\n                objectBeingUpdate.avatar = this._getCachedAvatar(objectBeingUpdate);\r\n                requiredUpdates.avatars[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            Object.keys(requiredUpdates.colors).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.colors[sysId];\r\n                objectBeingUpdate.color = this._getCachedColors(objectBeingUpdate);\r\n                requiredUpdates.colors[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            avatars = requiredUpdates.avatars;\r\n            tableColors = requiredUpdates.colors;\r\n        }\r\n\r\n        return {\r\n            state: this.state,\r\n            priority: this.priority,\r\n            urgency: this.priority,\r\n            impact: this.priority,\r\n            status: this.status,\r\n            icons: this.icons,\r\n            tableColors,\r\n            avatars,\r\n            requiredUpdate\r\n        };\r\n    },\r\n\r\n    getIcons: function() {\r\n        this.icons = {\r\n            campaign: \"circleFilled\",\r\n            x_cadso_work_campaign: \"circleFilled\",\r\n            project: \"roundedSquare\",\r\n            x_cadso_work_project: \"roundedSquare\",\r\n            state: \"circleFilled\",\r\n            status: \"circleFilled\",\r\n            // \t\t\tpriority: \"roundedSquare\", // no icon = use class\r\n        };\r\n    },\r\n\r\n    getStatus: function(table) {\r\n        if (table === 'x_cadso_automate_email') {\r\n            const {\r\n            statusArray,\r\n            statusObject: status\r\n        } = this.getStatusChoice({ table });\r\n\t\t\tthis.status = status;\r\n            return;\r\n        }\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(`table=${table}^active=true`);\r\n        statusGr.query();\r\n        this.status = {};\r\n        while (statusGr.next()) {\r\n            this.status[statusGr.getUniqueValue()] = {\r\n                color: statusGr.getDisplayValue(\"color\"),\r\n                displayValue: statusGr.getDisplayValue(\"label\"),\r\n                value: statusGr.getUniqueValue(),\r\n            };\r\n        }\r\n    },\r\n\r\n    getStatusChoice: function({\r\n        table,\r\n    }) {\r\n        const statusArray = [];\r\n        const statusObject = {};\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=status^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\t\t\tconst item = {\r\n                color,\r\n                className\r\n            };\r\n            statusArray.push(item);\r\n            statusObject[value] = item;\r\n        }\r\n\r\n        return {\r\n            statusArray,\r\n            statusObject\r\n        };\r\n    },\r\n\r\n    getPriorityColor: function(table) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        let background = \"\";\r\n        const hasTable = this.priorities.map((p) => p.table).indexOf(table) > -1;\r\n        this.priorities.forEach(function(priority) {\r\n            if (hasTable && table !== priority.table) {\r\n                return;\r\n            } else if (!hasTable && priority.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = priority.value + \"\";\r\n            switch (value) {\r\n                case \"4\":\r\n                    color = \"#072d18\";\r\n                    className = \"low priority-tag\";\r\n                    background = \"#ecf3ef\";\r\n                    break;\r\n                case \"5\":\r\n                case \"3\":\r\n                    color = \"#685e00\";\r\n                    className = \"medium priority-tag\";\r\n                    background = \"#fcf19380\";\r\n                    break;\r\n                case \"2\":\r\n                    color = \"#672700\";\r\n                    className = \"high priority-tag\";\r\n                    background = \"#feb68b80\";\r\n                    break;\r\n                case \"1\":\r\n                    color = \"#8a0404\";\r\n                    className = \"critical priority-tag\";\r\n                    background = \"#ff909040\";\r\n                    break;\r\n                default:\r\n                    color = \"#9CAAA1\";\r\n                    className = \"not-found priority-tag\";\r\n                    background = \"#F5F9F5\";\r\n                    break;\r\n            }\r\n            this.priority[value] = {\r\n                ...priority,\r\n                color,\r\n                className,\r\n                background\r\n            };\r\n        }, this);\r\n    },\r\n\r\n    getStateColor: function(table) {\r\n        const states = {};\r\n        const hasTable = this.states.map((s) => s.table).indexOf(table) > -1;\r\n        this.states.forEach(function(state) {\r\n            if (hasTable && table !== state.table) {\r\n                return;\r\n            } else if (!hasTable && state.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = state.value + \"\";\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\r\n            states[state.value] = {\r\n                ...state,\r\n                color,\r\n                className\r\n            };\r\n        }, this);\r\n        this.states = states;\r\n    },\r\n\r\n    getColorAndClassName: function({\r\n        value\r\n    }) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        switch (value) {\r\n            case \"70\": // Canceled\r\n            case \"333\": // Archived\r\n            case \"-10\": // Planning\r\n            case \"-20\": // Draft\r\n            case \"25\": // Blocked\r\n                color = \"#bdbdbd\";\r\n                className = \"canceled state\";\r\n                break;\r\n            case \"10\": // Upcoming\r\n            case \"20\": // Open\r\n            case \"30\": // In Progress\r\n            case \"0\": // Requested\r\n                color = \"#528fea\";\r\n                className = \"requested state\";\r\n                break;\r\n            case \"40\": // Completed (No Approved Values at this time)\r\n                color = \"#42c856\";\r\n                className = \"approved state\";\r\n                break;\r\n            case \"22\": // On Hold\r\n            case \"60\": // Closed Skipped\r\n                color = \"#f3bd6a\";\r\n                className = \"planned state\";\r\n                break;\r\n            case \"50\": // Closed Incomplete\r\n            case \"6\": // Rejected\r\n                color = \"#b61c2d\";\r\n                className = \"rejected state\";\r\n                break;\r\n\t\t\tcase \"draft\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"draft\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sent\":\r\n\t\t\t\tcolor = \"#32B57F\";\r\n\t\t\t\tclassName = \"sent\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"published\":\r\n\t\t\t\tcolor = \"#DEE0FC\";\r\n\t\t\t\tclassName = \"published\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"scheduled\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"scheduled\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"queue\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"queue\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"initialized\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"initialized\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"error\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"error\";\r\n\t\t\t\tbreak;\r\n            default:\r\n                color = \"#9CAAA1\";\r\n                className = \"not-found state\";\r\n                break;\r\n        }\r\n        return {\r\n            color,\r\n            className\r\n        };\r\n    },\r\n\r\n    setPriorities: function(table) {\r\n        this.priorities = [{\r\n                value: \"4\",\r\n                displayValue: \"4 - Low\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"5\",\r\n                displayValue: \"5 - Planning\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"3\",\r\n                displayValue: \"3 - Moderate\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"2\",\r\n                displayValue: \"2 - High\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"1\",\r\n                displayValue: \"1 - Critical\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    setStates: function() {\r\n        this.states = [{\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Open\",\r\n                value: \"20\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Draft\",\r\n                value: \"-20\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"New\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Read\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Requested\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Rejected\",\r\n                value: \"6\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Canceled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Current\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work in Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    _getCachedAvatar: function({\r\n        value: userSysId\r\n    }) {\r\n        if (this.userAvatars[userSysId]) {\r\n            return this.userAvatars[userSysId];\r\n        }\r\n\r\n        var sysUserGr = new GlideRecord('sys_user');\r\n\r\n        if (sysUserGr.get(userSysId)) {\r\n            let avatar = sysUserGr.getValue('avatar');\r\n            avatar = avatar == null ? '' : avatar;\r\n            let photo = sysUserGr.getValue('photo');\r\n            photo = photo == null ? '' : photo;\r\n            const userAvatar = avatar || photo;\r\n            this.userAvatars[userSysId] = userAvatar ? userAvatar + '.iix' : '';\r\n        } else {\r\n            this.userAvatars[userSysId] = '';\r\n        }\r\n\r\n        return this.userAvatars[userSysId];\r\n    },\r\n\r\n    _getCachedColors: function({\r\n        table,\r\n        value,\r\n        element\r\n    }) {\r\n        if (this.refColors[value]) {\r\n            return this.refColors[value];\r\n        }\r\n\r\n        var tableGr = new GlideRecord(table);\r\n\r\n        if (tableGr.get(value)) {\r\n            this.refColors[value] = tableGr.getValue(element, value);\r\n        } else {\r\n            this.refColors[value] = '';\r\n        }\r\n\r\n        return this.refColors[value];\r\n    },\r\n    fetchColors: function(requestData) {\r\n        var parsed = JSON.parse(requestData);\r\n        var arrayOfFormColors = [];\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            var table = parsed[i].table;\r\n            var sys_id = parsed[i].sys_id;\r\n            var field = parsed[i].field;\r\n            var arrayColor = {\r\n                \"table\": table,\r\n                \"sys_id\": sys_id,\r\n                \"color\": ''\r\n            };\r\n            var tableGr = new GlideRecord(table);\r\n            if (tableGr.get(sys_id)) {\r\n                if (tableGr.getValue('glyph_color')) {\r\n                    arrayColor.color = tableGr.getValue('glyph_color');\r\n                    arrayOfFormColors.push(arrayColor);\r\n                }\r\n            }\r\n        }\r\n        return arrayOfFormColors;\r\n    },\r\n    type: \"GetColorsForFieldsMS\",\r\n});",
    "display_value": "const GetColorsForFieldsMS = Class.create();\r\nGetColorsForFieldsMS.prototype = Object.extendsObject(x_cadso_work.GetColorsForFieldsV3MS, {\r\n    initialize: function() {\r\n        x_cadso_work.GetColorsForFieldsV3MS.prototype.initialize.apply(this, arguments);\r\n        this.states = [];\r\n        this.state = {};\r\n        this.priorities = [];\r\n        this.priority = {};\r\n        this.status = {};\r\n        this.icons = {};\r\n        this.refColors = {};\r\n        this.userAvatars = {};\r\n    },\r\n\r\n    fetchV2: function({\r\n        table,\r\n        field,\r\n        getChoices = false\r\n    }) {\r\n        if (table === 'x_cadso_work_task' && field === 'status') {\r\n            return this.getTaskStatus(getChoices);\r\n        } else {\r\n            return this.getColors({\r\n                table,\r\n                field,\r\n                getChoices\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    getColors: function({\r\n        table,\r\n        field,\r\n        getChoices\r\n    }) {\r\n        var workColorGr = new GlideRecord('x_cadso_work_color');\r\n        workColorGr.addQuery('table', table);\r\n        workColorGr.addQuery('field', field);\r\n        workColorGr.query();\r\n        const colors = {};\r\n        let states = [];\r\n\r\n        while (workColorGr.next()) {\r\n            const value = workColorGr.getValue('value');\r\n\r\n            colors[value] = {\r\n                color: workColorGr.getValue('color'),\r\n                colorHover: workColorGr.getValue('color_hover'),\r\n                colorBackground: workColorGr.getValue('color_background'),\r\n                colorActive: workColorGr.getValue('color_active'),\r\n                label: workColorGr.getValue('display_value'),\r\n                value,\r\n                sysId: workColorGr.getUniqueValue(),\r\n                type: value === '333' ? \"archive\" : value === '22' ? \"hold\" : 'updateState'\r\n            };\r\n        }\r\n\r\n        if (getChoices) {\r\n            states = this.getStateChoices({\r\n                table,\r\n                field,\r\n                colors\r\n            });\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    getStateChoices: function({\r\n        table,\r\n        field,\r\n        colors\r\n    }) {\r\n        const states = [];\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=${field}^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            states.push(colors[value]);\r\n        }\r\n\r\n        return states;\r\n    },\r\n\r\n    getTaskStatus: function(getChoices) {\r\n        var workStatusGr = new GlideRecord('x_cadso_work_status');\r\n        workStatusGr.addEncodedQuery('active=true^visible=true');\r\n        workStatusGr.orderBy('sequence');\r\n        workStatusGr.query();\r\n        const colors = {};\r\n        const states = [];\r\n\r\n        while (workStatusGr.next()) {\r\n            const sysId = workStatusGr.getUniqueValue();\r\n            const state = workStatusGr.getValue('state');\r\n\r\n            colors[sysId] = {\r\n                color: workStatusGr.getValue('color'),\r\n                colorHover: workStatusGr.getValue('color_hover'),\r\n                colorBackground: workStatusGr.getValue('color_background'),\r\n                colorActive: workStatusGr.getValue('color_active'),\r\n                label: workStatusGr.getValue('label'),\r\n                value: sysId,\r\n                sysId,\r\n                type: state === '333' ? \"archive\" : state === '22' ? \"hold\" : 'updateState'\r\n            };\r\n\r\n            if (getChoices) {\r\n                states.push(colors[sysId]);\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    fetch: function(table, requiredUpdate, requiredUpdates) {\r\n        this.setStates(table);\r\n        this.getStateColor(table);\r\n        this.setPriorities(table);\r\n        this.getPriorityColor(table);\r\n        this.getStatus(table);\r\n        this.getIcons();\r\n        let avatars = {};\r\n        let tableColors = {};\r\n\r\n        if (requiredUpdate + '' === 'true') {\r\n            Object.keys(requiredUpdates.avatars).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.avatars[sysId];\r\n                objectBeingUpdate.avatar = this._getCachedAvatar(objectBeingUpdate);\r\n                requiredUpdates.avatars[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            Object.keys(requiredUpdates.colors).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.colors[sysId];\r\n                objectBeingUpdate.color = this._getCachedColors(objectBeingUpdate);\r\n                requiredUpdates.colors[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            avatars = requiredUpdates.avatars;\r\n            tableColors = requiredUpdates.colors;\r\n        }\r\n\r\n        return {\r\n            state: this.state,\r\n            priority: this.priority,\r\n            urgency: this.priority,\r\n            impact: this.priority,\r\n            status: this.status,\r\n            icons: this.icons,\r\n            tableColors,\r\n            avatars,\r\n            requiredUpdate\r\n        };\r\n    },\r\n\r\n    getIcons: function() {\r\n        this.icons = {\r\n            campaign: \"circleFilled\",\r\n            x_cadso_work_campaign: \"circleFilled\",\r\n            project: \"roundedSquare\",\r\n            x_cadso_work_project: \"roundedSquare\",\r\n            state: \"circleFilled\",\r\n            status: \"circleFilled\",\r\n            // \t\t\tpriority: \"roundedSquare\", // no icon = use class\r\n        };\r\n    },\r\n\r\n    getStatus: function(table) {\r\n        if (table === 'x_cadso_automate_email') {\r\n            const {\r\n            statusArray,\r\n            statusObject: status\r\n        } = this.getStatusChoice({ table });\r\n\t\t\tthis.status = status;\r\n            return;\r\n        }\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(`table=${table}^active=true`);\r\n        statusGr.query();\r\n        this.status = {};\r\n        while (statusGr.next()) {\r\n            this.status[statusGr.getUniqueValue()] = {\r\n                color: statusGr.getDisplayValue(\"color\"),\r\n                displayValue: statusGr.getDisplayValue(\"label\"),\r\n                value: statusGr.getUniqueValue(),\r\n            };\r\n        }\r\n    },\r\n\r\n    getStatusChoice: function({\r\n        table,\r\n    }) {\r\n        const statusArray = [];\r\n        const statusObject = {};\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=status^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\t\t\tconst item = {\r\n                color,\r\n                className\r\n            };\r\n            statusArray.push(item);\r\n            statusObject[value] = item;\r\n        }\r\n\r\n        return {\r\n            statusArray,\r\n            statusObject\r\n        };\r\n    },\r\n\r\n    getPriorityColor: function(table) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        let background = \"\";\r\n        const hasTable = this.priorities.map((p) => p.table).indexOf(table) > -1;\r\n        this.priorities.forEach(function(priority) {\r\n            if (hasTable && table !== priority.table) {\r\n                return;\r\n            } else if (!hasTable && priority.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = priority.value + \"\";\r\n            switch (value) {\r\n                case \"4\":\r\n                    color = \"#072d18\";\r\n                    className = \"low priority-tag\";\r\n                    background = \"#ecf3ef\";\r\n                    break;\r\n                case \"5\":\r\n                case \"3\":\r\n                    color = \"#685e00\";\r\n                    className = \"medium priority-tag\";\r\n                    background = \"#fcf19380\";\r\n                    break;\r\n                case \"2\":\r\n                    color = \"#672700\";\r\n                    className = \"high priority-tag\";\r\n                    background = \"#feb68b80\";\r\n                    break;\r\n                case \"1\":\r\n                    color = \"#8a0404\";\r\n                    className = \"critical priority-tag\";\r\n                    background = \"#ff909040\";\r\n                    break;\r\n                default:\r\n                    color = \"#9CAAA1\";\r\n                    className = \"not-found priority-tag\";\r\n                    background = \"#F5F9F5\";\r\n                    break;\r\n            }\r\n            this.priority[value] = {\r\n                ...priority,\r\n                color,\r\n                className,\r\n                background\r\n            };\r\n        }, this);\r\n    },\r\n\r\n    getStateColor: function(table) {\r\n        const states = {};\r\n        const hasTable = this.states.map((s) => s.table).indexOf(table) > -1;\r\n        this.states.forEach(function(state) {\r\n            if (hasTable && table !== state.table) {\r\n                return;\r\n            } else if (!hasTable && state.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = state.value + \"\";\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\r\n            states[state.value] = {\r\n                ...state,\r\n                color,\r\n                className\r\n            };\r\n        }, this);\r\n        this.states = states;\r\n    },\r\n\r\n    getColorAndClassName: function({\r\n        value\r\n    }) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        switch (value) {\r\n            case \"70\": // Canceled\r\n            case \"333\": // Archived\r\n            case \"-10\": // Planning\r\n            case \"-20\": // Draft\r\n            case \"25\": // Blocked\r\n                color = \"#bdbdbd\";\r\n                className = \"canceled state\";\r\n                break;\r\n            case \"10\": // Upcoming\r\n            case \"20\": // Open\r\n            case \"30\": // In Progress\r\n            case \"0\": // Requested\r\n                color = \"#528fea\";\r\n                className = \"requested state\";\r\n                break;\r\n            case \"40\": // Completed (No Approved Values at this time)\r\n                color = \"#42c856\";\r\n                className = \"approved state\";\r\n                break;\r\n            case \"22\": // On Hold\r\n            case \"60\": // Closed Skipped\r\n                color = \"#f3bd6a\";\r\n                className = \"planned state\";\r\n                break;\r\n            case \"50\": // Closed Incomplete\r\n            case \"6\": // Rejected\r\n                color = \"#b61c2d\";\r\n                className = \"rejected state\";\r\n                break;\r\n\t\t\tcase \"draft\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"draft\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sent\":\r\n\t\t\t\tcolor = \"#32B57F\";\r\n\t\t\t\tclassName = \"sent\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"published\":\r\n\t\t\t\tcolor = \"#DEE0FC\";\r\n\t\t\t\tclassName = \"published\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"scheduled\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"scheduled\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"queue\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"queue\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"initialized\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"initialized\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"error\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"error\";\r\n\t\t\t\tbreak;\r\n            default:\r\n                color = \"#9CAAA1\";\r\n                className = \"not-found state\";\r\n                break;\r\n        }\r\n        return {\r\n            color,\r\n            className\r\n        };\r\n    },\r\n\r\n    setPriorities: function(table) {\r\n        this.priorities = [{\r\n                value: \"4\",\r\n                displayValue: \"4 - Low\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"5\",\r\n                displayValue: \"5 - Planning\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"3\",\r\n                displayValue: \"3 - Moderate\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"2\",\r\n                displayValue: \"2 - High\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"1\",\r\n                displayValue: \"1 - Critical\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    setStates: function() {\r\n        this.states = [{\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Open\",\r\n                value: \"20\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Draft\",\r\n                value: \"-20\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"New\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Read\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Requested\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Rejected\",\r\n                value: \"6\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Canceled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Current\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work in Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    _getCachedAvatar: function({\r\n        value: userSysId\r\n    }) {\r\n        if (this.userAvatars[userSysId]) {\r\n            return this.userAvatars[userSysId];\r\n        }\r\n\r\n        var sysUserGr = new GlideRecord('sys_user');\r\n\r\n        if (sysUserGr.get(userSysId)) {\r\n            let avatar = sysUserGr.getValue('avatar');\r\n            avatar = avatar == null ? '' : avatar;\r\n            let photo = sysUserGr.getValue('photo');\r\n            photo = photo == null ? '' : photo;\r\n            const userAvatar = avatar || photo;\r\n            this.userAvatars[userSysId] = userAvatar ? userAvatar + '.iix' : '';\r\n        } else {\r\n            this.userAvatars[userSysId] = '';\r\n        }\r\n\r\n        return this.userAvatars[userSysId];\r\n    },\r\n\r\n    _getCachedColors: function({\r\n        table,\r\n        value,\r\n        element\r\n    }) {\r\n        if (this.refColors[value]) {\r\n            return this.refColors[value];\r\n        }\r\n\r\n        var tableGr = new GlideRecord(table);\r\n\r\n        if (tableGr.get(value)) {\r\n            this.refColors[value] = tableGr.getValue(element, value);\r\n        } else {\r\n            this.refColors[value] = '';\r\n        }\r\n\r\n        return this.refColors[value];\r\n    },\r\n    fetchColors: function(requestData) {\r\n        var parsed = JSON.parse(requestData);\r\n        var arrayOfFormColors = [];\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            var table = parsed[i].table;\r\n            var sys_id = parsed[i].sys_id;\r\n            var field = parsed[i].field;\r\n            var arrayColor = {\r\n                \"table\": table,\r\n                \"sys_id\": sys_id,\r\n                \"color\": ''\r\n            };\r\n            var tableGr = new GlideRecord(table);\r\n            if (tableGr.get(sys_id)) {\r\n                if (tableGr.getValue('glyph_color')) {\r\n                    arrayColor.color = tableGr.getValue('glyph_color');\r\n                    arrayOfFormColors.push(arrayColor);\r\n                }\r\n            }\r\n        }\r\n        return arrayOfFormColors;\r\n    },\r\n    type: \"GetColorsForFieldsMS\",\r\n});",
    "formatted_script": {
      "line_count": 846,
      "char_count": 26420,
      "preview": "const GetColorsForFieldsMS = Class.create();\r\nGetColorsForFieldsMS.prototype = Object.extendsObject(x_cadso_work.GetColorsForFieldsV3MS, {\r\n    initialize: function() {\r\n        x_cadso_work.GetColors...",
      "full_script": "const GetColorsForFieldsMS = Class.create();\r\nGetColorsForFieldsMS.prototype = Object.extendsObject(x_cadso_work.GetColorsForFieldsV3MS, {\r\n    initialize: function() {\r\n        x_cadso_work.GetColorsForFieldsV3MS.prototype.initialize.apply(this, arguments);\r\n        this.states = [];\r\n        this.state = {};\r\n        this.priorities = [];\r\n        this.priority = {};\r\n        this.status = {};\r\n        this.icons = {};\r\n        this.refColors = {};\r\n        this.userAvatars = {};\r\n    },\r\n\r\n    fetchV2: function({\r\n        table,\r\n        field,\r\n        getChoices = false\r\n    }) {\r\n        if (table === 'x_cadso_work_task' && field === 'status') {\r\n            return this.getTaskStatus(getChoices);\r\n        } else {\r\n            return this.getColors({\r\n                table,\r\n                field,\r\n                getChoices\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    getColors: function({\r\n        table,\r\n        field,\r\n        getChoices\r\n    }) {\r\n        var workColorGr = new GlideRecord('x_cadso_work_color');\r\n        workColorGr.addQuery('table', table);\r\n        workColorGr.addQuery('field', field);\r\n        workColorGr.query();\r\n        const colors = {};\r\n        let states = [];\r\n\r\n        while (workColorGr.next()) {\r\n            const value = workColorGr.getValue('value');\r\n\r\n            colors[value] = {\r\n                color: workColorGr.getValue('color'),\r\n                colorHover: workColorGr.getValue('color_hover'),\r\n                colorBackground: workColorGr.getValue('color_background'),\r\n                colorActive: workColorGr.getValue('color_active'),\r\n                label: workColorGr.getValue('display_value'),\r\n                value,\r\n                sysId: workColorGr.getUniqueValue(),\r\n                type: value === '333' ? \"archive\" : value === '22' ? \"hold\" : 'updateState'\r\n            };\r\n        }\r\n\r\n        if (getChoices) {\r\n            states = this.getStateChoices({\r\n                table,\r\n                field,\r\n                colors\r\n            });\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    getStateChoices: function({\r\n        table,\r\n        field,\r\n        colors\r\n    }) {\r\n        const states = [];\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=${field}^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            states.push(colors[value]);\r\n        }\r\n\r\n        return states;\r\n    },\r\n\r\n    getTaskStatus: function(getChoices) {\r\n        var workStatusGr = new GlideRecord('x_cadso_work_status');\r\n        workStatusGr.addEncodedQuery('active=true^visible=true');\r\n        workStatusGr.orderBy('sequence');\r\n        workStatusGr.query();\r\n        const colors = {};\r\n        const states = [];\r\n\r\n        while (workStatusGr.next()) {\r\n            const sysId = workStatusGr.getUniqueValue();\r\n            const state = workStatusGr.getValue('state');\r\n\r\n            colors[sysId] = {\r\n                color: workStatusGr.getValue('color'),\r\n                colorHover: workStatusGr.getValue('color_hover'),\r\n                colorBackground: workStatusGr.getValue('color_background'),\r\n                colorActive: workStatusGr.getValue('color_active'),\r\n                label: workStatusGr.getValue('label'),\r\n                value: sysId,\r\n                sysId,\r\n                type: state === '333' ? \"archive\" : state === '22' ? \"hold\" : 'updateState'\r\n            };\r\n\r\n            if (getChoices) {\r\n                states.push(colors[sysId]);\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...colors,\r\n            states\r\n        };\r\n    },\r\n\r\n    fetch: function(table, requiredUpdate, requiredUpdates) {\r\n        this.setStates(table);\r\n        this.getStateColor(table);\r\n        this.setPriorities(table);\r\n        this.getPriorityColor(table);\r\n        this.getStatus(table);\r\n        this.getIcons();\r\n        let avatars = {};\r\n        let tableColors = {};\r\n\r\n        if (requiredUpdate + '' === 'true') {\r\n            Object.keys(requiredUpdates.avatars).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.avatars[sysId];\r\n                objectBeingUpdate.avatar = this._getCachedAvatar(objectBeingUpdate);\r\n                requiredUpdates.avatars[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            Object.keys(requiredUpdates.colors).forEach(function(sysId) {\r\n                const objectBeingUpdate = requiredUpdates.colors[sysId];\r\n                objectBeingUpdate.color = this._getCachedColors(objectBeingUpdate);\r\n                requiredUpdates.colors[sysId] = objectBeingUpdate;\r\n            }, this);\r\n            avatars = requiredUpdates.avatars;\r\n            tableColors = requiredUpdates.colors;\r\n        }\r\n\r\n        return {\r\n            state: this.state,\r\n            priority: this.priority,\r\n            urgency: this.priority,\r\n            impact: this.priority,\r\n            status: this.status,\r\n            icons: this.icons,\r\n            tableColors,\r\n            avatars,\r\n            requiredUpdate\r\n        };\r\n    },\r\n\r\n    getIcons: function() {\r\n        this.icons = {\r\n            campaign: \"circleFilled\",\r\n            x_cadso_work_campaign: \"circleFilled\",\r\n            project: \"roundedSquare\",\r\n            x_cadso_work_project: \"roundedSquare\",\r\n            state: \"circleFilled\",\r\n            status: \"circleFilled\",\r\n            // \t\t\tpriority: \"roundedSquare\", // no icon = use class\r\n        };\r\n    },\r\n\r\n    getStatus: function(table) {\r\n        if (table === 'x_cadso_automate_email') {\r\n            const {\r\n            statusArray,\r\n            statusObject: status\r\n        } = this.getStatusChoice({ table });\r\n\t\t\tthis.status = status;\r\n            return;\r\n        }\r\n        const statusGr = new GlideRecord(\"x_cadso_work_status\");\r\n        statusGr.addEncodedQuery(`table=${table}^active=true`);\r\n        statusGr.query();\r\n        this.status = {};\r\n        while (statusGr.next()) {\r\n            this.status[statusGr.getUniqueValue()] = {\r\n                color: statusGr.getDisplayValue(\"color\"),\r\n                displayValue: statusGr.getDisplayValue(\"label\"),\r\n                value: statusGr.getUniqueValue(),\r\n            };\r\n        }\r\n    },\r\n\r\n    getStatusChoice: function({\r\n        table,\r\n    }) {\r\n        const statusArray = [];\r\n        const statusObject = {};\r\n        var sysChoiceGr = new GlideRecord('sys_choice');\r\n        sysChoiceGr.addEncodedQuery(`element=status^name=${table}^inactive=false`);\r\n        sysChoiceGr.orderBy('sequence');\r\n        sysChoiceGr.query();\r\n\r\n        while (sysChoiceGr.next()) {\r\n            const value = sysChoiceGr.getValue('value');\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\t\t\tconst item = {\r\n                color,\r\n                className\r\n            };\r\n            statusArray.push(item);\r\n            statusObject[value] = item;\r\n        }\r\n\r\n        return {\r\n            statusArray,\r\n            statusObject\r\n        };\r\n    },\r\n\r\n    getPriorityColor: function(table) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        let background = \"\";\r\n        const hasTable = this.priorities.map((p) => p.table).indexOf(table) > -1;\r\n        this.priorities.forEach(function(priority) {\r\n            if (hasTable && table !== priority.table) {\r\n                return;\r\n            } else if (!hasTable && priority.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = priority.value + \"\";\r\n            switch (value) {\r\n                case \"4\":\r\n                    color = \"#072d18\";\r\n                    className = \"low priority-tag\";\r\n                    background = \"#ecf3ef\";\r\n                    break;\r\n                case \"5\":\r\n                case \"3\":\r\n                    color = \"#685e00\";\r\n                    className = \"medium priority-tag\";\r\n                    background = \"#fcf19380\";\r\n                    break;\r\n                case \"2\":\r\n                    color = \"#672700\";\r\n                    className = \"high priority-tag\";\r\n                    background = \"#feb68b80\";\r\n                    break;\r\n                case \"1\":\r\n                    color = \"#8a0404\";\r\n                    className = \"critical priority-tag\";\r\n                    background = \"#ff909040\";\r\n                    break;\r\n                default:\r\n                    color = \"#9CAAA1\";\r\n                    className = \"not-found priority-tag\";\r\n                    background = \"#F5F9F5\";\r\n                    break;\r\n            }\r\n            this.priority[value] = {\r\n                ...priority,\r\n                color,\r\n                className,\r\n                background\r\n            };\r\n        }, this);\r\n    },\r\n\r\n    getStateColor: function(table) {\r\n        const states = {};\r\n        const hasTable = this.states.map((s) => s.table).indexOf(table) > -1;\r\n        this.states.forEach(function(state) {\r\n            if (hasTable && table !== state.table) {\r\n                return;\r\n            } else if (!hasTable && state.table !== \"task\") {\r\n                return;\r\n            }\r\n\r\n            const value = state.value + \"\";\r\n            const {\r\n                color,\r\n                className\r\n            } = this.getColorAndClassName({\r\n                value\r\n            });\r\n\r\n            states[state.value] = {\r\n                ...state,\r\n                color,\r\n                className\r\n            };\r\n        }, this);\r\n        this.states = states;\r\n    },\r\n\r\n    getColorAndClassName: function({\r\n        value\r\n    }) {\r\n        let color = \"\";\r\n        let className = \"\";\r\n        switch (value) {\r\n            case \"70\": // Canceled\r\n            case \"333\": // Archived\r\n            case \"-10\": // Planning\r\n            case \"-20\": // Draft\r\n            case \"25\": // Blocked\r\n                color = \"#bdbdbd\";\r\n                className = \"canceled state\";\r\n                break;\r\n            case \"10\": // Upcoming\r\n            case \"20\": // Open\r\n            case \"30\": // In Progress\r\n            case \"0\": // Requested\r\n                color = \"#528fea\";\r\n                className = \"requested state\";\r\n                break;\r\n            case \"40\": // Completed (No Approved Values at this time)\r\n                color = \"#42c856\";\r\n                className = \"approved state\";\r\n                break;\r\n            case \"22\": // On Hold\r\n            case \"60\": // Closed Skipped\r\n                color = \"#f3bd6a\";\r\n                className = \"planned state\";\r\n                break;\r\n            case \"50\": // Closed Incomplete\r\n            case \"6\": // Rejected\r\n                color = \"#b61c2d\";\r\n                className = \"rejected state\";\r\n                break;\r\n\t\t\tcase \"draft\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"draft\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sent\":\r\n\t\t\t\tcolor = \"#32B57F\";\r\n\t\t\t\tclassName = \"sent\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"published\":\r\n\t\t\t\tcolor = \"#DEE0FC\";\r\n\t\t\t\tclassName = \"published\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"scheduled\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"scheduled\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"queue\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"queue\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"initialized\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"initialized\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"error\":\r\n\t\t\t\tcolor = \"#C9EDFC\";\r\n\t\t\t\tclassName = \"error\";\r\n\t\t\t\tbreak;\r\n            default:\r\n                color = \"#9CAAA1\";\r\n                className = \"not-found state\";\r\n                break;\r\n        }\r\n        return {\r\n            color,\r\n            className\r\n        };\r\n    },\r\n\r\n    setPriorities: function(table) {\r\n        this.priorities = [{\r\n                value: \"4\",\r\n                displayValue: \"4 - Low\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"5\",\r\n                displayValue: \"5 - Planning\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"3\",\r\n                displayValue: \"3 - Moderate\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n            {\r\n                value: \"2\",\r\n                displayValue: \"2 - High\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\"\r\n            },\r\n            {\r\n                value: \"1\",\r\n                displayValue: \"1 - Critical\",\r\n                table: \"task\",\r\n                language: \"en\",\r\n                element: \"priority\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    setStates: function() {\r\n        this.states = [{\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Open\",\r\n                value: \"20\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_campaign\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Draft\",\r\n                value: \"-20\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_goal\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"New\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Read\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_notification\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Requested\",\r\n                value: \"0\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Completed\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Rejected\",\r\n                value: \"6\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Canceled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_project\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Planning\",\r\n                value: \"-10\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Current\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Cancelled\",\r\n                value: \"70\",\r\n                table: \"x_cadso_work_sprint_retro\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work In Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_status\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Upcoming\",\r\n                value: \"10\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"On Hold\",\r\n                value: \"22\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Blocked\",\r\n                value: \"25\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Work in Progress\",\r\n                value: \"30\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Archived\",\r\n                value: \"333\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Complete\",\r\n                value: \"40\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Incomplete\",\r\n                value: \"50\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n            {\r\n                displayValue: \"Closed Skipped\",\r\n                value: \"60\",\r\n                table: \"x_cadso_work_task\",\r\n                language: \"en\",\r\n                element: \"state\",\r\n            },\r\n        ];\r\n    },\r\n\r\n    _getCachedAvatar: function({\r\n        value: userSysId\r\n    }) {\r\n        if (this.userAvatars[userSysId]) {\r\n            return this.userAvatars[userSysId];\r\n        }\r\n\r\n        var sysUserGr = new GlideRecord('sys_user');\r\n\r\n        if (sysUserGr.get(userSysId)) {\r\n            let avatar = sysUserGr.getValue('avatar');\r\n            avatar = avatar == null ? '' : avatar;\r\n            let photo = sysUserGr.getValue('photo');\r\n            photo = photo == null ? '' : photo;\r\n            const userAvatar = avatar || photo;\r\n            this.userAvatars[userSysId] = userAvatar ? userAvatar + '.iix' : '';\r\n        } else {\r\n            this.userAvatars[userSysId] = '';\r\n        }\r\n\r\n        return this.userAvatars[userSysId];\r\n    },\r\n\r\n    _getCachedColors: function({\r\n        table,\r\n        value,\r\n        element\r\n    }) {\r\n        if (this.refColors[value]) {\r\n            return this.refColors[value];\r\n        }\r\n\r\n        var tableGr = new GlideRecord(table);\r\n\r\n        if (tableGr.get(value)) {\r\n            this.refColors[value] = tableGr.getValue(element, value);\r\n        } else {\r\n            this.refColors[value] = '';\r\n        }\r\n\r\n        return this.refColors[value];\r\n    },\r\n    fetchColors: function(requestData) {\r\n        var parsed = JSON.parse(requestData);\r\n        var arrayOfFormColors = [];\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            var table = parsed[i].table;\r\n            var sys_id = parsed[i].sys_id;\r\n            var field = parsed[i].field;\r\n            var arrayColor = {\r\n                \"table\": table,\r\n                \"sys_id\": sys_id,\r\n                \"color\": ''\r\n            };\r\n            var tableGr = new GlideRecord(table);\r\n            if (tableGr.get(sys_id)) {\r\n                if (tableGr.getValue('glyph_color')) {\r\n                    arrayColor.color = tableGr.getValue('glyph_color');\r\n                    arrayOfFormColors.push(arrayColor);\r\n                }\r\n            }\r\n        }\r\n        return arrayOfFormColors;\r\n    },\r\n    type: \"GetColorsForFieldsMS\",\r\n});"
    }
  },
  "sys_class_name": {
    "value": "sys_script_include",
    "display_value": "Script Include"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_update_name": {
    "value": "sys_script_include_d1fa741647f73d10b0361ae8036d4374",
    "display_value": "sys_script_include_d1fa741647f73d10b0361ae8036d4374"
  },
  "sys_updated_by": {
    "value": "dennis.huh",
    "display_value": "dennis.huh"
  },
  "api_name": {
    "value": "x_cadso_work.GetColorsForFieldsMS",
    "display_value": "x_cadso_work.GetColorsForFieldsMS"
  },
  "sys_created_on": {
    "value": "2024-01-19 22:15:55",
    "display_value": "2024-01-19 02:15:55 PM"
  },
  "caller_access": {
    "value": "",
    "display_value": null
  },
  "name": {
    "value": "GetColorsForFieldsMS",
    "display_value": "GetColorsForFieldsMS"
  },
  "sys_name": {
    "value": "GetColorsForFieldsMS",
    "display_value": "GetColorsForFieldsMS"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "sys_policy": {
    "value": "read",
    "display_value": "Read-only"
  }
}
