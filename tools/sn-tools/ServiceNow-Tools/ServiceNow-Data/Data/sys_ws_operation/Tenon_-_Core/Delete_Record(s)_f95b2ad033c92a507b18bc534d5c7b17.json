{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "f95b2ad033c92a507b18bc534d5c7b17",
    "extracted_at": "2025-09-19T21:48:32.781Z",
    "display_value": "Delete Record(s)",
    "application": "Tenon_-_Core",
    "scope": {
      "display_value": "Tenon - Core",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/608cd026c374e250d4ddf1db050131bb",
      "value": "608cd026c374e250d4ddf1db050131bb"
    }
  },
  "short_description": {
    "value": "",
    "display_value": ""
  },
  "operation_script": {
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    let {\r\n        table,\r\n        sysIds = ''\r\n    } = request.pathParams;\r\n\t\r\n    const reasons = [];\r\n    const count = sysIds.split(',').length;\r\n    let found = 0;\r\n    let remaining = 0;\r\n\r\n    try {\r\n        const tableGr = new GlideRecordSecure(table);\r\n        tableGr.addQuery('sys_id', 'IN', sysIds);\r\n        tableGr.query();\r\n        while (tableGr.next()) {\r\n            if (tableGr.canDelete()) {\r\n                found++;\r\n                tableGr.deleteRecord();\r\n            } else {\r\n                remaining++;\r\n                reasons.push(`You do not have permission to delete the record ${tableGr.getDisplayValue()}`);\r\n            }\r\n        }\r\n        if (!found) {\r\n            response.setStatus(404);\r\n            response.setBody({\r\n                count,\r\n                found,\r\n                remaining: count,\r\n                success: false,\r\n                reasons: ['Record Not Found'],\r\n                message: \"Record Not Found\"\r\n            });\r\n            return response;\r\n        }\r\n    } catch (e) {\r\n        response.setStatus(400);\r\n        response.setBody({\r\n            count,\r\n            found,\r\n            remaining: count,\r\n            success: false,\r\n            reasons: ['Invalid table'],\r\n            message: \"Invalid Table\"\r\n        });\r\n        return response;\r\n    }\r\n\r\n    response.setStatus(200);\r\n    response.setBody({\r\n        count,\r\n        found,\r\n        remaining,\r\n        success: remaining !== count,\r\n        reasons\r\n    });\r\n\r\n    return response;\r\n})(request, response);",
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    let {\r\n        table,\r\n        sysIds = ''\r\n    } = request.pathParams;\r\n\t\r\n    const reasons = [];\r\n    const count = sysIds.split(',').length;\r\n    let found = 0;\r\n    let remaining = 0;\r\n\r\n    try {\r\n        const tableGr = new GlideRecordSecure(table);\r\n        tableGr.addQuery('sys_id', 'IN', sysIds);\r\n        tableGr.query();\r\n        while (tableGr.next()) {\r\n            if (tableGr.canDelete()) {\r\n                found++;\r\n                tableGr.deleteRecord();\r\n            } else {\r\n                remaining++;\r\n                reasons.push(`You do not have permission to delete the record ${tableGr.getDisplayValue()}`);\r\n            }\r\n        }\r\n        if (!found) {\r\n            response.setStatus(404);\r\n            response.setBody({\r\n                count,\r\n                found,\r\n                remaining: count,\r\n                success: false,\r\n                reasons: ['Record Not Found'],\r\n                message: \"Record Not Found\"\r\n            });\r\n            return response;\r\n        }\r\n    } catch (e) {\r\n        response.setStatus(400);\r\n        response.setBody({\r\n            count,\r\n            found,\r\n            remaining: count,\r\n            success: false,\r\n            reasons: ['Invalid table'],\r\n            message: \"Invalid Table\"\r\n        });\r\n        return response;\r\n    }\r\n\r\n    response.setStatus(200);\r\n    response.setBody({\r\n        count,\r\n        found,\r\n        remaining,\r\n        success: remaining !== count,\r\n        reasons\r\n    });\r\n\r\n    return response;\r\n})(request, response);"
  },
  "sys_updated_on": {
    "value": "2025-04-18 00:11:51",
    "display_value": "2025-04-17 05:11:51 PM"
  },
  "enforce_acl": {
    "value": "535603d7333026507b18bc534d5c7bcc",
    "display_value": "Core REST Endpoint ACL"
  },
  "web_service_version": {
    "value": "",
    "display_value": ""
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "",
    "display_value": ""
  },
  "http_method": {
    "value": "DELETE",
    "display_value": "DELETE"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "operation_uri": {
    "value": "/api/x_cadso_core/ui/{table}/{sysIds}",
    "display_value": "/api/x_cadso_core/ui/{table}/{sysIds}"
  },
  "sys_created_on": {
    "value": "2025-04-17 23:43:46",
    "display_value": "2025-04-17 04:43:46 PM"
  },
  "sys_name": {
    "value": "Delete Record(s)",
    "display_value": "Delete Record(s)"
  },
  "sys_scope": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "web_service_definition": {
    "value": "7d168f17333026507b18bc534d5c7bed",
    "display_value": "Tenon Core UI Api"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "",
    "display_value": ""
  },
  "requires_snc_internal_role": {
    "value": "false",
    "display_value": "false"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "8",
    "display_value": "8"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_f95b2ad033c92a507b18bc534d5c7b17",
    "display_value": "sys_ws_operation_f95b2ad033c92a507b18bc534d5c7b17"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Delete Record(s)",
    "display_value": "Delete Record(s)"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/{table}/{sysIds}",
    "display_value": "/{table}/{sysIds}"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
