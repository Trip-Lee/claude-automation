{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "dbae254433e1d2507b18bc534d5c7b46",
    "extracted_at": "2025-09-19T21:48:33.112Z",
    "display_value": "Create Journey Version",
    "application": "Tenon_Marketing_Journey_Builder",
    "scope": {
      "display_value": "Tenon Marketing Journey Builder",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/cd61acbbc3c85a1085b196c4e40131bd",
      "value": "cd61acbbc3c85a1085b196c4e40131bd"
    }
  },
  "short_description": {
    "value": "Create a Journey Version",
    "display_value": "Create a Journey Version"
  },
  "operation_script": {
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    try {\r\n        if (!request.body.data.version) {\r\n            throw new sn_ws_err.BadRequestError(\"Missing Journey Version data\");\r\n        }\r\n\r\n        const apiUtil = new x_cadso_automate.APIUtils();\r\n        const journeyID = request.pathParams.sys_id;\r\n        let {\r\n            shouldContinueJourney = 'continue',\r\n            version: journeyVersion,\r\n\t\t\tincludeDisplay = false\r\n        } = request.body.data;\r\n        if (shouldContinueJourney !== 'continue') {\r\n\t\t\t// i.e. shouldContinueJourney = cancel\r\n            let lastVersion = new global.GlideQuery(\"x_cadso_journey_version\")\r\n                .where(\"journey\", journeyID)\r\n                .where(\"latest\", true)\r\n                .updateMultiple({\r\n                    outdated_action: shouldContinueJourney\r\n                });\r\n        }\r\n        journeyVersion.version = _getNextVersionNumber(journeyID);\r\n\r\n        let table = \"x_cadso_journey_version\";\r\n        const data = journeyVersion;\r\n        const journeyVersionGQ = apiUtil.insert({\r\n            table,\r\n            data,\r\n        });\r\n\r\n        table = \"x_cadso_journey_version_step\";\r\n        const insertedVersionSteps = [];\r\n        const versionSteps = request.body.data.versionSteps || [];\r\n        let order = {\r\n            value: 0\r\n        };\r\n        saveVersionSteps({\r\n            versionSteps,\r\n            journeyVersionGQ,\r\n            parent: null,\r\n            apiUtil,\r\n            table,\r\n            insertedVersionSteps,\r\n            order\r\n        });\r\n\r\n        return {\r\n            version: journeyVersionGQ,\r\n            versionSteps: insertedVersionSteps,\r\n\t\t\tshouldContinueJourney\r\n        };\r\n    } catch (error) {\r\n        return new sn_ws_err.BadRequestError(error.message);\r\n    }\r\n\r\n    function _getNextVersionNumber(journeyID) {\r\n        let latestVersion = new global.GlideQuery(\"x_cadso_journey_version\")\r\n            .where(\"journey\", journeyID)\r\n            .max(\"version\");\r\n        latestVersion = latestVersion._value;\r\n        latestVersion++;\r\n        return latestVersion;\r\n    }\r\n\r\n    function saveVersionSteps({\r\n        versionSteps,\r\n        journeyVersionGQ,\r\n        parent,\r\n        apiUtil,\r\n        table,\r\n        insertedVersionSteps,\r\n        order\r\n    }) {\r\n        for (let i = 0; i < versionSteps.length; i++) {\r\n            order.value++;\r\n            if (versionSteps[i].action && versionSteps[i].action?.configurations) {\r\n                versionSteps[i].configurations = versionSteps[i].action.configurations;\r\n                versionSteps[i].action = versionSteps[i].action.value;\r\n            }\r\n            versionSteps[i].order = order.value;\r\n            versionSteps[i].version = journeyVersionGQ.sys_id;\r\n            versionSteps[i].action =\r\n                versionSteps[i]?.action?.value || versionSteps[i]?.action || versionSteps[i]?.value || \"\";\r\n            versionSteps[i].option = journeyVersionGQ.option;\r\n            versionSteps[i].journey = journeyVersionGQ.journey;\r\n            if (versionSteps[i].configurations && typeof versionSteps[i].configurations === \"object\") {\r\n                versionSteps[i].configurations = JSON.stringify(versionSteps[i].configurations);\r\n            }\r\n            versionSteps[i].short_description = versionSteps[i].displayValue || \"\";\r\n            let items = [];\r\n            if (versionSteps[i].items && versionSteps[i].items.length) {\r\n                items = [\r\n                    ...versionSteps[i].items\r\n                ];\r\n            }\r\n\r\n            if (parent) {\r\n                versionSteps[i].parents = parent;\r\n            }\r\n\r\n            let data = versionSteps[i];\r\n\r\n\r\n            let versionStepGQ = apiUtil.insert({\r\n                table,\r\n                data,\r\n            });\r\n\r\n            const versionStepSysId = versionStepGQ.sys_id;\r\n\r\n            if (parent) {\r\n                parent = versionStepSysId;\r\n            }\r\n\r\n            data.sys_id = versionStepSysId;\r\n\r\n            insertedVersionSteps.push(data);\r\n\r\n            if (items && items.length) {\r\n                items.forEach((moreSteps, index) => {\r\n                    saveVersionSteps({\r\n                        versionSteps: moreSteps,\r\n                        journeyVersionGQ,\r\n                        parent: versionStepSysId,\r\n                        apiUtil,\r\n                        table,\r\n                        insertedVersionSteps,\r\n                        order\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n})(request, response);",
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    try {\r\n        if (!request.body.data.version) {\r\n            throw new sn_ws_err.BadRequestError(\"Missing Journey Version data\");\r\n        }\r\n\r\n        const apiUtil = new x_cadso_automate.APIUtils();\r\n        const journeyID = request.pathParams.sys_id;\r\n        let {\r\n            shouldContinueJourney = 'continue',\r\n            version: journeyVersion,\r\n\t\t\tincludeDisplay = false\r\n        } = request.body.data;\r\n        if (shouldContinueJourney !== 'continue') {\r\n\t\t\t// i.e. shouldContinueJourney = cancel\r\n            let lastVersion = new global.GlideQuery(\"x_cadso_journey_version\")\r\n                .where(\"journey\", journeyID)\r\n                .where(\"latest\", true)\r\n                .updateMultiple({\r\n                    outdated_action: shouldContinueJourney\r\n                });\r\n        }\r\n        journeyVersion.version = _getNextVersionNumber(journeyID);\r\n\r\n        let table = \"x_cadso_journey_version\";\r\n        const data = journeyVersion;\r\n        const journeyVersionGQ = apiUtil.insert({\r\n            table,\r\n            data,\r\n        });\r\n\r\n        table = \"x_cadso_journey_version_step\";\r\n        const insertedVersionSteps = [];\r\n        const versionSteps = request.body.data.versionSteps || [];\r\n        let order = {\r\n            value: 0\r\n        };\r\n        saveVersionSteps({\r\n            versionSteps,\r\n            journeyVersionGQ,\r\n            parent: null,\r\n            apiUtil,\r\n            table,\r\n            insertedVersionSteps,\r\n            order\r\n        });\r\n\r\n        return {\r\n            version: journeyVersionGQ,\r\n            versionSteps: insertedVersionSteps,\r\n\t\t\tshouldContinueJourney\r\n        };\r\n    } catch (error) {\r\n        return new sn_ws_err.BadRequestError(error.message);\r\n    }\r\n\r\n    function _getNextVersionNumber(journeyID) {\r\n        let latestVersion = new global.GlideQuery(\"x_cadso_journey_version\")\r\n            .where(\"journey\", journeyID)\r\n            .max(\"version\");\r\n        latestVersion = latestVersion._value;\r\n        latestVersion++;\r\n        return latestVersion;\r\n    }\r\n\r\n    function saveVersionSteps({\r\n        versionSteps,\r\n        journeyVersionGQ,\r\n        parent,\r\n        apiUtil,\r\n        table,\r\n        insertedVersionSteps,\r\n        order\r\n    }) {\r\n        for (let i = 0; i < versionSteps.length; i++) {\r\n            order.value++;\r\n            if (versionSteps[i].action && versionSteps[i].action?.configurations) {\r\n                versionSteps[i].configurations = versionSteps[i].action.configurations;\r\n                versionSteps[i].action = versionSteps[i].action.value;\r\n            }\r\n            versionSteps[i].order = order.value;\r\n            versionSteps[i].version = journeyVersionGQ.sys_id;\r\n            versionSteps[i].action =\r\n                versionSteps[i]?.action?.value || versionSteps[i]?.action || versionSteps[i]?.value || \"\";\r\n            versionSteps[i].option = journeyVersionGQ.option;\r\n            versionSteps[i].journey = journeyVersionGQ.journey;\r\n            if (versionSteps[i].configurations && typeof versionSteps[i].configurations === \"object\") {\r\n                versionSteps[i].configurations = JSON.stringify(versionSteps[i].configurations);\r\n            }\r\n            versionSteps[i].short_description = versionSteps[i].displayValue || \"\";\r\n            let items = [];\r\n            if (versionSteps[i].items && versionSteps[i].items.length) {\r\n                items = [\r\n                    ...versionSteps[i].items\r\n                ];\r\n            }\r\n\r\n            if (parent) {\r\n                versionSteps[i].parents = parent;\r\n            }\r\n\r\n            let data = versionSteps[i];\r\n\r\n\r\n            let versionStepGQ = apiUtil.insert({\r\n                table,\r\n                data,\r\n            });\r\n\r\n            const versionStepSysId = versionStepGQ.sys_id;\r\n\r\n            if (parent) {\r\n                parent = versionStepSysId;\r\n            }\r\n\r\n            data.sys_id = versionStepSysId;\r\n\r\n            insertedVersionSteps.push(data);\r\n\r\n            if (items && items.length) {\r\n                items.forEach((moreSteps, index) => {\r\n                    saveVersionSteps({\r\n                        versionSteps: moreSteps,\r\n                        journeyVersionGQ,\r\n                        parent: versionStepSysId,\r\n                        apiUtil,\r\n                        table,\r\n                        insertedVersionSteps,\r\n                        order\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n})(request, response);"
  },
  "sys_updated_on": {
    "value": "2025-05-22 22:38:40",
    "display_value": "2025-05-22 03:38:40 PM"
  },
  "enforce_acl": {
    "value": "95371672c3582210d4ddf1db050131eb",
    "display_value": "Journey Builder REST"
  },
  "web_service_version": {
    "value": "235d87f387a4d654369f33373cbb3539",
    "display_value": "v1"
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "{\r\n\t\"version\": {\r\n\t\t\"active\": false,\r\n\t\t\"archived_date\": null,\r\n\t\t\"description\": null,\r\n\t\t\"journey\": \"a3e266fd33191a107b18bc534d5c7b08\",\r\n\t\t\"published\": false,\r\n\t\t\"published_date\": null,\r\n\t\t\"short_description\": \"Rob Journey V2\",\r\n\t\t\"status\": null,\r\n\t\t\"sys_id\": \"042827ad33ad9a507b18bc534d5c7be0\",\r\n\t\t\"trigger\": null,\r\n\t\t\"type\": \"criteria\",\r\n\t\t\"version\": 2\r\n\t},\r\n\t\"versionSteps\": [\r\n\t\t{\r\n\t\t\t\"action\": \"4b9f262987c59210369f33373cbb35e4\",\r\n\t\t\t\"children\": null,\r\n\t\t\t\"conditions\": \"lead_rating=400_super_hot^owner=notasysidEQ\",\r\n\t\t\t\"configurations\": null,\r\n\t\t\t\"date\": null,\r\n\t\t\t\"datetime\": null,\r\n\t\t\t\"day_of_month\": null,\r\n\t\t\t\"day_of_week\": null,\r\n\t\t\t\"description\": \"Lead is super hot new Version!\",\r\n\t\t\t\"document_id\": null,\r\n\t\t\t\"duration\": null,\r\n\t\t\t\"fields_values\": null,\r\n\t\t\t\"honor_schedule\": false,\r\n\t\t\t\"journey\": \"a3e266fd33191a107b18bc534d5c7b08\",\r\n\t\t\t\"option\": \"07405aad87059210369f33373cbb3516\",\r\n\t\t\t\"order\": 1,\r\n\t\t\t\"parents\": null,\r\n\t\t\t\"schedule\": null,\r\n\t\t\t\"short_description\": \"Lead Updated new Version!\",\r\n\t\t\t\"sys_id\": \"bb59632133ed9a507b18bc534d5c7b36\",\r\n\t\t\t\"table\": \"sn_lead_mgmt_core_lead\",\r\n\t\t\t\"time\": \"1970-01-01 08:00:00\",\r\n\t\t\t\"trigger\": true,\r\n\t\t\t\"version\": \"3f59ebed33ad9a507b18bc534d5c7b81\"\r\n\t\t}\r\n\t]\r\n}\r\n",
    "display_value": "{\r\n\t\"version\": {\r\n\t\t\"active\": false,\r\n\t\t\"archived_date\": null,\r\n\t\t\"description\": null,\r\n\t\t\"journey\": \"a3e266fd33191a107b18bc534d5c7b08\",\r\n\t\t\"published\": false,\r\n\t\t\"published_date\": null,\r\n\t\t\"short_description\": \"Rob Journey V2\",\r\n\t\t\"status\": null,\r\n\t\t\"sys_id\": \"042827ad33ad9a507b18bc534d5c7be0\",\r\n\t\t\"trigger\": null,\r\n\t\t\"type\": \"criteria\",\r\n\t\t\"version\": 2\r\n\t},\r\n\t\"versionSteps\": [\r\n\t\t{\r\n\t\t\t\"action\": \"4b9f262987c59210369f33373cbb35e4\",\r\n\t\t\t\"children\": null,\r\n\t\t\t\"conditions\": \"lead_rating=400_super_hot^owner=notasysidEQ\",\r\n\t\t\t\"configurations\": null,\r\n\t\t\t\"date\": null,\r\n\t\t\t\"datetime\": null,\r\n\t\t\t\"day_of_month\": null,\r\n\t\t\t\"day_of_week\": null,\r\n\t\t\t\"description\": \"Lead is super hot new Version!\",\r\n\t\t\t\"document_id\": null,\r\n\t\t\t\"duration\": null,\r\n\t\t\t\"fields_values\": null,\r\n\t\t\t\"honor_schedule\": false,\r\n\t\t\t\"journey\": \"a3e266fd33191a107b18bc534d5c7b08\",\r\n\t\t\t\"option\": \"07405aad87059210369f33373cbb3516\",\r\n\t\t\t\"order\": 1,\r\n\t\t\t\"parents\": null,\r\n\t\t\t\"schedule\": null,\r\n\t\t\t\"short_description\": \"Lead Updated new Version!\",\r\n\t\t\t\"sys_id\": \"bb59632133ed9a507b18bc534d5c7b36\",\r\n\t\t\t\"table\": \"sn_lead_mgmt_core_lead\",\r\n\t\t\t\"time\": \"1970-01-01 08:00:00\",\r\n\t\t\t\"trigger\": true,\r\n\t\t\t\"version\": \"3f59ebed33ad9a507b18bc534d5c7b81\"\r\n\t\t}\r\n\t]\r\n}\r\n"
  },
  "http_method": {
    "value": "POST",
    "display_value": "POST"
  },
  "sys_updated_by": {
    "value": "rob.medved",
    "display_value": "rob.medved"
  },
  "operation_uri": {
    "value": "/api/x_cadso_journey/v1/ui/journeys/{sys_id}/versions",
    "display_value": "/api/x_cadso_journey/v1/ui/journeys/{sys_id}/versions"
  },
  "sys_created_on": {
    "value": "2024-10-24 22:36:57",
    "display_value": "2024-10-24 03:36:57 PM"
  },
  "sys_name": {
    "value": "Create Journey Version",
    "display_value": "Create Journey Version"
  },
  "sys_scope": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "sys_created_by": {
    "value": "rob.medved",
    "display_value": "rob.medved"
  },
  "web_service_definition": {
    "value": "d11dc3f387a4d654369f33373cbb3506",
    "display_value": "Tenon Journey Builder UI API"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "a476941a33295e507b18bc534d5c7bbe",
    "display_value": "Journey Version POST Request"
  },
  "requires_snc_internal_role": {
    "value": "false",
    "display_value": "false"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "145",
    "display_value": "145"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "Journey Versions",
    "display_value": "Journey Versions"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_dbae254433e1d2507b18bc534d5c7b46",
    "display_value": "sys_ws_operation_dbae254433e1d2507b18bc534d5c7b46"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Create Journey Version",
    "display_value": "Create Journey Version"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/journeys/{sys_id}/versions",
    "display_value": "/journeys/{sys_id}/versions"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "/api/x_cadso_journey/ui/journeys/{sys_id}/versions",
    "display_value": "/api/x_cadso_journey/ui/journeys/{sys_id}/versions"
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
