{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "7dbcf801872e0210369f33373cbb3555",
    "extracted_at": "2025-09-19T21:48:34.894Z",
    "display_value": "Content Service",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "short_description": {
    "value": "Get Token",
    "display_value": "Get Token"
  },
  "operation_script": {
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    //var provider = new sn_cc.StandardCredentialsProvider();\r\n    var credential, clientID, clientSecret;\r\n    var uid = gs.getProperty('x_cadso_automate.builder_uid');\r\n    var endPoint = gs.getProperty('x_cadso_automate.editor_endpoint') || 'https://auth.getbee.io/loginV2';\r\n\r\n    if (request.queryParams.content_service_type[0] === 'email_builder') {\r\n        clientID = gs.getProperty('x_cadso_automate.email_builder_cid');\r\n        clientSecret = gs.getProperty('x_cadso_automate.email_builder_cs');\r\n    } else if (request.queryParams.content_service_type[0] === 'page_builder') {\r\n        clientID = gs.getProperty('x_cadso_automate.page_builder_cid');\r\n        clientSecret = gs.getProperty('x_cadso_automate.page_builder_cs');\r\n    } else {\r\n        response.setStatus(400);\r\n        return;\r\n    }\r\n\r\n\tif (!uid || !clientID || !clientSecret) {\r\n        response.setStatus(500);\r\n        return;\r\n    }\r\n\r\n    var requestBody = JSON.stringify({\r\n        client_id: clientID,\r\n        client_secret: clientSecret,\r\n        uid: uid\r\n    });\r\n\r\n    var rm = new sn_ws.RESTMessageV2();\r\n    rm.setHttpMethod('POST');\r\n    rm.setEndpoint(endPoint);\r\n    rm.setRequestHeader('Content-Type', 'application/json');\r\n    rm.setRequestBody(requestBody);\r\n    var restResponse = rm.execute();\r\n    var responseBody = restResponse.getBody();\r\n    var httpStatus = restResponse.getStatusCode();\r\n\r\n    if (httpStatus == 200) {\r\n        var tokenStartIndex = responseBody.indexOf('\"access_token\":\"');\r\n        if (tokenStartIndex !== -1) {\r\n            var tokenEndIndex = responseBody.indexOf('\"', tokenStartIndex + '\"access_token\":\"'.length);\r\n            if (tokenEndIndex !== -1) {\r\n                var accessToken = responseBody.substring(tokenStartIndex + '\"access_token\":\"'.length, tokenEndIndex);\r\n\r\n                response.setStatus(200);\r\n                response.setHeader('Content-Type', 'application/json');\r\n                response.setBody({\r\n                    access_token: accessToken,\r\n\t\t\t\t\troleHash: getRoleHashForEditor(),\r\n\t\t\t\t\tuid\r\n                });\r\n            } else {\r\n                response.setStatus(500);\r\n                response.setHeader('Content-Type', 'application/json');\r\n                response.setBody({\r\n                    error: 'Unable to extract access_token'\r\n                });\r\n            }\r\n        } else {\r\n            response.setStatus(500);\r\n            response.setHeader('Content-Type', 'application/json');\r\n            response.setBody({\r\n                error: 'Unable to extract access_token'\r\n            });\r\n        }\r\n    } else {\r\n        response.setStatus(httpStatus);\r\n        response.setHeader('Content-Type', 'application/json');\r\n        response.setBody({\r\n            error: responseBody\r\n        });\r\n    }\r\n\r\n    function getRoleHashForEditor() {\r\n        const uiRoleGr = new GlideRecordSecure(\"x_cadso_core_ui_role\");\r\n        uiRoleGr\r\n            .addQuery(\"group\", \"DYNAMIC\", \"04f89c54eba41a109097f65cbad0cd3b\")\r\n            .addOrCondition(\"user\", \"DYNAMIC\", \"90d1921e5f510100a9ad2572f2b477fe\");\r\n        uiRoleGr.orderBy(\"order\");\r\n        uiRoleGr.setLimit(1);\r\n        uiRoleGr.query();\r\n\r\n        while (uiRoleGr.next()) {\r\n            return uiRoleGr.getValue(\"role\");\r\n        }\r\n\r\n    }\r\n\r\n})(request, response);",
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    //var provider = new sn_cc.StandardCredentialsProvider();\r\n    var credential, clientID, clientSecret;\r\n    var uid = gs.getProperty('x_cadso_automate.builder_uid');\r\n    var endPoint = gs.getProperty('x_cadso_automate.editor_endpoint') || 'https://auth.getbee.io/loginV2';\r\n\r\n    if (request.queryParams.content_service_type[0] === 'email_builder') {\r\n        clientID = gs.getProperty('x_cadso_automate.email_builder_cid');\r\n        clientSecret = gs.getProperty('x_cadso_automate.email_builder_cs');\r\n    } else if (request.queryParams.content_service_type[0] === 'page_builder') {\r\n        clientID = gs.getProperty('x_cadso_automate.page_builder_cid');\r\n        clientSecret = gs.getProperty('x_cadso_automate.page_builder_cs');\r\n    } else {\r\n        response.setStatus(400);\r\n        return;\r\n    }\r\n\r\n\tif (!uid || !clientID || !clientSecret) {\r\n        response.setStatus(500);\r\n        return;\r\n    }\r\n\r\n    var requestBody = JSON.stringify({\r\n        client_id: clientID,\r\n        client_secret: clientSecret,\r\n        uid: uid\r\n    });\r\n\r\n    var rm = new sn_ws.RESTMessageV2();\r\n    rm.setHttpMethod('POST');\r\n    rm.setEndpoint(endPoint);\r\n    rm.setRequestHeader('Content-Type', 'application/json');\r\n    rm.setRequestBody(requestBody);\r\n    var restResponse = rm.execute();\r\n    var responseBody = restResponse.getBody();\r\n    var httpStatus = restResponse.getStatusCode();\r\n\r\n    if (httpStatus == 200) {\r\n        var tokenStartIndex = responseBody.indexOf('\"access_token\":\"');\r\n        if (tokenStartIndex !== -1) {\r\n            var tokenEndIndex = responseBody.indexOf('\"', tokenStartIndex + '\"access_token\":\"'.length);\r\n            if (tokenEndIndex !== -1) {\r\n                var accessToken = responseBody.substring(tokenStartIndex + '\"access_token\":\"'.length, tokenEndIndex);\r\n\r\n                response.setStatus(200);\r\n                response.setHeader('Content-Type', 'application/json');\r\n                response.setBody({\r\n                    access_token: accessToken,\r\n\t\t\t\t\troleHash: getRoleHashForEditor(),\r\n\t\t\t\t\tuid\r\n                });\r\n            } else {\r\n                response.setStatus(500);\r\n                response.setHeader('Content-Type', 'application/json');\r\n                response.setBody({\r\n                    error: 'Unable to extract access_token'\r\n                });\r\n            }\r\n        } else {\r\n            response.setStatus(500);\r\n            response.setHeader('Content-Type', 'application/json');\r\n            response.setBody({\r\n                error: 'Unable to extract access_token'\r\n            });\r\n        }\r\n    } else {\r\n        response.setStatus(httpStatus);\r\n        response.setHeader('Content-Type', 'application/json');\r\n        response.setBody({\r\n            error: responseBody\r\n        });\r\n    }\r\n\r\n    function getRoleHashForEditor() {\r\n        const uiRoleGr = new GlideRecordSecure(\"x_cadso_core_ui_role\");\r\n        uiRoleGr\r\n            .addQuery(\"group\", \"DYNAMIC\", \"04f89c54eba41a109097f65cbad0cd3b\")\r\n            .addOrCondition(\"user\", \"DYNAMIC\", \"90d1921e5f510100a9ad2572f2b477fe\");\r\n        uiRoleGr.orderBy(\"order\");\r\n        uiRoleGr.setLimit(1);\r\n        uiRoleGr.query();\r\n\r\n        while (uiRoleGr.next()) {\r\n            return uiRoleGr.getValue(\"role\");\r\n        }\r\n\r\n    }\r\n\r\n})(request, response);"
  },
  "sys_updated_on": {
    "value": "2025-07-25 21:54:01",
    "display_value": "2025-07-25 02:54:01 PM"
  },
  "enforce_acl": {
    "value": "003a5109c3ee021085b196c4e40131ab",
    "display_value": "Tenon Automate UI API Access"
  },
  "web_service_version": {
    "value": "",
    "display_value": ""
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "",
    "display_value": ""
  },
  "http_method": {
    "value": "GET",
    "display_value": "GET"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "operation_uri": {
    "value": "/api/x_cadso_automate/ui/content_service/token",
    "display_value": "/api/x_cadso_automate/ui/content_service/token"
  },
  "sys_created_on": {
    "value": "2024-05-31 18:04:12",
    "display_value": "2024-05-31 11:04:12 AM"
  },
  "sys_name": {
    "value": "Content Service",
    "display_value": "Content Service"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "desiree.morehouse",
    "display_value": "desiree.morehouse"
  },
  "web_service_definition": {
    "value": "4a222358c3aa425085b196c4e401318e",
    "display_value": "Tenon Automate UI API"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "",
    "display_value": ""
  },
  "requires_snc_internal_role": {
    "value": "true",
    "display_value": "true"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "38",
    "display_value": "38"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "Authorization",
    "display_value": "Authorization"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_7dbcf801872e0210369f33373cbb3555",
    "display_value": "sys_ws_operation_7dbcf801872e0210369f33373cbb3555"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Content Service",
    "display_value": "Content Service"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/content_service/token",
    "display_value": "/content_service/token"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
