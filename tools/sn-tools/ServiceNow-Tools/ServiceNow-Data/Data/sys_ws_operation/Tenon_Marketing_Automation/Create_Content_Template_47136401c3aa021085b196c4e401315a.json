{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "47136401c3aa021085b196c4e401315a",
    "extracted_at": "2025-09-19T21:48:34.904Z",
    "display_value": "Create Content Template",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "short_description": {
    "value": "Create a Content Template Record using field name/value pairs",
    "display_value": "Create a Content Template Record using field name/value pairs"
  },
  "operation_script": {
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n\r\n    try {\r\n        const apiUtil = new x_cadso_automate.APIUtils();\r\n        const {\r\n            data\r\n        } = request.body;\r\n\r\n        const {\r\n            table = 'x_cadso_automate_content_template',\r\n                sys_id: sysID = '-1'\r\n        } = data;\r\n\r\n        if (data.table) {\r\n            delete data.table;\r\n        }\r\n\r\n        if (!data.brand_kit) {\r\n            // Glide Record Secure not needed here as it is a background process.\r\n            var brandKitGr = new GlideRecord('x_cadso_core_brand_kit');\r\n            brandKitGr.addQuery('default', 'true');\r\n            brandKitGr.setLimit(1);\r\n            brandKitGr.orderByDesc('sys_created_on');\r\n            brandKitGr.query();\r\n\r\n            if (brandKitGr.next()) {\r\n                data.brand_kit = brandKitGr.getUniqueValue();\r\n            }\r\n        }\r\n\r\n        if (table === 'x_cadso_automate_email' && data.state) {\r\n            // TODO Remove when we move status over for emails\r\n            data.status = data.state;\r\n        }\r\n\r\n        let template = {};\r\n        if (sysID && sysID != '-1' && sysID != -1) {\r\n            template = apiUtil.update({\r\n                table,\r\n                sysID,\r\n                updates: data\r\n            });\r\n        } else {\r\n            template = apiUtil.insert({\r\n                table,\r\n                data\r\n            });\r\n        }\r\n\r\n        if (!template) {\r\n            return new sn_ws_err.BadRequestError('Could not find template');\r\n        }\r\n\r\n        response.setBody(template);\r\n        response.setStatus('201');\r\n    } catch (error) {\r\n        return new sn_ws_err.BadRequestError(error.message.replace(/\\n/g, ''));\r\n    }\r\n\r\n})(request, response);",
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n\r\n    try {\r\n        const apiUtil = new x_cadso_automate.APIUtils();\r\n        const {\r\n            data\r\n        } = request.body;\r\n\r\n        const {\r\n            table = 'x_cadso_automate_content_template',\r\n                sys_id: sysID = '-1'\r\n        } = data;\r\n\r\n        if (data.table) {\r\n            delete data.table;\r\n        }\r\n\r\n        if (!data.brand_kit) {\r\n            // Glide Record Secure not needed here as it is a background process.\r\n            var brandKitGr = new GlideRecord('x_cadso_core_brand_kit');\r\n            brandKitGr.addQuery('default', 'true');\r\n            brandKitGr.setLimit(1);\r\n            brandKitGr.orderByDesc('sys_created_on');\r\n            brandKitGr.query();\r\n\r\n            if (brandKitGr.next()) {\r\n                data.brand_kit = brandKitGr.getUniqueValue();\r\n            }\r\n        }\r\n\r\n        if (table === 'x_cadso_automate_email' && data.state) {\r\n            // TODO Remove when we move status over for emails\r\n            data.status = data.state;\r\n        }\r\n\r\n        let template = {};\r\n        if (sysID && sysID != '-1' && sysID != -1) {\r\n            template = apiUtil.update({\r\n                table,\r\n                sysID,\r\n                updates: data\r\n            });\r\n        } else {\r\n            template = apiUtil.insert({\r\n                table,\r\n                data\r\n            });\r\n        }\r\n\r\n        if (!template) {\r\n            return new sn_ws_err.BadRequestError('Could not find template');\r\n        }\r\n\r\n        response.setBody(template);\r\n        response.setStatus('201');\r\n    } catch (error) {\r\n        return new sn_ws_err.BadRequestError(error.message.replace(/\\n/g, ''));\r\n    }\r\n\r\n})(request, response);"
  },
  "sys_updated_on": {
    "value": "2025-07-29 23:04:36",
    "display_value": "2025-07-29 04:04:36 PM"
  },
  "enforce_acl": {
    "value": "003a5109c3ee021085b196c4e40131ab",
    "display_value": "Tenon Automate UI API Access"
  },
  "web_service_version": {
    "value": "",
    "display_value": ""
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "{\r\n  \"json_content\": \"object containing everything needed to load a template\"\r\n}",
    "display_value": "{\r\n  \"json_content\": \"object containing everything needed to load a template\"\r\n}"
  },
  "http_method": {
    "value": "POST",
    "display_value": "POST"
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "operation_uri": {
    "value": "/api/x_cadso_automate/ui/content_templates",
    "display_value": "/api/x_cadso_automate/ui/content_templates"
  },
  "sys_created_on": {
    "value": "2024-05-31 16:11:58",
    "display_value": "2024-05-31 09:11:58 AM"
  },
  "sys_name": {
    "value": "Create Content Template",
    "display_value": "Create Content Template"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "rob.medved",
    "display_value": "rob.medved"
  },
  "web_service_definition": {
    "value": "4a222358c3aa425085b196c4e401318e",
    "display_value": "Tenon Automate UI API"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "cd2e8525c376821085b196c4e4013180",
    "display_value": "Content Template Request"
  },
  "requires_snc_internal_role": {
    "value": "true",
    "display_value": "true"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "42",
    "display_value": "42"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "Content Templates",
    "display_value": "Content Templates"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_47136401c3aa021085b196c4e401315a",
    "display_value": "sys_ws_operation_47136401c3aa021085b196c4e401315a"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Create Content Template",
    "display_value": "Create Content Template"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/content_templates",
    "display_value": "/content_templates"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
