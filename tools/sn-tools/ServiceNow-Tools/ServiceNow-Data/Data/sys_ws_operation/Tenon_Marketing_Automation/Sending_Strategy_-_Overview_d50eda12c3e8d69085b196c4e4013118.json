{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "d50eda12c3e8d69085b196c4e4013118",
    "extracted_at": "2025-09-19T21:48:33.253Z",
    "display_value": "Sending Strategy - Overview",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "short_description": {
    "value": "",
    "display_value": ""
  },
  "operation_script": {
    "value": "(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n\tconst { sysId, messageType } = request.body.data;\r\n\r\n\tif (messageType === \"sms\") {\r\n\t\tresponse.setBody(getSmsOverview(sysId));\r\n\t} else if (messageType === \"email\") {\r\n\t\tresponse.setBody(getEmailOverview(sysId));\r\n\t} else {\r\n\t\tresponse.setBody({\r\n\t\t\tstrats: [],\r\n\t\t\thasRecords: false,\r\n\t\t});\r\n\t}\r\n\r\n\tfunction getSmsOverview(sysId) {\r\n\t\tconst tableGR = new GlideRecordSecure(\"x_cadso_automate_message_send\");\r\n\t\ttableGR.addEncodedQuery(`message=${sysId}^ORsys_id=${sysId}`, true);\r\n\t\ttableGR.orderBy(\"sys_created_on\");\r\n\t\ttableGR.query();\r\n\r\n\t\tconst strats = [];\r\n\r\n\t\twhile (tableGR.next()) {\r\n\t\t\tlet optimizedBy = getOptimizationChoice();\r\n\t\t\tif (checkBooleanField(tableGR, \"send_time_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"sendTime\");\r\n\t\t\t} else if (checkBooleanField(tableGR, \"time_zone_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"timeZone\");\r\n\t\t\t}\r\n\r\n\t\t\tconst sendOn = tableGR.getDisplayValue(\"delivery_time\");\r\n\t\t\tconst sendingStrategy = checkBooleanField(tableGR, \"send_now\") ? \"now\" : \"schedule\";\r\n\r\n\t\t\tconst profile = {\r\n\t\t\t\tlabel: \"Text Sender Profile\",\r\n\t\t\t\tdisplayValue: tableGR.getDisplayValue(\"message_number\"),\r\n\t\t\t\tvalue: tableGR.getValue(\"message_number\"),\r\n\t\t\t\telement: \"profile\",\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\thasValue: !!tableGR.getValue(\"message_number\"),\r\n\t\t\t\tfield: {\r\n\t\t\t\t\treference: \"x_cadso_automate_message_number\",\r\n\t\t\t\t\treferenceQuery: \"active=true\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tlet includes = parseAudienceData(tableGR.getValue(\"includes\"));\r\n\t\t\tlet excludes = parseAudienceData(tableGR.getValue(\"excludes\"));\r\n\r\n\t\t\tconst strat = {\r\n\t\t\t\toptimized: checkBooleanField(tableGR, \"send_time_optimization\"),\r\n\t\t\t\tsendingStrategy,\r\n\t\t\t\toptimizedBy: {\r\n\t\t\t\t\t...optimizedBy,\r\n\t\t\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tsendOn: {\r\n\t\t\t\t\tdisplayValue: sendOn,\r\n\t\t\t\t\tvalue: sendOn,\r\n\t\t\t\t\teditValue: { displayValue: sendOn, value: sendOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taudience: includes,\r\n\t\t\t\texcludesAudience: excludes,\r\n\t\t\t\ttext: tableGR.getDisplayValue(\"text\"),\r\n\t\t\t\timage: tableGR.getDisplayValue(\"media_url\"),\r\n\t\t\t\tunsubscribeText: tableGR.getDisplayValue(\"unsubscribe_text\"),\r\n\t\t\t\tmessageId: sysId,\r\n\t\t\t\tsysId: tableGR.getUniqueValue(),\r\n\t\t\t\tprofile,\r\n\t\t\t};\r\n\r\n\t\t\tstrats.push(strat);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstrats,\r\n\t\t\thasRecords: strats.length > 0,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getEmailOverview(sysId) {\r\n\t\tconst tableGR = new GlideRecordSecure(\"x_cadso_automate_email_send\");\r\n\t\ttableGR.addEncodedQuery(`email=${sysId}^ORsys_id=${sysId}`, true);\r\n\t\ttableGR.orderBy(\"sys_created_on\");\r\n\t\ttableGR.query();\r\n\r\n\t\tconst strats = [];\r\n\r\n\t\twhile (tableGR.next()) {\r\n\t\t\tlet optimizedBy = getOptimizationChoice();\r\n\t\t\tif (checkBooleanField(tableGR, \"send_time_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"sendTime\");\r\n\t\t\t} else if (checkBooleanField(tableGR, \"time_zone_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"timeZone\");\r\n\t\t\t}\r\n\r\n\t\t\tlet totalSends = 0;\r\n\t\t\tconst sendOn = tableGR.getDisplayValue(\"delivery_time\");\r\n\t\t\tconst completedOn = tableGR.getDisplayValue(\"completed_on\");\r\n\t\t\tconst dynamicSubject = tableGR.getDisplayValue(\"dynamic_subject_line\");\r\n\t\t\tconst sendingStrategy = checkBooleanField(tableGR, \"send_now\") ? \"now\" : \"schedule\";\r\n\r\n\t\t\tconst profile = {\r\n\t\t\t\tlabel: \"Email Sender Profile\",\r\n\t\t\t\tdisplayValue: tableGR.getDisplayValue(\"from_address\"),\r\n\t\t\t\tvalue: tableGR.getValue(\"from_address\"),\r\n\t\t\t\telement: \"profile\",\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\thasValue: !!tableGR.getValue(\"from_address\"),\r\n\t\t\t\tfield: {\r\n\t\t\t\t\treference: \"x_cadso_automate_sender_email\",\r\n\t\t\t\t\treferenceQuery: \"active=true\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tlet includes = parseAudienceData(tableGR.getValue(\"includes\"));\r\n\t\t\tlet excludes = parseAudienceData(tableGR.getValue(\"excludes\"));\r\n\r\n\t\t\tconst apiUtil = new x_cadso_automate.APIUtils();\r\n\t\t\tconst status = tableGR.getValue(\"status\");\r\n\t\t\t\r\n\t\t\tif (status != \"scheduled\" && status != \"draft\") {\r\n\t\t\t\tconst count = apiUtil.count({\r\n\t\t\t\t\ttable: \"x_cadso_automate_email_batch_recipient\",\r\n\t\t\t\t\tquery: `email_batch.email_send.sys_id=${tableGR.getUniqueValue()}`,\r\n\t\t\t\t});\r\n\t\t\t\ttotalSends += count;\r\n\t\t\t} else {\r\n\t\t\t\tconst includedMembers = apiUtil.query({\r\n\t\t\t\t\ttable: \"x_cadso_automate_audience_member\",\r\n\t\t\t\t\tquery: `audienceIN${tableGR.getValue(\"audiences\")}`,\r\n\t\t\t\t\treturnFields: \"contact_detail\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst excludedMembers = apiUtil.query({\r\n\t\t\t\t\ttable: \"x_cadso_automate_audience_member\",\r\n\t\t\t\t\tquery: `audienceIN${tableGR.getValue(\"excluded_audiences\")}`,\r\n\t\t\t\t\treturnFields: \"contact_detail\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst netIncludedMembers = includedMembers.filter(\r\n\t\t\t\t\t(includedMember) =>\r\n\t\t\t\t\t\t!excludedMembers.some(\r\n\t\t\t\t\t\t\t(excludedMember) => excludedMember.contact_detail === includedMember.contact_detail\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\ttotalSends += netIncludedMembers.length;\r\n\t\t\t}\r\n\r\n\t\t\tconst strat = {\r\n\t\t\t\toptimized: checkBooleanField(tableGR, \"send_time_optimization\"),\r\n\t\t\t\tsendingStrategy,\r\n\t\t\t\toptimizedBy: {\r\n\t\t\t\t\t...optimizedBy,\r\n\t\t\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tsendOn: {\r\n\t\t\t\t\tdisplayValue: sendOn,\r\n\t\t\t\t\tvalue: sendOn,\r\n\t\t\t\t\teditValue: { displayValue: sendOn, value: sendOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tcompletedOn: {\r\n\t\t\t\t\tdisplayValue: completedOn,\r\n\t\t\t\t\tvalue: completedOn,\r\n\t\t\t\t\teditValue: { displayValue: completedOn, value: completedOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taudience: includes,\r\n\t\t\t\texcludesAudience: excludes,\r\n\t\t\t\tsubject: dynamicSubject,\r\n\t\t\t\tdefaultSubject: tableGR.getDisplayValue(\"static_subject_line\"),\r\n\t\t\t\tpreviewText: tableGR.getDisplayValue(\"preview_text\"),\r\n\t\t\t\tshowDefaultOption:\r\n\t\t\t\t\tdynamicSubject.indexOf(\"{\") > -1 &&\r\n\t\t\t\t\tdynamicSubject.indexOf(\"}\") > dynamicSubject.indexOf(\"{\"),\r\n\t\t\t\temailId: sysId,\r\n\t\t\t\tsysId: tableGR.getUniqueValue(),\r\n\t\t\t\tprofile,\r\n\t\t\t\temailHtml: tableGR.getValue(\"email_html\"),\r\n\t\t\t\tstatus: status,\r\n\t\t\t\tthumbnails: {\r\n\t\t\t\t\tmd: tableGR.getDisplayValue(\"thumbnail\"),\r\n\t\t\t\t\tlg: tableGR.getDisplayValue(\"thumbnail_large\"),\r\n\t\t\t\t},\r\n\t\t\t\ttotalSends: totalSends,\r\n\t\t\t};\r\n\r\n\t\t\tstrats.push(strat);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstrats,\r\n\t\t\thasRecords: strats.length > 0,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction checkBooleanField(tableGR, field) {\r\n\t\treturn (tableGR.getDisplayValue(field) + \"\").toLowerCase() === \"true\";\r\n\t}\r\n\r\n\tfunction getOptimizationChoice(value) {\r\n\t\tconst choices = [\r\n\t\t\t{\r\n\t\t\t\tdisplayValue: \"Time Zone\",\r\n\t\t\t\tvalue: \"timeZone\",\r\n\t\t\t\tdescription: \"Send at the same time for all recipients regardless of time zone.\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdisplayValue: \"Send Time\",\r\n\t\t\t\tvalue: \"sendTime\",\r\n\t\t\t\tdescription: \"Send at the most optimal time for each recipient.\",\r\n\t\t\t},\r\n\t\t\t{ displayValue: \"No Optimization\", value: \"none\" },\r\n\t\t];\r\n\r\n\t\tif (value === \"timeZone\") {\r\n\t\t\treturn choices[0];\r\n\t\t} else if (value === \"sendTime\") {\r\n\t\t\treturn choices[1];\r\n\t\t} else {\r\n\t\t\treturn choices[2];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseAudienceData(audienceJson) {\r\n\t\treturn JSON.parse(audienceJson) || {\r\n\t\t\tdisplayValue: [],\r\n\t\t\tvalue: \"\",\r\n\t\t\tselected: {},\r\n\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\topen: false,\r\n\t\t\tsearchValue: \"\",\r\n\t\t\ttables: [{ table: \"x_cadso_automate_audience\", limit: 7, icon: \"user\", searchValue: \"\" }],\r\n\t\t};\r\n\t}\r\n})(request, response);\r\n",
    "display_value": "(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n\tconst { sysId, messageType } = request.body.data;\r\n\r\n\tif (messageType === \"sms\") {\r\n\t\tresponse.setBody(getSmsOverview(sysId));\r\n\t} else if (messageType === \"email\") {\r\n\t\tresponse.setBody(getEmailOverview(sysId));\r\n\t} else {\r\n\t\tresponse.setBody({\r\n\t\t\tstrats: [],\r\n\t\t\thasRecords: false,\r\n\t\t});\r\n\t}\r\n\r\n\tfunction getSmsOverview(sysId) {\r\n\t\tconst tableGR = new GlideRecordSecure(\"x_cadso_automate_message_send\");\r\n\t\ttableGR.addEncodedQuery(`message=${sysId}^ORsys_id=${sysId}`, true);\r\n\t\ttableGR.orderBy(\"sys_created_on\");\r\n\t\ttableGR.query();\r\n\r\n\t\tconst strats = [];\r\n\r\n\t\twhile (tableGR.next()) {\r\n\t\t\tlet optimizedBy = getOptimizationChoice();\r\n\t\t\tif (checkBooleanField(tableGR, \"send_time_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"sendTime\");\r\n\t\t\t} else if (checkBooleanField(tableGR, \"time_zone_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"timeZone\");\r\n\t\t\t}\r\n\r\n\t\t\tconst sendOn = tableGR.getDisplayValue(\"delivery_time\");\r\n\t\t\tconst sendingStrategy = checkBooleanField(tableGR, \"send_now\") ? \"now\" : \"schedule\";\r\n\r\n\t\t\tconst profile = {\r\n\t\t\t\tlabel: \"Text Sender Profile\",\r\n\t\t\t\tdisplayValue: tableGR.getDisplayValue(\"message_number\"),\r\n\t\t\t\tvalue: tableGR.getValue(\"message_number\"),\r\n\t\t\t\telement: \"profile\",\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\thasValue: !!tableGR.getValue(\"message_number\"),\r\n\t\t\t\tfield: {\r\n\t\t\t\t\treference: \"x_cadso_automate_message_number\",\r\n\t\t\t\t\treferenceQuery: \"active=true\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tlet includes = parseAudienceData(tableGR.getValue(\"includes\"));\r\n\t\t\tlet excludes = parseAudienceData(tableGR.getValue(\"excludes\"));\r\n\r\n\t\t\tconst strat = {\r\n\t\t\t\toptimized: checkBooleanField(tableGR, \"send_time_optimization\"),\r\n\t\t\t\tsendingStrategy,\r\n\t\t\t\toptimizedBy: {\r\n\t\t\t\t\t...optimizedBy,\r\n\t\t\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tsendOn: {\r\n\t\t\t\t\tdisplayValue: sendOn,\r\n\t\t\t\t\tvalue: sendOn,\r\n\t\t\t\t\teditValue: { displayValue: sendOn, value: sendOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taudience: includes,\r\n\t\t\t\texcludesAudience: excludes,\r\n\t\t\t\ttext: tableGR.getDisplayValue(\"text\"),\r\n\t\t\t\timage: tableGR.getDisplayValue(\"media_url\"),\r\n\t\t\t\tunsubscribeText: tableGR.getDisplayValue(\"unsubscribe_text\"),\r\n\t\t\t\tmessageId: sysId,\r\n\t\t\t\tsysId: tableGR.getUniqueValue(),\r\n\t\t\t\tprofile,\r\n\t\t\t};\r\n\r\n\t\t\tstrats.push(strat);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstrats,\r\n\t\t\thasRecords: strats.length > 0,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getEmailOverview(sysId) {\r\n\t\tconst tableGR = new GlideRecordSecure(\"x_cadso_automate_email_send\");\r\n\t\ttableGR.addEncodedQuery(`email=${sysId}^ORsys_id=${sysId}`, true);\r\n\t\ttableGR.orderBy(\"sys_created_on\");\r\n\t\ttableGR.query();\r\n\r\n\t\tconst strats = [];\r\n\r\n\t\twhile (tableGR.next()) {\r\n\t\t\tlet optimizedBy = getOptimizationChoice();\r\n\t\t\tif (checkBooleanField(tableGR, \"send_time_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"sendTime\");\r\n\t\t\t} else if (checkBooleanField(tableGR, \"time_zone_optimization\")) {\r\n\t\t\t\toptimizedBy = getOptimizationChoice(\"timeZone\");\r\n\t\t\t}\r\n\r\n\t\t\tlet totalSends = 0;\r\n\t\t\tconst sendOn = tableGR.getDisplayValue(\"delivery_time\");\r\n\t\t\tconst completedOn = tableGR.getDisplayValue(\"completed_on\");\r\n\t\t\tconst dynamicSubject = tableGR.getDisplayValue(\"dynamic_subject_line\");\r\n\t\t\tconst sendingStrategy = checkBooleanField(tableGR, \"send_now\") ? \"now\" : \"schedule\";\r\n\r\n\t\t\tconst profile = {\r\n\t\t\t\tlabel: \"Email Sender Profile\",\r\n\t\t\t\tdisplayValue: tableGR.getDisplayValue(\"from_address\"),\r\n\t\t\t\tvalue: tableGR.getValue(\"from_address\"),\r\n\t\t\t\telement: \"profile\",\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\thasValue: !!tableGR.getValue(\"from_address\"),\r\n\t\t\t\tfield: {\r\n\t\t\t\t\treference: \"x_cadso_automate_sender_email\",\r\n\t\t\t\t\treferenceQuery: \"active=true\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tlet includes = parseAudienceData(tableGR.getValue(\"includes\"));\r\n\t\t\tlet excludes = parseAudienceData(tableGR.getValue(\"excludes\"));\r\n\r\n\t\t\tconst apiUtil = new x_cadso_automate.APIUtils();\r\n\t\t\tconst status = tableGR.getValue(\"status\");\r\n\t\t\t\r\n\t\t\tif (status != \"scheduled\" && status != \"draft\") {\r\n\t\t\t\tconst count = apiUtil.count({\r\n\t\t\t\t\ttable: \"x_cadso_automate_email_batch_recipient\",\r\n\t\t\t\t\tquery: `email_batch.email_send.sys_id=${tableGR.getUniqueValue()}`,\r\n\t\t\t\t});\r\n\t\t\t\ttotalSends += count;\r\n\t\t\t} else {\r\n\t\t\t\tconst includedMembers = apiUtil.query({\r\n\t\t\t\t\ttable: \"x_cadso_automate_audience_member\",\r\n\t\t\t\t\tquery: `audienceIN${tableGR.getValue(\"audiences\")}`,\r\n\t\t\t\t\treturnFields: \"contact_detail\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst excludedMembers = apiUtil.query({\r\n\t\t\t\t\ttable: \"x_cadso_automate_audience_member\",\r\n\t\t\t\t\tquery: `audienceIN${tableGR.getValue(\"excluded_audiences\")}`,\r\n\t\t\t\t\treturnFields: \"contact_detail\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst netIncludedMembers = includedMembers.filter(\r\n\t\t\t\t\t(includedMember) =>\r\n\t\t\t\t\t\t!excludedMembers.some(\r\n\t\t\t\t\t\t\t(excludedMember) => excludedMember.contact_detail === includedMember.contact_detail\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\ttotalSends += netIncludedMembers.length;\r\n\t\t\t}\r\n\r\n\t\t\tconst strat = {\r\n\t\t\t\toptimized: checkBooleanField(tableGR, \"send_time_optimization\"),\r\n\t\t\t\tsendingStrategy,\r\n\t\t\t\toptimizedBy: {\r\n\t\t\t\t\t...optimizedBy,\r\n\t\t\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tsendOn: {\r\n\t\t\t\t\tdisplayValue: sendOn,\r\n\t\t\t\t\tvalue: sendOn,\r\n\t\t\t\t\teditValue: { displayValue: sendOn, value: sendOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\tcompletedOn: {\r\n\t\t\t\t\tdisplayValue: completedOn,\r\n\t\t\t\t\tvalue: completedOn,\r\n\t\t\t\t\teditValue: { displayValue: completedOn, value: completedOn },\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tsearchValue: \"\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tdate: \"\",\r\n\t\t\t\t},\r\n\t\t\t\taudience: includes,\r\n\t\t\t\texcludesAudience: excludes,\r\n\t\t\t\tsubject: dynamicSubject,\r\n\t\t\t\tdefaultSubject: tableGR.getDisplayValue(\"static_subject_line\"),\r\n\t\t\t\tpreviewText: tableGR.getDisplayValue(\"preview_text\"),\r\n\t\t\t\tshowDefaultOption:\r\n\t\t\t\t\tdynamicSubject.indexOf(\"{\") > -1 &&\r\n\t\t\t\t\tdynamicSubject.indexOf(\"}\") > dynamicSubject.indexOf(\"{\"),\r\n\t\t\t\temailId: sysId,\r\n\t\t\t\tsysId: tableGR.getUniqueValue(),\r\n\t\t\t\tprofile,\r\n\t\t\t\temailHtml: tableGR.getValue(\"email_html\"),\r\n\t\t\t\tstatus: status,\r\n\t\t\t\tthumbnails: {\r\n\t\t\t\t\tmd: tableGR.getDisplayValue(\"thumbnail\"),\r\n\t\t\t\t\tlg: tableGR.getDisplayValue(\"thumbnail_large\"),\r\n\t\t\t\t},\r\n\t\t\t\ttotalSends: totalSends,\r\n\t\t\t};\r\n\r\n\t\t\tstrats.push(strat);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstrats,\r\n\t\t\thasRecords: strats.length > 0,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction checkBooleanField(tableGR, field) {\r\n\t\treturn (tableGR.getDisplayValue(field) + \"\").toLowerCase() === \"true\";\r\n\t}\r\n\r\n\tfunction getOptimizationChoice(value) {\r\n\t\tconst choices = [\r\n\t\t\t{\r\n\t\t\t\tdisplayValue: \"Time Zone\",\r\n\t\t\t\tvalue: \"timeZone\",\r\n\t\t\t\tdescription: \"Send at the same time for all recipients regardless of time zone.\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdisplayValue: \"Send Time\",\r\n\t\t\t\tvalue: \"sendTime\",\r\n\t\t\t\tdescription: \"Send at the most optimal time for each recipient.\",\r\n\t\t\t},\r\n\t\t\t{ displayValue: \"No Optimization\", value: \"none\" },\r\n\t\t];\r\n\r\n\t\tif (value === \"timeZone\") {\r\n\t\t\treturn choices[0];\r\n\t\t} else if (value === \"sendTime\") {\r\n\t\t\treturn choices[1];\r\n\t\t} else {\r\n\t\t\treturn choices[2];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseAudienceData(audienceJson) {\r\n\t\treturn JSON.parse(audienceJson) || {\r\n\t\t\tdisplayValue: [],\r\n\t\t\tvalue: \"\",\r\n\t\t\tselected: {},\r\n\t\t\teditValue: { displayValue: \"\", value: \"\" },\r\n\t\t\topen: false,\r\n\t\t\tsearchValue: \"\",\r\n\t\t\ttables: [{ table: \"x_cadso_automate_audience\", limit: 7, icon: \"user\", searchValue: \"\" }],\r\n\t\t};\r\n\t}\r\n})(request, response);\r\n"
  },
  "sys_updated_on": {
    "value": "2025-08-21 15:16:01",
    "display_value": "2025-08-21 08:16:01 AM"
  },
  "enforce_acl": {
    "value": "003a5109c3ee021085b196c4e40131ab",
    "display_value": "Tenon Automate UI API Access"
  },
  "web_service_version": {
    "value": "",
    "display_value": ""
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "",
    "display_value": ""
  },
  "http_method": {
    "value": "POST",
    "display_value": "POST"
  },
  "sys_updated_by": {
    "value": "dennis.huh",
    "display_value": "dennis.huh"
  },
  "operation_uri": {
    "value": "/api/x_cadso_automate/ui/sendingStrategy/overview",
    "display_value": "/api/x_cadso_automate/ui/sendingStrategy/overview"
  },
  "sys_created_on": {
    "value": "2024-09-12 08:26:58",
    "display_value": "2024-09-12 01:26:58 AM"
  },
  "sys_name": {
    "value": "Sending Strategy - Overview",
    "display_value": "Sending Strategy - Overview"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "web_service_definition": {
    "value": "4a222358c3aa425085b196c4e401318e",
    "display_value": "Tenon Automate UI API"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "",
    "display_value": ""
  },
  "requires_snc_internal_role": {
    "value": "true",
    "display_value": "true"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "22",
    "display_value": "22"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "Sending Strategies",
    "display_value": "Sending Strategies"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_d50eda12c3e8d69085b196c4e4013118",
    "display_value": "sys_ws_operation_d50eda12c3e8d69085b196c4e4013118"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Sending Strategy - Overview",
    "display_value": "Sending Strategy - Overview"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/sendingStrategy/overview",
    "display_value": "/sendingStrategy/overview"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
