{
  "_metadata": {
    "table": "sys_ws_operation",
    "sys_id": "d844282fc39b461085b196c4e40131de",
    "extracted_at": "2025-09-19T21:48:33.479Z",
    "display_value": "Audience Builder - Save",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "short_description": {
    "value": "",
    "display_value": ""
  },
  "operation_script": {
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n        let {\r\n            initialize,\r\n            title,\r\n            table,\r\n            field,\r\n            type,\r\n            sysId,\r\n            conditions,\r\n            filters = []\r\n        } = request.body.data;\r\n        var autoAudienceGr = new GlideRecord('x_cadso_automate_audience');\r\n        if (initialize === 'true' || initialize === true) {\r\n            autoAudienceGr.initialize();\r\n            autoAudienceGr.setValue('field', field);\r\n            autoAudienceGr.setValue('name', title);\r\n            autoAudienceGr.setValue('table', table);\r\n            autoAudienceGr.setValue('type', type);\r\n            autoAudienceGr.setValue('filter_object', JSON.stringify(filters));\r\n\t\t\tautoAudienceGr.insert();\r\n            sysId = autoAudienceGr.getUniqueValue();\r\n\r\n            response.setBody({\r\n                valid: !!sysId,\r\n                sysId,\r\n                table,\r\n                field,\r\n                view: autoAudienceGr.getValue('view')\r\n            });\r\n\r\n        } else if (autoAudienceGr.get(sysId)) {\r\n            var Audience = new x_cadso_automate.Audience();\r\n            const recordField = Audience.getRecordFields(table);\r\n\r\n            let apiUtils = new x_cadso_automate.APIUtils();\r\n            let count = apiUtils.count({\r\n                table,\r\n                query: conditions\r\n            });\r\n            \r\n            autoAudienceGr.setValue('conditions', conditions);\r\n            autoAudienceGr.setValue('count', count);\r\n            autoAudienceGr.setValue('filter_object', JSON.stringify(filters));\r\n\t\t\tautoAudienceGr.setValue('hash_state', 'generating');\r\n            autoAudienceGr.update();\r\n\r\n            response.setBody({\r\n                valid: true,\r\n                sysId: sysId,\r\n                table,\r\n                field,\r\n                recordField,\r\n                conditions,\r\n                count,\r\n                view: autoAudienceGr.getValue('view')\r\n            });\r\n        }\r\n        return response;\r\n\r\n\r\n})(request, response);",
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n        let {\r\n            initialize,\r\n            title,\r\n            table,\r\n            field,\r\n            type,\r\n            sysId,\r\n            conditions,\r\n            filters = []\r\n        } = request.body.data;\r\n        var autoAudienceGr = new GlideRecord('x_cadso_automate_audience');\r\n        if (initialize === 'true' || initialize === true) {\r\n            autoAudienceGr.initialize();\r\n            autoAudienceGr.setValue('field', field);\r\n            autoAudienceGr.setValue('name', title);\r\n            autoAudienceGr.setValue('table', table);\r\n            autoAudienceGr.setValue('type', type);\r\n            autoAudienceGr.setValue('filter_object', JSON.stringify(filters));\r\n\t\t\tautoAudienceGr.insert();\r\n            sysId = autoAudienceGr.getUniqueValue();\r\n\r\n            response.setBody({\r\n                valid: !!sysId,\r\n                sysId,\r\n                table,\r\n                field,\r\n                view: autoAudienceGr.getValue('view')\r\n            });\r\n\r\n        } else if (autoAudienceGr.get(sysId)) {\r\n            var Audience = new x_cadso_automate.Audience();\r\n            const recordField = Audience.getRecordFields(table);\r\n\r\n            let apiUtils = new x_cadso_automate.APIUtils();\r\n            let count = apiUtils.count({\r\n                table,\r\n                query: conditions\r\n            });\r\n            \r\n            autoAudienceGr.setValue('conditions', conditions);\r\n            autoAudienceGr.setValue('count', count);\r\n            autoAudienceGr.setValue('filter_object', JSON.stringify(filters));\r\n\t\t\tautoAudienceGr.setValue('hash_state', 'generating');\r\n            autoAudienceGr.update();\r\n\r\n            response.setBody({\r\n                valid: true,\r\n                sysId: sysId,\r\n                table,\r\n                field,\r\n                recordField,\r\n                conditions,\r\n                count,\r\n                view: autoAudienceGr.getValue('view')\r\n            });\r\n        }\r\n        return response;\r\n\r\n\r\n})(request, response);"
  },
  "sys_updated_on": {
    "value": "2025-08-14 12:55:23",
    "display_value": "2025-08-14 05:55:23 AM"
  },
  "enforce_acl": {
    "value": "003a5109c3ee021085b196c4e40131ab",
    "display_value": "Tenon Automate UI API Access"
  },
  "web_service_version": {
    "value": "",
    "display_value": ""
  },
  "sys_class_name": {
    "value": "sys_ws_operation",
    "display_value": "Scripted REST Resource"
  },
  "requires_acl_authorization": {
    "value": "true",
    "display_value": "true"
  },
  "request_example": {
    "value": "",
    "display_value": ""
  },
  "http_method": {
    "value": "POST",
    "display_value": "POST"
  },
  "sys_updated_by": {
    "value": "trevor.offen",
    "display_value": "trevor.offen"
  },
  "operation_uri": {
    "value": "/api/x_cadso_automate/ui/audienceBuilder/save",
    "display_value": "/api/x_cadso_automate/ui/audienceBuilder/save"
  },
  "sys_created_on": {
    "value": "2024-07-15 17:29:30",
    "display_value": "2024-07-15 10:29:30 AM"
  },
  "sys_name": {
    "value": "Audience Builder - Save",
    "display_value": "Audience Builder - Save"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "web_service_definition": {
    "value": "4a222358c3aa425085b196c4e401318e",
    "display_value": "Tenon Automate UI API"
  },
  "consumes": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "value": "",
    "display_value": ""
  },
  "requires_snc_internal_role": {
    "value": "true",
    "display_value": "true"
  },
  "requires_authentication": {
    "value": "true",
    "display_value": "true"
  },
  "sys_mod_count": {
    "value": "118",
    "display_value": "118"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "x_cadso_api_docs_tags": {
    "value": "Audiences",
    "display_value": "Audiences"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_update_name": {
    "value": "sys_ws_operation_d844282fc39b461085b196c4e40131de",
    "display_value": "sys_ws_operation_d844282fc39b461085b196c4e40131de"
  },
  "consumes_customized": {
    "value": "false",
    "display_value": "false"
  },
  "name": {
    "value": "Audience Builder - Save",
    "display_value": "Audience Builder - Save"
  },
  "produces": {
    "value": "application/json,application/xml,text/xml",
    "display_value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "value": "/audienceBuilder/save",
    "display_value": "/audienceBuilder/save"
  },
  "produces_customized": {
    "value": "false",
    "display_value": "false"
  },
  "default_operation_uri": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
