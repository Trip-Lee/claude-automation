{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "0005d0b133ece2507b18bc534d5c7b5d",
    "extracted_at": "2025-09-19T21:48:39.292Z",
    "display_value": "Set Document ID from Config",
    "application": "Tenon_Marketing_Journey_Builder",
    "scope": {
      "display_value": "Tenon Marketing Journey Builder",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/cd61acbbc3c85a1085b196c4e40131bd",
      "value": "cd61acbbc3c85a1085b196c4e40131bd"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-03-28 05:46:10",
    "display_value": "2025-03-27 10:46:10 PM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-03-28 05:33:43",
    "display_value": "2025-03-27 10:33:43 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Set Document ID from Config",
    "display_value": "Set Document ID from Config"
  },
  "sys_scope": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "order": {
    "value": "1000",
    "display_value": "1,000"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "3",
    "display_value": "3"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_journey_instance_step",
    "display_value": "x_cadso_journey_instance_step"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    let documentId = current.getValue('document_id');\r\n    const versionStepGr = current.version_step.getRefRecord();\r\n    if (versionStepGr.isValidRecord()) {\r\n        let configurations = versionStepGr.getValue('configurations');\r\n        configurations = configurations ? JSON.parse(configurations) : {};\r\n        if (configurations.documentId) {\r\n            const {\r\n                value = '', dotWalk = '', dotWalkTable = ''\r\n            } = configurations.documentId;\r\n            if (value) {\r\n                documentId = value;\r\n                current.setValue('document_id', documentId);\r\n            } else if (dotWalk && dotWalkTable) {\r\n                const instanceGr = current.instance.getRefRecord();\r\n                if (instanceGr.isValidRecord()) {\r\n                    const table = instanceGr.getValue('table');\r\n                    const instanceDocumentId = instanceGr.getValue('document_id');\r\n                    if (table && instanceDocumentId && table === dotWalkTable) {\r\n                        // Cannot use GlideRecordSecure because this needs to happen regardless of permissions\r\n                        const tableGr = new GlideRecord(table);\r\n                        if (tableGr.get(instanceDocumentId) && tableGr.isValidField(dotWalk)) {\r\n                            documentId = tableGr.getValue(dotWalk);\r\n                            current.setValue('document_id', documentId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    let documentId = current.getValue('document_id');\r\n    const versionStepGr = current.version_step.getRefRecord();\r\n    if (versionStepGr.isValidRecord()) {\r\n        let configurations = versionStepGr.getValue('configurations');\r\n        configurations = configurations ? JSON.parse(configurations) : {};\r\n        if (configurations.documentId) {\r\n            const {\r\n                value = '', dotWalk = '', dotWalkTable = ''\r\n            } = configurations.documentId;\r\n            if (value) {\r\n                documentId = value;\r\n                current.setValue('document_id', documentId);\r\n            } else if (dotWalk && dotWalkTable) {\r\n                const instanceGr = current.instance.getRefRecord();\r\n                if (instanceGr.isValidRecord()) {\r\n                    const table = instanceGr.getValue('table');\r\n                    const instanceDocumentId = instanceGr.getValue('document_id');\r\n                    if (table && instanceDocumentId && table === dotWalkTable) {\r\n                        // Cannot use GlideRecordSecure because this needs to happen regardless of permissions\r\n                        const tableGr = new GlideRecord(table);\r\n                        if (tableGr.get(instanceDocumentId) && tableGr.isValidField(dotWalk)) {\r\n                            documentId = tableGr.getValue(dotWalk);\r\n                            current.setValue('document_id', documentId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 31,
      "char_count": 1610,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    let documentId = current.getValue('document_id');\r\n    const versionStepGr = current.version_step.getRefRecord();\r\n    if (versionS...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    let documentId = current.getValue('document_id');\r\n    const versionStepGr = current.version_step.getRefRecord();\r\n    if (versionStepGr.isValidRecord()) {\r\n        let configurations = versionStepGr.getValue('configurations');\r\n        configurations = configurations ? JSON.parse(configurations) : {};\r\n        if (configurations.documentId) {\r\n            const {\r\n                value = '', dotWalk = '', dotWalkTable = ''\r\n            } = configurations.documentId;\r\n            if (value) {\r\n                documentId = value;\r\n                current.setValue('document_id', documentId);\r\n            } else if (dotWalk && dotWalkTable) {\r\n                const instanceGr = current.instance.getRefRecord();\r\n                if (instanceGr.isValidRecord()) {\r\n                    const table = instanceGr.getValue('table');\r\n                    const instanceDocumentId = instanceGr.getValue('document_id');\r\n                    if (table && instanceDocumentId && table === dotWalkTable) {\r\n                        // Cannot use GlideRecordSecure because this needs to happen regardless of permissions\r\n                        const tableGr = new GlideRecord(table);\r\n                        if (tableGr.get(instanceDocumentId) && tableGr.isValidField(dotWalk)) {\r\n                            documentId = tableGr.getValue(dotWalk);\r\n                            current.setValue('document_id', documentId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "version_stepISNOTEMPTY^instanceISNOTEMPTY^EQ",
    "display_value": "version_stepISNOTEMPTY^instanceISNOTEMPTY^EQ"
  },
  "sys_package": {
    "value": "cd61acbbc3c85a1085b196c4e40131bd",
    "display_value": "Tenon Marketing Journey Builder"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_0005d0b133ece2507b18bc534d5c7b5d",
    "display_value": "sys_script_0005d0b133ece2507b18bc534d5c7b5d"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Set Document ID from Config",
    "display_value": "Set Document ID from Config"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
