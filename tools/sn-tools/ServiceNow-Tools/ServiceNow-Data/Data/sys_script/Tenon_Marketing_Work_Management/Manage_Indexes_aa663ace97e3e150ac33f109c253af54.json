{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "aa663ace97e3e150ac33f109c253af54",
    "extracted_at": "2025-09-19T21:48:42.473Z",
    "display_value": "Manage Indexes",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2023-07-14 21:35:56",
    "display_value": "2023-07-14 02:35:56 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2023-06-22 06:09:58",
    "display_value": "2023-06-21 11:09:58 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Manage Indexes",
    "display_value": "Manage Indexes"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "order": {
    "value": "1000",
    "display_value": "1,000"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "20",
    "display_value": "20"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_work_task",
    "display_value": "x_cadso_work_task"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/) {\n\n\tlet index = current.getValue('index');\n\tconst order = current.getValue('order');\n\n\t// \tif (order == index) {\n\t// \t\treturn;\n\t// \t}\n\tconst project = current.getValue('project');\n\tconst sprint = current.getValue('sprint');\n\tindex = parseInt(index);\n\tconst prevIndex = parseInt(previous.getValue('index'));\n\tconst indexIsHigher = index > prevIndex;\n\tconst lowerIndex = indexIsHigher ? prevIndex : index;\n\tconst higherIndex = indexIsHigher ? index : prevIndex;\n\tconst sortByFn = indexIsHigher ? 'orderBy' : 'orderByDesc';\n\n\tvar taskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.addQuery('sys_id', '!=', current.getUniqueValue());\n\ttaskGr.addQuery('index', '>=', lowerIndex);\n\ttaskGr.addQuery('index', '<=', higherIndex);\n\ttaskGr[sortByFn]('index');\n\ttaskGr.query();\n\n\tlet last = indexIsHigher ? lowerIndex : higherIndex;\n\n\twhile (taskGr.next()) {\n\t\tconst currentIndex = parseInt(taskGr.getValue('index'));\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tif (indexIsHigher) {\n\t\t\tlast++;\n\t\t} else if (!indexIsHigher) {\n\t\t\tlast--;\n\t\t}\n\t}\n\n\n\ttaskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.orderBy('index');\n\ttaskGr.query();\n\n\tlast = 0;\n\n\twhile (taskGr.next()) {\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tlast++;\n\t}\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/) {\n\n\tlet index = current.getValue('index');\n\tconst order = current.getValue('order');\n\n\t// \tif (order == index) {\n\t// \t\treturn;\n\t// \t}\n\tconst project = current.getValue('project');\n\tconst sprint = current.getValue('sprint');\n\tindex = parseInt(index);\n\tconst prevIndex = parseInt(previous.getValue('index'));\n\tconst indexIsHigher = index > prevIndex;\n\tconst lowerIndex = indexIsHigher ? prevIndex : index;\n\tconst higherIndex = indexIsHigher ? index : prevIndex;\n\tconst sortByFn = indexIsHigher ? 'orderBy' : 'orderByDesc';\n\n\tvar taskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.addQuery('sys_id', '!=', current.getUniqueValue());\n\ttaskGr.addQuery('index', '>=', lowerIndex);\n\ttaskGr.addQuery('index', '<=', higherIndex);\n\ttaskGr[sortByFn]('index');\n\ttaskGr.query();\n\n\tlet last = indexIsHigher ? lowerIndex : higherIndex;\n\n\twhile (taskGr.next()) {\n\t\tconst currentIndex = parseInt(taskGr.getValue('index'));\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tif (indexIsHigher) {\n\t\t\tlast++;\n\t\t} else if (!indexIsHigher) {\n\t\t\tlast--;\n\t\t}\n\t}\n\n\n\ttaskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.orderBy('index');\n\ttaskGr.query();\n\n\tlast = 0;\n\n\twhile (taskGr.next()) {\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tlast++;\n\t}\n})(current, previous);",
    "formatted_script": {
      "line_count": 66,
      "char_count": 1678,
      "preview": "(function executeRule(current, previous /*null when async*/) {\n\n\tlet index = current.getValue('index');\n\tconst order = current.getValue('order');\n\n\t// \tif (order == index) {\n\t// \t\treturn;\n\t// \t}\n\tcons...",
      "full_script": "(function executeRule(current, previous /*null when async*/) {\n\n\tlet index = current.getValue('index');\n\tconst order = current.getValue('order');\n\n\t// \tif (order == index) {\n\t// \t\treturn;\n\t// \t}\n\tconst project = current.getValue('project');\n\tconst sprint = current.getValue('sprint');\n\tindex = parseInt(index);\n\tconst prevIndex = parseInt(previous.getValue('index'));\n\tconst indexIsHigher = index > prevIndex;\n\tconst lowerIndex = indexIsHigher ? prevIndex : index;\n\tconst higherIndex = indexIsHigher ? index : prevIndex;\n\tconst sortByFn = indexIsHigher ? 'orderBy' : 'orderByDesc';\n\n\tvar taskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.addQuery('sys_id', '!=', current.getUniqueValue());\n\ttaskGr.addQuery('index', '>=', lowerIndex);\n\ttaskGr.addQuery('index', '<=', higherIndex);\n\ttaskGr[sortByFn]('index');\n\ttaskGr.query();\n\n\tlet last = indexIsHigher ? lowerIndex : higherIndex;\n\n\twhile (taskGr.next()) {\n\t\tconst currentIndex = parseInt(taskGr.getValue('index'));\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tif (indexIsHigher) {\n\t\t\tlast++;\n\t\t} else if (!indexIsHigher) {\n\t\t\tlast--;\n\t\t}\n\t}\n\n\n\ttaskGr = new GlideRecord('x_cadso_work_task');\n\tif (sprint) {\n\t\ttaskGr.addQuery('sprint', sprint);\n\t} else {\n\t\ttaskGr.addEncodedQuery('sprintISEMPTY');\n\t}\n\n\ttaskGr.addQuery('project', project);\n\ttaskGr.orderBy('index');\n\ttaskGr.query();\n\n\tlast = 0;\n\n\twhile (taskGr.next()) {\n\t\ttaskGr.setValue('index', last);\n\t\ttaskGr.setWorkflow(false);\n\t\ttaskGr.update();\n\t\tlast++;\n\t}\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "indexVALCHANGES^sprintISNOTEMPTY^EQ",
    "display_value": "indexVALCHANGES^sprintISNOTEMPTY^EQ"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_aa663ace97e3e150ac33f109c253af54",
    "display_value": "sys_script_aa663ace97e3e150ac33f109c253af54"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Manage Indexes",
    "display_value": "Manage Indexes"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
