{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "580ff499974b6510ac33f109c253af9d",
    "extracted_at": "2025-09-19T21:48:42.544Z",
    "display_value": "Set 'Completed story points' field -Task",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "false",
    "display_value": "false"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2023-07-29 20:52:37",
    "display_value": "2023-07-29 01:52:37 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2023-05-25 17:04:06",
    "display_value": "2023-05-25 10:04:06 AM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Set 'Completed story points' field -Task",
    "display_value": "Set 'Completed story points' field -Task"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "desiree.morehouse",
    "display_value": "desiree.morehouse"
  },
  "order": {
    "value": "300",
    "display_value": "300"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "28",
    "display_value": "28"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_work_task",
    "display_value": "x_cadso_work_task"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /* null when async */) {\n  const pastSprint = previous.getValue(\"sprint\");\n  const currentSprint = current.getValue(\"sprint\");\n  const sprintHasChanged = current.sprint.changes();\n\n  if (sprintHasChanged && pastSprint) {\n    const pastSprintGr = previous.sprint.getRefRecord();\n    if (pastSprintGr.getValue(\"state\") !== \"40\") {\n      const pastSp = calculateSprintStoryPoints(pastSprint);\n      pastSprintGr.setValue(\"completed_story_points\", pastSp);\n      pastSprintGr.update();\n    }\n  }\n\n  if (currentSprint) {\n    const currentSprintGr = current.sprint.getRefRecord();\n    if (currentSprintGr.getValue(\"state\") !== \"40\") {\n      const currentSp = calculateSprintStoryPoints(currentSprint);\n      currentSprintGr.setValue(\"completed_story_points\", currentSp);\n      currentSprintGr.update();\n    }\n  }\n\n  function calculateSprintStoryPoints(sprintSysId) {\n    let sumSPs = 0;\n    const sprintGr = new GlideRecord(\"x_cadso_work_sprint\");\n    if (sprintGr.get(sprintSysId)) {\n      const tasksGr = new GlideRecord(\"x_cadso_work_task\");\n      tasksGr.addQuery(\"sprint\", sprintSysId);\n      tasksGr.addQuery(\"state\", \"40\");\n      tasksGr.query();\n      while (tasksGr.next()) {\n        sumSPs += parseFloat(tasksGr.getValue(\"story_points\"));\n      }\n    }\n    return sumSPs;\n  }\n})(current, previous);\n",
    "display_value": "(function executeRule(current, previous /* null when async */) {\n  const pastSprint = previous.getValue(\"sprint\");\n  const currentSprint = current.getValue(\"sprint\");\n  const sprintHasChanged = current.sprint.changes();\n\n  if (sprintHasChanged && pastSprint) {\n    const pastSprintGr = previous.sprint.getRefRecord();\n    if (pastSprintGr.getValue(\"state\") !== \"40\") {\n      const pastSp = calculateSprintStoryPoints(pastSprint);\n      pastSprintGr.setValue(\"completed_story_points\", pastSp);\n      pastSprintGr.update();\n    }\n  }\n\n  if (currentSprint) {\n    const currentSprintGr = current.sprint.getRefRecord();\n    if (currentSprintGr.getValue(\"state\") !== \"40\") {\n      const currentSp = calculateSprintStoryPoints(currentSprint);\n      currentSprintGr.setValue(\"completed_story_points\", currentSp);\n      currentSprintGr.update();\n    }\n  }\n\n  function calculateSprintStoryPoints(sprintSysId) {\n    let sumSPs = 0;\n    const sprintGr = new GlideRecord(\"x_cadso_work_sprint\");\n    if (sprintGr.get(sprintSysId)) {\n      const tasksGr = new GlideRecord(\"x_cadso_work_task\");\n      tasksGr.addQuery(\"sprint\", sprintSysId);\n      tasksGr.addQuery(\"state\", \"40\");\n      tasksGr.query();\n      while (tasksGr.next()) {\n        sumSPs += parseFloat(tasksGr.getValue(\"story_points\"));\n      }\n    }\n    return sumSPs;\n  }\n})(current, previous);\n",
    "formatted_script": {
      "line_count": 39,
      "char_count": 1343,
      "preview": "(function executeRule(current, previous /* null when async */) {\n  const pastSprint = previous.getValue(\"sprint\");\n  const currentSprint = current.getValue(\"sprint\");\n  const sprintHasChanged = curren...",
      "full_script": "(function executeRule(current, previous /* null when async */) {\n  const pastSprint = previous.getValue(\"sprint\");\n  const currentSprint = current.getValue(\"sprint\");\n  const sprintHasChanged = current.sprint.changes();\n\n  if (sprintHasChanged && pastSprint) {\n    const pastSprintGr = previous.sprint.getRefRecord();\n    if (pastSprintGr.getValue(\"state\") !== \"40\") {\n      const pastSp = calculateSprintStoryPoints(pastSprint);\n      pastSprintGr.setValue(\"completed_story_points\", pastSp);\n      pastSprintGr.update();\n    }\n  }\n\n  if (currentSprint) {\n    const currentSprintGr = current.sprint.getRefRecord();\n    if (currentSprintGr.getValue(\"state\") !== \"40\") {\n      const currentSp = calculateSprintStoryPoints(currentSprint);\n      currentSprintGr.setValue(\"completed_story_points\", currentSp);\n      currentSprintGr.update();\n    }\n  }\n\n  function calculateSprintStoryPoints(sprintSysId) {\n    let sumSPs = 0;\n    const sprintGr = new GlideRecord(\"x_cadso_work_sprint\");\n    if (sprintGr.get(sprintSysId)) {\n      const tasksGr = new GlideRecord(\"x_cadso_work_task\");\n      tasksGr.addQuery(\"sprint\", sprintSysId);\n      tasksGr.addQuery(\"state\", \"40\");\n      tasksGr.query();\n      while (tasksGr.next()) {\n        sumSPs += parseFloat(tasksGr.getValue(\"story_points\"));\n      }\n    }\n    return sumSPs;\n  }\n})(current, previous);\n"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "sprintVALCHANGES^ORstory_pointsVALCHANGES^ORstateVALCHANGES^EQ",
    "display_value": "sprintVALCHANGES^ORstory_pointsVALCHANGES^ORstateVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_580ff499974b6510ac33f109c253af9d",
    "display_value": "sys_script_580ff499974b6510ac33f109c253af9d"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Set 'Completed story points' field -Task",
    "display_value": "Set 'Completed story points' field -Task"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
