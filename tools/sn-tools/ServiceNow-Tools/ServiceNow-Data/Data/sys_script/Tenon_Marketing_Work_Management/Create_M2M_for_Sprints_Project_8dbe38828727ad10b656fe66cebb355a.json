{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "8dbe38828727ad10b656fe66cebb355a",
    "extracted_at": "2025-09-19T21:48:42.508Z",
    "display_value": "Create M2M for Sprints Project",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2023-11-07 01:48:24",
    "display_value": "2023-11-06 05:48:24 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2023-06-21 21:42:30",
    "display_value": "2023-06-21 02:42:30 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Create M2M for Sprints Project",
    "display_value": "Create M2M for Sprints Project"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "daniel.cudney",
    "display_value": "daniel.cudney"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "36",
    "display_value": "36"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_work_project",
    "display_value": "x_cadso_work_project"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/) {\n\tconst project = current.getUniqueValue();\n\tlet prevSprints = previous.getValue('sprints') + '';\n\tlet previousSprintsObj = {};\n\tlet currSprints = current.getValue('sprints') + '';\n\tlet currentSprintsObj = {};\n\n\tprevSprints.split(',').forEach(sprint => {\n\t\tpreviousSprintsObj[sprint] = sprint;\n\t});\n\n\tcurrSprints.split(',').forEach(sprint => {\n\t\tcurrentSprintsObj[sprint] = sprint;\n\t});\n\n\tlet delEQ = prevSprints.split(',').filter(sprint => {\n\t\treturn !currentSprintsObj[sprint] && sprint !== 'null';\n\t}).map(sprint => {\n\t\treturn `sprint=${sprint}`;\n\t}).join('^OR');\n\n\tvar sprintProjectM2MGr = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\tvar sprintProjectM2MGr2 = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\n\tif (delEQ.length) {\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\t\n\t\tsprintProjectM2MGr.addEncodedQuery(delEQ);\n\t\tsprintProjectM2MGr.query();\n\t\tsprintProjectM2MGr.deleteMultiple();\n\t}\n\n\tcurrSprints.split(',').filter(sprint => {\n\t\treturn !previousSprintsObj[sprint] && sprint !== 'null';\n\t}).forEach(sprint => {\n\t\tsprintProjectM2MGr.initialize();\n\t\tsprintProjectM2MGr.addQuery('sprint', sprint);\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\n\t\tsprintProjectM2MGr.query();\n\n\t\tif (!sprintProjectM2MGr.hasNext()) {\n\t\t\tsprintProjectM2MGr2.initialize();\n\t\t\tsprintProjectM2MGr2.newRecord();\n\t\t\tsprintProjectM2MGr2.setValue('project', project);\n\t\t\tsprintProjectM2MGr2.setValue('sprint', sprint);\n\t\t\tsprintProjectM2MGr2.insert();\n\t\t}\n\t});\n\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/) {\n\tconst project = current.getUniqueValue();\n\tlet prevSprints = previous.getValue('sprints') + '';\n\tlet previousSprintsObj = {};\n\tlet currSprints = current.getValue('sprints') + '';\n\tlet currentSprintsObj = {};\n\n\tprevSprints.split(',').forEach(sprint => {\n\t\tpreviousSprintsObj[sprint] = sprint;\n\t});\n\n\tcurrSprints.split(',').forEach(sprint => {\n\t\tcurrentSprintsObj[sprint] = sprint;\n\t});\n\n\tlet delEQ = prevSprints.split(',').filter(sprint => {\n\t\treturn !currentSprintsObj[sprint] && sprint !== 'null';\n\t}).map(sprint => {\n\t\treturn `sprint=${sprint}`;\n\t}).join('^OR');\n\n\tvar sprintProjectM2MGr = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\tvar sprintProjectM2MGr2 = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\n\tif (delEQ.length) {\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\t\n\t\tsprintProjectM2MGr.addEncodedQuery(delEQ);\n\t\tsprintProjectM2MGr.query();\n\t\tsprintProjectM2MGr.deleteMultiple();\n\t}\n\n\tcurrSprints.split(',').filter(sprint => {\n\t\treturn !previousSprintsObj[sprint] && sprint !== 'null';\n\t}).forEach(sprint => {\n\t\tsprintProjectM2MGr.initialize();\n\t\tsprintProjectM2MGr.addQuery('sprint', sprint);\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\n\t\tsprintProjectM2MGr.query();\n\n\t\tif (!sprintProjectM2MGr.hasNext()) {\n\t\t\tsprintProjectM2MGr2.initialize();\n\t\t\tsprintProjectM2MGr2.newRecord();\n\t\t\tsprintProjectM2MGr2.setValue('project', project);\n\t\t\tsprintProjectM2MGr2.setValue('sprint', sprint);\n\t\t\tsprintProjectM2MGr2.insert();\n\t\t}\n\t});\n\n})(current, previous);",
    "formatted_script": {
      "line_count": 49,
      "char_count": 1586,
      "preview": "(function executeRule(current, previous /*null when async*/) {\n\tconst project = current.getUniqueValue();\n\tlet prevSprints = previous.getValue('sprints') + '';\n\tlet previousSprintsObj = {};\n\tlet currS...",
      "full_script": "(function executeRule(current, previous /*null when async*/) {\n\tconst project = current.getUniqueValue();\n\tlet prevSprints = previous.getValue('sprints') + '';\n\tlet previousSprintsObj = {};\n\tlet currSprints = current.getValue('sprints') + '';\n\tlet currentSprintsObj = {};\n\n\tprevSprints.split(',').forEach(sprint => {\n\t\tpreviousSprintsObj[sprint] = sprint;\n\t});\n\n\tcurrSprints.split(',').forEach(sprint => {\n\t\tcurrentSprintsObj[sprint] = sprint;\n\t});\n\n\tlet delEQ = prevSprints.split(',').filter(sprint => {\n\t\treturn !currentSprintsObj[sprint] && sprint !== 'null';\n\t}).map(sprint => {\n\t\treturn `sprint=${sprint}`;\n\t}).join('^OR');\n\n\tvar sprintProjectM2MGr = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\tvar sprintProjectM2MGr2 = new GlideRecord('x_cadso_work_sprint_project_m2m');\n\n\tif (delEQ.length) {\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\t\n\t\tsprintProjectM2MGr.addEncodedQuery(delEQ);\n\t\tsprintProjectM2MGr.query();\n\t\tsprintProjectM2MGr.deleteMultiple();\n\t}\n\n\tcurrSprints.split(',').filter(sprint => {\n\t\treturn !previousSprintsObj[sprint] && sprint !== 'null';\n\t}).forEach(sprint => {\n\t\tsprintProjectM2MGr.initialize();\n\t\tsprintProjectM2MGr.addQuery('sprint', sprint);\n\t\tsprintProjectM2MGr.addQuery('project', current.getUniqueValue());\n\t\tsprintProjectM2MGr.query();\n\n\t\tif (!sprintProjectM2MGr.hasNext()) {\n\t\t\tsprintProjectM2MGr2.initialize();\n\t\t\tsprintProjectM2MGr2.newRecord();\n\t\t\tsprintProjectM2MGr2.setValue('project', project);\n\t\t\tsprintProjectM2MGr2.setValue('sprint', sprint);\n\t\t\tsprintProjectM2MGr2.insert();\n\t\t}\n\t});\n\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "sprintsVALCHANGES^EQ",
    "display_value": "sprintsVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_8dbe38828727ad10b656fe66cebb355a",
    "display_value": "sys_script_8dbe38828727ad10b656fe66cebb355a"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Create M2M for Sprints Project",
    "display_value": "Create M2M for Sprints Project"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
