{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "448beb9547dab55098519fd8036d43a4",
    "extracted_at": "2025-09-19T21:48:42.032Z",
    "display_value": "Parent & Sub Goals Logic",
    "application": "Tenon_Marketing_Work_Management",
    "scope": {
      "display_value": "Tenon Marketing Work Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/4e4449a5475c255085d19fd8036d43a0",
      "value": "4e4449a5475c255085d19fd8036d43a0"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-07-16 20:04:49",
    "display_value": "2025-07-16 01:04:49 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2023-11-03 18:59:40",
    "display_value": "2023-11-03 11:59:40 AM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Parent & Sub Goals Logic",
    "display_value": "Parent & Sub Goals Logic"
  },
  "sys_scope": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "sys_created_by": {
    "value": "desiree.morehouse",
    "display_value": "desiree.morehouse"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "6",
    "display_value": "6"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_work_goal",
    "display_value": "x_cadso_work_goal"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/) {\r\n\t// Intentionally using GlideRecord vs GlideRecordSecure here because...\r\n\t// We want the update made regardless of the current users permissions.\r\n\t// Classified: Business Logic\r\n\t\r\n\t// TODO: Validate this logic\r\n    if (current.parent_goals.changes()) {\r\n        var parentGoalsList = (current.getValue('parent_goals') + '').split(',');\r\n        for (var i = 0; i < parentGoalsList.length; i++) {\r\n            var parentGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (parentGoalGr.get(parentGoalsList[i])) {\r\n                var subGoals = (parentGoalGr.getValue('sub_goals') + '').split(',');\r\n\t\t\t\tsubGoals.push(current.getUniqueValue());\r\n                parentGoalGr.setValue('sub_goals', subGoals.join(','));\r\n                parentGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (current.sub_goals.changes()) {\r\n        var subGoalsList = (current.getValue('sub_goals') + '').split(',');\r\n        for (var a = 0; a < subGoalsList.length; a++) {\r\n            var subGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (subGoalGr.get(subGoalsList[a])) {\r\n                subGoalGr.setValue('parent_goals', current.getUnqiueValue());\r\n                subGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/) {\r\n\t// Intentionally using GlideRecord vs GlideRecordSecure here because...\r\n\t// We want the update made regardless of the current users permissions.\r\n\t// Classified: Business Logic\r\n\t\r\n\t// TODO: Validate this logic\r\n    if (current.parent_goals.changes()) {\r\n        var parentGoalsList = (current.getValue('parent_goals') + '').split(',');\r\n        for (var i = 0; i < parentGoalsList.length; i++) {\r\n            var parentGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (parentGoalGr.get(parentGoalsList[i])) {\r\n                var subGoals = (parentGoalGr.getValue('sub_goals') + '').split(',');\r\n\t\t\t\tsubGoals.push(current.getUniqueValue());\r\n                parentGoalGr.setValue('sub_goals', subGoals.join(','));\r\n                parentGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (current.sub_goals.changes()) {\r\n        var subGoalsList = (current.getValue('sub_goals') + '').split(',');\r\n        for (var a = 0; a < subGoalsList.length; a++) {\r\n            var subGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (subGoalGr.get(subGoalsList[a])) {\r\n                subGoalGr.setValue('parent_goals', current.getUnqiueValue());\r\n                subGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 30,
      "char_count": 1334,
      "preview": "(function executeRule(current, previous /*null when async*/) {\r\n\t// Intentionally using GlideRecord vs GlideRecordSecure here because...\r\n\t// We want the update made regardless of the current users pe...",
      "full_script": "(function executeRule(current, previous /*null when async*/) {\r\n\t// Intentionally using GlideRecord vs GlideRecordSecure here because...\r\n\t// We want the update made regardless of the current users permissions.\r\n\t// Classified: Business Logic\r\n\t\r\n\t// TODO: Validate this logic\r\n    if (current.parent_goals.changes()) {\r\n        var parentGoalsList = (current.getValue('parent_goals') + '').split(',');\r\n        for (var i = 0; i < parentGoalsList.length; i++) {\r\n            var parentGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (parentGoalGr.get(parentGoalsList[i])) {\r\n                var subGoals = (parentGoalGr.getValue('sub_goals') + '').split(',');\r\n\t\t\t\tsubGoals.push(current.getUniqueValue());\r\n                parentGoalGr.setValue('sub_goals', subGoals.join(','));\r\n                parentGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (current.sub_goals.changes()) {\r\n        var subGoalsList = (current.getValue('sub_goals') + '').split(',');\r\n        for (var a = 0; a < subGoalsList.length; a++) {\r\n            var subGoalGr = new GlideRecord('x_cadso_work_goal');\r\n            if (subGoalGr.get(subGoalsList[a])) {\r\n                subGoalGr.setValue('parent_goals', current.getUnqiueValue());\r\n                subGoalGr.update();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "parent_goalsVALCHANGES^ORsub_goalsVALCHANGES^EQ",
    "display_value": "parent_goalsVALCHANGES^ORsub_goalsVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "4e4449a5475c255085d19fd8036d43a0",
    "display_value": "Tenon Marketing Work Management"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_448beb9547dab55098519fd8036d43a4",
    "display_value": "sys_script_448beb9547dab55098519fd8036d43a4"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Parent & Sub Goals Logic",
    "display_value": "Parent & Sub Goals Logic"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
