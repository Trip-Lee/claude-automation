{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "26a87d52c357e6d0d4ddf1db050131b1",
    "extracted_at": "2025-09-19T21:48:36.869Z",
    "display_value": "Set Data Field for Consumers",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-09-08 16:45:02",
    "display_value": "2025-09-08 09:45:02 AM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-08-13 18:47:35",
    "display_value": "2025-08-13 11:47:35 AM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Set Data Field for Consumers",
    "display_value": "Set Data Field for Consumers"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "11",
    "display_value": "11"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "csm_consumer",
    "display_value": "csm_consumer"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    try {\r\n        var email = current.email.getValue();\r\n        var fullName = current.name.getValue();\r\n        var phone = current.mobile_phone.getValue();\r\n        var phoneRegex = /[^0-9]/g;\r\n        var table = current.getTableName();\r\n        var sysId = current.sys_id.getValue();\r\n        var isEmailSubscribed = true;\r\n        var isSmsOptIn = true;\r\n\r\n        //Remove any special characters from phone number\r\n        if (phone) {\r\n            phone = phone.replace(phoneRegex, \"\");\r\n        }\r\n\r\n        //Grab all the field data and populate vars object\r\n        var vars = {};\r\n\r\n        var mergeTagGR = new GlideRecord('x_cadso_core_merge_tag');\r\n        mergeTagGR.addQuery('table', table);\r\n        mergeTagGR.addQuery('active', true);\r\n        mergeTagGR.addQuery('field', '!=', 'x_cadso_automate_contact_detail_data');\r\n        mergeTagGR.addQuery('field', '!=', 'work_notes');\r\n        mergeTagGR.query();\r\n\r\n        while (mergeTagGR.next()) {\r\n            var field = mergeTagGR.getValue('field') || \"\";\r\n            if (field) {\r\n                vars[field] = \"\";\r\n\r\n            }\r\n        }\r\n\r\n        var fieldGR = new GlideRecord(table);\r\n        fieldGR.get(sysId);\r\n\r\n        for (key in vars) {\r\n            vars[key] = fieldGR.getDisplayValue(key) || \"\";\r\n        }\r\n\r\n        var emailConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        emailConsentGR.addQuery('contact_email', email);\r\n        emailConsentGR.addQuery('recipient_type', 'email');\r\n        emailConsentGR.orderByDesc('sys_created_on');\r\n        emailConsentGR.setLimit(1);\r\n        emailConsentGR.query();\r\n\r\n        if (emailConsentGR.next()) {\r\n            var emailStatus = emailConsentGR.getValue('status');\r\n            if (emailStatus === 'Unsubscribed') {\r\n                isEmailSubscribed = false;\r\n            }\r\n        }\r\n\r\n        var smsConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        smsConsentGR.addQuery('contact_phone', phone);\r\n        smsConsentGR.addQuery('recipient_type', 'sms_mms');\r\n        smsConsentGR.orderByDesc('sys_created_on');\r\n        smsConsentGR.setLimit(1);\r\n        smsConsentGR.query();\r\n\r\n        if (smsConsentGR.next()) {\r\n            var smsStatus = smsConsentGR.getValue('status');\r\n            if (smsStatus === 'Opted-Out') {\r\n                isSmsOptIn = false;\r\n            }\r\n        }\r\n        var emailObj = {\r\n            \"member\": {\r\n                \"address\": email || \"\",\r\n                \"name\": fullName,\r\n                \"vars\": vars,\r\n                \"subscribed\": isEmailSubscribed\r\n            },\r\n            \"message\": \"Mailing list member has been created\"\r\n        };\r\n        var smsObj = {\r\n            \"phone\": phone || \"\",\r\n            \"name\": fullName,\r\n            \"optIn\": isSmsOptIn\r\n\r\n        };\r\n\r\n        dataField = {\r\n            table,\r\n            sysId,\r\n            \"email\": emailObj,\r\n            \"sms\": smsObj\r\n        };\r\n        current.x_cadso_automate_contact_detail_data = JSON.stringify(dataField);\r\n    } catch (e) {\r\n        gs.info(\"Set Data Field for Consumer Error: \" + e.message);\r\n    }\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    try {\r\n        var email = current.email.getValue();\r\n        var fullName = current.name.getValue();\r\n        var phone = current.mobile_phone.getValue();\r\n        var phoneRegex = /[^0-9]/g;\r\n        var table = current.getTableName();\r\n        var sysId = current.sys_id.getValue();\r\n        var isEmailSubscribed = true;\r\n        var isSmsOptIn = true;\r\n\r\n        //Remove any special characters from phone number\r\n        if (phone) {\r\n            phone = phone.replace(phoneRegex, \"\");\r\n        }\r\n\r\n        //Grab all the field data and populate vars object\r\n        var vars = {};\r\n\r\n        var mergeTagGR = new GlideRecord('x_cadso_core_merge_tag');\r\n        mergeTagGR.addQuery('table', table);\r\n        mergeTagGR.addQuery('active', true);\r\n        mergeTagGR.addQuery('field', '!=', 'x_cadso_automate_contact_detail_data');\r\n        mergeTagGR.addQuery('field', '!=', 'work_notes');\r\n        mergeTagGR.query();\r\n\r\n        while (mergeTagGR.next()) {\r\n            var field = mergeTagGR.getValue('field') || \"\";\r\n            if (field) {\r\n                vars[field] = \"\";\r\n\r\n            }\r\n        }\r\n\r\n        var fieldGR = new GlideRecord(table);\r\n        fieldGR.get(sysId);\r\n\r\n        for (key in vars) {\r\n            vars[key] = fieldGR.getDisplayValue(key) || \"\";\r\n        }\r\n\r\n        var emailConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        emailConsentGR.addQuery('contact_email', email);\r\n        emailConsentGR.addQuery('recipient_type', 'email');\r\n        emailConsentGR.orderByDesc('sys_created_on');\r\n        emailConsentGR.setLimit(1);\r\n        emailConsentGR.query();\r\n\r\n        if (emailConsentGR.next()) {\r\n            var emailStatus = emailConsentGR.getValue('status');\r\n            if (emailStatus === 'Unsubscribed') {\r\n                isEmailSubscribed = false;\r\n            }\r\n        }\r\n\r\n        var smsConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        smsConsentGR.addQuery('contact_phone', phone);\r\n        smsConsentGR.addQuery('recipient_type', 'sms_mms');\r\n        smsConsentGR.orderByDesc('sys_created_on');\r\n        smsConsentGR.setLimit(1);\r\n        smsConsentGR.query();\r\n\r\n        if (smsConsentGR.next()) {\r\n            var smsStatus = smsConsentGR.getValue('status');\r\n            if (smsStatus === 'Opted-Out') {\r\n                isSmsOptIn = false;\r\n            }\r\n        }\r\n        var emailObj = {\r\n            \"member\": {\r\n                \"address\": email || \"\",\r\n                \"name\": fullName,\r\n                \"vars\": vars,\r\n                \"subscribed\": isEmailSubscribed\r\n            },\r\n            \"message\": \"Mailing list member has been created\"\r\n        };\r\n        var smsObj = {\r\n            \"phone\": phone || \"\",\r\n            \"name\": fullName,\r\n            \"optIn\": isSmsOptIn\r\n\r\n        };\r\n\r\n        dataField = {\r\n            table,\r\n            sysId,\r\n            \"email\": emailObj,\r\n            \"sms\": smsObj\r\n        };\r\n        current.x_cadso_automate_contact_detail_data = JSON.stringify(dataField);\r\n    } catch (e) {\r\n        gs.info(\"Set Data Field for Consumer Error: \" + e.message);\r\n    }\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 95,
      "char_count": 3220,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    try {\r\n        var email = current.email.getValue();\r\n        var fullName = current.name.getValue();\r\n        var phone = current....",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    try {\r\n        var email = current.email.getValue();\r\n        var fullName = current.name.getValue();\r\n        var phone = current.mobile_phone.getValue();\r\n        var phoneRegex = /[^0-9]/g;\r\n        var table = current.getTableName();\r\n        var sysId = current.sys_id.getValue();\r\n        var isEmailSubscribed = true;\r\n        var isSmsOptIn = true;\r\n\r\n        //Remove any special characters from phone number\r\n        if (phone) {\r\n            phone = phone.replace(phoneRegex, \"\");\r\n        }\r\n\r\n        //Grab all the field data and populate vars object\r\n        var vars = {};\r\n\r\n        var mergeTagGR = new GlideRecord('x_cadso_core_merge_tag');\r\n        mergeTagGR.addQuery('table', table);\r\n        mergeTagGR.addQuery('active', true);\r\n        mergeTagGR.addQuery('field', '!=', 'x_cadso_automate_contact_detail_data');\r\n        mergeTagGR.addQuery('field', '!=', 'work_notes');\r\n        mergeTagGR.query();\r\n\r\n        while (mergeTagGR.next()) {\r\n            var field = mergeTagGR.getValue('field') || \"\";\r\n            if (field) {\r\n                vars[field] = \"\";\r\n\r\n            }\r\n        }\r\n\r\n        var fieldGR = new GlideRecord(table);\r\n        fieldGR.get(sysId);\r\n\r\n        for (key in vars) {\r\n            vars[key] = fieldGR.getDisplayValue(key) || \"\";\r\n        }\r\n\r\n        var emailConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        emailConsentGR.addQuery('contact_email', email);\r\n        emailConsentGR.addQuery('recipient_type', 'email');\r\n        emailConsentGR.orderByDesc('sys_created_on');\r\n        emailConsentGR.setLimit(1);\r\n        emailConsentGR.query();\r\n\r\n        if (emailConsentGR.next()) {\r\n            var emailStatus = emailConsentGR.getValue('status');\r\n            if (emailStatus === 'Unsubscribed') {\r\n                isEmailSubscribed = false;\r\n            }\r\n        }\r\n\r\n        var smsConsentGR = new GlideRecord('x_cadso_automate_contact_consent');\r\n        smsConsentGR.addQuery('contact_phone', phone);\r\n        smsConsentGR.addQuery('recipient_type', 'sms_mms');\r\n        smsConsentGR.orderByDesc('sys_created_on');\r\n        smsConsentGR.setLimit(1);\r\n        smsConsentGR.query();\r\n\r\n        if (smsConsentGR.next()) {\r\n            var smsStatus = smsConsentGR.getValue('status');\r\n            if (smsStatus === 'Opted-Out') {\r\n                isSmsOptIn = false;\r\n            }\r\n        }\r\n        var emailObj = {\r\n            \"member\": {\r\n                \"address\": email || \"\",\r\n                \"name\": fullName,\r\n                \"vars\": vars,\r\n                \"subscribed\": isEmailSubscribed\r\n            },\r\n            \"message\": \"Mailing list member has been created\"\r\n        };\r\n        var smsObj = {\r\n            \"phone\": phone || \"\",\r\n            \"name\": fullName,\r\n            \"optIn\": isSmsOptIn\r\n\r\n        };\r\n\r\n        dataField = {\r\n            table,\r\n            sysId,\r\n            \"email\": emailObj,\r\n            \"sms\": smsObj\r\n        };\r\n        current.x_cadso_automate_contact_detail_data = JSON.stringify(dataField);\r\n    } catch (e) {\r\n        gs.info(\"Set Data Field for Consumer Error: \" + e.message);\r\n    }\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_26a87d52c357e6d0d4ddf1db050131b1",
    "display_value": "sys_script_26a87d52c357e6d0d4ddf1db050131b1"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Set Data Field for Consumers",
    "display_value": "Set Data Field for Consumers"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
