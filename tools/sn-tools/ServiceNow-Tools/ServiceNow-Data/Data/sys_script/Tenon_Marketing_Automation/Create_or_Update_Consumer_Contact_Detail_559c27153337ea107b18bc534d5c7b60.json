{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "559c27153337ea107b18bc534d5c7b60",
    "extracted_at": "2025-09-19T21:48:36.821Z",
    "display_value": "Create or Update Consumer Contact Detail",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-09-08 16:41:00",
    "display_value": "2025-09-08 09:41:00 AM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-09-04 21:11:30",
    "display_value": "2025-09-04 02:11:30 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Create or Update Consumer Contact Detail",
    "display_value": "Create or Update Consumer Contact Detail"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "17",
    "display_value": "17"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "csm_consumer",
    "display_value": "csm_consumer"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    function formatPhoneNumber(phoneNumberString) {\r\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\r\n        var match = cleaned.match(/^(\\d+)?(\\d{3})(\\d{3})(\\d{4})$/);\r\n\r\n        if (match) {\r\n            var intlCode = (match[1] ? '+' + match[1] : '+1');\r\n\r\n            return [intlCode, match[2], match[3], match[4]].join('');\r\n        }\r\n        gs.info(\"Consumer phone number not formatted correctly for number \" + phoneNumberString);\r\n    }\r\n    try {\r\n\r\n        var sysId = current.sys_id || \"\";\r\n        var first = current.first_name || \"\";\r\n        var last = current.last_name || \"\";\r\n        var phone = current.mobile_phone || \"\";\r\n        var email = current.email || \"\";\r\n        var name = current.name || \"\";\r\n\r\n        var sanitizedPhone = phone.replace(/\\D+/g, '');\r\n\t\tvar formattedPhone = formatPhoneNumber(sanitizedPhone);\r\n\r\n        var cdGR = new GlideRecord('x_cadso_automate_contact_detail');\r\n        cdGR.addQuery('consumer', sysId);\r\n        cdGR.query();\r\n        if (cdGR.next()) {\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.update();\r\n        } else {\r\n            cdGR.initialize();\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.consumer = sysId;\r\n            cdGR.table = 'csm_consumer';\r\n            cdGR.document_id = sysId;\r\n            cdGR.insert();\r\n        }\r\n    } catch (e) {\r\n        gs.info(\"Consumer contact detail update BR error: \" + e.message);\r\n    }\r\n\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    function formatPhoneNumber(phoneNumberString) {\r\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\r\n        var match = cleaned.match(/^(\\d+)?(\\d{3})(\\d{3})(\\d{4})$/);\r\n\r\n        if (match) {\r\n            var intlCode = (match[1] ? '+' + match[1] : '+1');\r\n\r\n            return [intlCode, match[2], match[3], match[4]].join('');\r\n        }\r\n        gs.info(\"Consumer phone number not formatted correctly for number \" + phoneNumberString);\r\n    }\r\n    try {\r\n\r\n        var sysId = current.sys_id || \"\";\r\n        var first = current.first_name || \"\";\r\n        var last = current.last_name || \"\";\r\n        var phone = current.mobile_phone || \"\";\r\n        var email = current.email || \"\";\r\n        var name = current.name || \"\";\r\n\r\n        var sanitizedPhone = phone.replace(/\\D+/g, '');\r\n\t\tvar formattedPhone = formatPhoneNumber(sanitizedPhone);\r\n\r\n        var cdGR = new GlideRecord('x_cadso_automate_contact_detail');\r\n        cdGR.addQuery('consumer', sysId);\r\n        cdGR.query();\r\n        if (cdGR.next()) {\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.update();\r\n        } else {\r\n            cdGR.initialize();\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.consumer = sysId;\r\n            cdGR.table = 'csm_consumer';\r\n            cdGR.document_id = sysId;\r\n            cdGR.insert();\r\n        }\r\n    } catch (e) {\r\n        gs.info(\"Consumer contact detail update BR error: \" + e.message);\r\n    }\r\n\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 47,
      "char_count": 1699,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    function formatPhoneNumber(phoneNumberString) {\r\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\r\n        var ma...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    function formatPhoneNumber(phoneNumberString) {\r\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\r\n        var match = cleaned.match(/^(\\d+)?(\\d{3})(\\d{3})(\\d{4})$/);\r\n\r\n        if (match) {\r\n            var intlCode = (match[1] ? '+' + match[1] : '+1');\r\n\r\n            return [intlCode, match[2], match[3], match[4]].join('');\r\n        }\r\n        gs.info(\"Consumer phone number not formatted correctly for number \" + phoneNumberString);\r\n    }\r\n    try {\r\n\r\n        var sysId = current.sys_id || \"\";\r\n        var first = current.first_name || \"\";\r\n        var last = current.last_name || \"\";\r\n        var phone = current.mobile_phone || \"\";\r\n        var email = current.email || \"\";\r\n        var name = current.name || \"\";\r\n\r\n        var sanitizedPhone = phone.replace(/\\D+/g, '');\r\n\t\tvar formattedPhone = formatPhoneNumber(sanitizedPhone);\r\n\r\n        var cdGR = new GlideRecord('x_cadso_automate_contact_detail');\r\n        cdGR.addQuery('consumer', sysId);\r\n        cdGR.query();\r\n        if (cdGR.next()) {\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.update();\r\n        } else {\r\n            cdGR.initialize();\r\n            cdGR.name = name;\r\n            cdGR.phone_number = formattedPhone;\r\n            cdGR.email_address = email;\r\n            cdGR.consumer = sysId;\r\n            cdGR.table = 'csm_consumer';\r\n            cdGR.document_id = sysId;\r\n            cdGR.insert();\r\n        }\r\n    } catch (e) {\r\n        gs.info(\"Consumer contact detail update BR error: \" + e.message);\r\n    }\r\n\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "mobile_phoneVALCHANGES^ORfirst_nameVALCHANGES^ORlast_nameVALCHANGES^ORemailVALCHANGES^EQ",
    "display_value": "mobile_phoneVALCHANGES^ORfirst_nameVALCHANGES^ORlast_nameVALCHANGES^ORemailVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_559c27153337ea107b18bc534d5c7b60",
    "display_value": "sys_script_559c27153337ea107b18bc534d5c7b60"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Create or Update Consumer Contact Detail",
    "display_value": "Create or Update Consumer Contact Detail"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
