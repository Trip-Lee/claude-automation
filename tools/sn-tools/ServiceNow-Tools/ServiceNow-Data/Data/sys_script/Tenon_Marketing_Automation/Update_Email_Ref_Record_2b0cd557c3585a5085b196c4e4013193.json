{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "2b0cd557c3585a5085b196c4e4013193",
    "extracted_at": "2025-09-19T21:48:40.126Z",
    "display_value": "Update Email Ref Record",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2024-09-02 20:32:23",
    "display_value": "2024-09-02 01:32:23 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2024-09-02 19:56:59",
    "display_value": "2024-09-02 12:56:59 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Update Email Ref Record",
    "display_value": "Update Email Ref Record"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "order": {
    "value": "200",
    "display_value": "200"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "1",
    "display_value": "1"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_automate_email_send",
    "display_value": "x_cadso_automate_email_send"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /* null when async */) {\r\n\t// Email Changes - Update Previous + Current\r\n\t// Send Now Changed - Update Current\r\n\t// Can Send Changed - Update Current\r\n\r\n\tconst emailChanged = current.email.changes();\r\n\tconst sendNowChanged = current.send_now.changes();\r\n\tconst canSendChanged = current.can_send.changes();\r\n\r\n\tif (emailChanged && !previous.email.nil()) {\r\n\t\tconst prevEmailGr = previous.email.getRefRecord();\r\n\t\tif (prevEmailGr.isValidRecord()) {\r\n\t\t\tconst canSend = getSendNowValue(previous.getValue(\"email\"));\r\n\t\t\tprevEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\tprevEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tif (!current.email.nil()) {\r\n\t\tconst currentEmailGr = current.email.getRefRecord();\r\n\t\tif (currentEmailGr.isValidRecord()) {\r\n\t\t\tif (emailChanged || sendNowChanged) {\r\n\t\t\t\tcurrentEmailGr.setValue(\"send_now\", current.getValue(\"send_now\"));\r\n\t\t\t}\r\n\t\t\tif (emailChanged || canSendChanged) {\r\n\t\t\t\tconst canSend = getSendNowValue(current.getValue(\"email\"));\r\n\t\t\t\tcurrentEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\t}\r\n\t\t\tcurrentEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getSendNowValue(emailSysId) {\r\n\t\tconst emailSendGr = new GlideRecord(\"x_cadso_automate_email_send\");\r\n\t\temailSendGr.addQuery(\"email\", emailSysId);\r\n\t\temailSendGr.query();\r\n\t\tlet total = 0;\r\n\t\tlet canSendCount = 0;\r\n\t\twhile (emailSendGr.next()) {\r\n\t\t\ttotal += 1;\r\n\t\t\tconst _canSend = emailSendGr.getValue(\"can_send\");\r\n\t\t\tif (_canSend === 1 || _canSend === \"1\") {\r\n\t\t\t\tcanSendCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn total === canSendCount;\r\n\t}\r\n})(current, previous);\r\n",
    "display_value": "(function executeRule(current, previous /* null when async */) {\r\n\t// Email Changes - Update Previous + Current\r\n\t// Send Now Changed - Update Current\r\n\t// Can Send Changed - Update Current\r\n\r\n\tconst emailChanged = current.email.changes();\r\n\tconst sendNowChanged = current.send_now.changes();\r\n\tconst canSendChanged = current.can_send.changes();\r\n\r\n\tif (emailChanged && !previous.email.nil()) {\r\n\t\tconst prevEmailGr = previous.email.getRefRecord();\r\n\t\tif (prevEmailGr.isValidRecord()) {\r\n\t\t\tconst canSend = getSendNowValue(previous.getValue(\"email\"));\r\n\t\t\tprevEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\tprevEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tif (!current.email.nil()) {\r\n\t\tconst currentEmailGr = current.email.getRefRecord();\r\n\t\tif (currentEmailGr.isValidRecord()) {\r\n\t\t\tif (emailChanged || sendNowChanged) {\r\n\t\t\t\tcurrentEmailGr.setValue(\"send_now\", current.getValue(\"send_now\"));\r\n\t\t\t}\r\n\t\t\tif (emailChanged || canSendChanged) {\r\n\t\t\t\tconst canSend = getSendNowValue(current.getValue(\"email\"));\r\n\t\t\t\tcurrentEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\t}\r\n\t\t\tcurrentEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getSendNowValue(emailSysId) {\r\n\t\tconst emailSendGr = new GlideRecord(\"x_cadso_automate_email_send\");\r\n\t\temailSendGr.addQuery(\"email\", emailSysId);\r\n\t\temailSendGr.query();\r\n\t\tlet total = 0;\r\n\t\tlet canSendCount = 0;\r\n\t\twhile (emailSendGr.next()) {\r\n\t\t\ttotal += 1;\r\n\t\t\tconst _canSend = emailSendGr.getValue(\"can_send\");\r\n\t\t\tif (_canSend === 1 || _canSend === \"1\") {\r\n\t\t\t\tcanSendCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn total === canSendCount;\r\n\t}\r\n})(current, previous);\r\n",
    "formatted_script": {
      "line_count": 49,
      "char_count": 1559,
      "preview": "(function executeRule(current, previous /* null when async */) {\r\n\t// Email Changes - Update Previous + Current\r\n\t// Send Now Changed - Update Current\r\n\t// Can Send Changed - Update Current\r\n\r\n\tconst ...",
      "full_script": "(function executeRule(current, previous /* null when async */) {\r\n\t// Email Changes - Update Previous + Current\r\n\t// Send Now Changed - Update Current\r\n\t// Can Send Changed - Update Current\r\n\r\n\tconst emailChanged = current.email.changes();\r\n\tconst sendNowChanged = current.send_now.changes();\r\n\tconst canSendChanged = current.can_send.changes();\r\n\r\n\tif (emailChanged && !previous.email.nil()) {\r\n\t\tconst prevEmailGr = previous.email.getRefRecord();\r\n\t\tif (prevEmailGr.isValidRecord()) {\r\n\t\t\tconst canSend = getSendNowValue(previous.getValue(\"email\"));\r\n\t\t\tprevEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\tprevEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tif (!current.email.nil()) {\r\n\t\tconst currentEmailGr = current.email.getRefRecord();\r\n\t\tif (currentEmailGr.isValidRecord()) {\r\n\t\t\tif (emailChanged || sendNowChanged) {\r\n\t\t\t\tcurrentEmailGr.setValue(\"send_now\", current.getValue(\"send_now\"));\r\n\t\t\t}\r\n\t\t\tif (emailChanged || canSendChanged) {\r\n\t\t\t\tconst canSend = getSendNowValue(current.getValue(\"email\"));\r\n\t\t\t\tcurrentEmailGr.setValue(\"can_send\", canSend);\r\n\t\t\t}\r\n\t\t\tcurrentEmailGr.update();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getSendNowValue(emailSysId) {\r\n\t\tconst emailSendGr = new GlideRecord(\"x_cadso_automate_email_send\");\r\n\t\temailSendGr.addQuery(\"email\", emailSysId);\r\n\t\temailSendGr.query();\r\n\t\tlet total = 0;\r\n\t\tlet canSendCount = 0;\r\n\t\twhile (emailSendGr.next()) {\r\n\t\t\ttotal += 1;\r\n\t\t\tconst _canSend = emailSendGr.getValue(\"can_send\");\r\n\t\t\tif (_canSend === 1 || _canSend === \"1\") {\r\n\t\t\t\tcanSendCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn total === canSendCount;\r\n\t}\r\n})(current, previous);\r\n"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "emailVALCHANGES^ORcan_sendVALCHANGES^ORsend_nowVALCHANGES^EQ",
    "display_value": "emailVALCHANGES^ORcan_sendVALCHANGES^ORsend_nowVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_2b0cd557c3585a5085b196c4e4013193",
    "display_value": "sys_script_2b0cd557c3585a5085b196c4e4013193"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Update Email Ref Record",
    "display_value": "Update Email Ref Record"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
