{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "05256b73c3a1ea10d4ddf1db0501317f",
    "extracted_at": "2025-09-19T21:48:37.524Z",
    "display_value": "Set Audience Tables",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-05-23 18:48:37",
    "display_value": "2025-05-23 11:48:37 AM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-05-23 18:48:37",
    "display_value": "2025-05-23 11:48:37 AM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Set Audience Tables",
    "display_value": "Set Audience Tables"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "order": {
    "value": "-100",
    "display_value": "-100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "0",
    "display_value": "0"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_automate_content_template",
    "display_value": "x_cadso_automate_content_template"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n\r\n    let sources = (current.getValue('sources') + '').split(',');\r\n    let audienceTables = [];\r\n    const sourcesArr = [];\r\n    for (var x = 0; x < sources.length; x++) {\r\n        if (sources[x]) {\r\n            sourcesArr.push(sources[x]);\r\n        }\r\n    }\r\n\r\n    if (sourcesArr.length) {\r\n        // The use of GlideRecord vs GRS is intentional as this is business logic.\r\n        var tableGr = new GlideRecord('sys_db_object');\r\n        tableGr.addQuery('name', 'IN', sourcesArr.join(','));\r\n        tableGr.query();\r\n\r\n        while (tableGr.next()) {\r\n\t\t\taudienceTables.push(tableGr.getUniqueValue());\r\n        }\r\n    }\r\n\r\n    current.setValue('audience_tables', audienceTables.join(','));\r\n\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n\r\n    let sources = (current.getValue('sources') + '').split(',');\r\n    let audienceTables = [];\r\n    const sourcesArr = [];\r\n    for (var x = 0; x < sources.length; x++) {\r\n        if (sources[x]) {\r\n            sourcesArr.push(sources[x]);\r\n        }\r\n    }\r\n\r\n    if (sourcesArr.length) {\r\n        // The use of GlideRecord vs GRS is intentional as this is business logic.\r\n        var tableGr = new GlideRecord('sys_db_object');\r\n        tableGr.addQuery('name', 'IN', sourcesArr.join(','));\r\n        tableGr.query();\r\n\r\n        while (tableGr.next()) {\r\n\t\t\taudienceTables.push(tableGr.getUniqueValue());\r\n        }\r\n    }\r\n\r\n    current.setValue('audience_tables', audienceTables.join(','));\r\n\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 25,
      "char_count": 787,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n\r\n    let sources = (current.getValue('sources') + '').split(',');\r\n    let audienceTables = [];\r\n    const sourcesArr = [];\r\n    for (...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n\r\n    let sources = (current.getValue('sources') + '').split(',');\r\n    let audienceTables = [];\r\n    const sourcesArr = [];\r\n    for (var x = 0; x < sources.length; x++) {\r\n        if (sources[x]) {\r\n            sourcesArr.push(sources[x]);\r\n        }\r\n    }\r\n\r\n    if (sourcesArr.length) {\r\n        // The use of GlideRecord vs GRS is intentional as this is business logic.\r\n        var tableGr = new GlideRecord('sys_db_object');\r\n        tableGr.addQuery('name', 'IN', sourcesArr.join(','));\r\n        tableGr.query();\r\n\r\n        while (tableGr.next()) {\r\n\t\t\taudienceTables.push(tableGr.getUniqueValue());\r\n        }\r\n    }\r\n\r\n    current.setValue('audience_tables', audienceTables.join(','));\r\n\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "sourcesVALCHANGES^EQ",
    "display_value": "sourcesVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_05256b73c3a1ea10d4ddf1db0501317f",
    "display_value": "sys_script_05256b73c3a1ea10d4ddf1db0501317f"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Set Audience Tables",
    "display_value": "Set Audience Tables"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
