{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "b198edd3c3985a5085b196c4e401311e",
    "extracted_at": "2025-09-19T21:48:40.106Z",
    "display_value": "Update Email Status",
    "application": "Tenon_Marketing_Automation",
    "scope": {
      "display_value": "Tenon Marketing Automation",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
      "value": "5e9f5f8b87420250369f33373cbb3559"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-07-28 18:56:50",
    "display_value": "2025-07-28 11:56:50 AM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2024-09-02 21:02:51",
    "display_value": "2024-09-02 02:02:51 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Update Email Status",
    "display_value": "Update Email Status"
  },
  "sys_scope": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "order": {
    "value": "310",
    "display_value": "310"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "10",
    "display_value": "10"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_automate_email_send",
    "display_value": "x_cadso_automate_email_send"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const emailStatusObj = {\r\n        draft: ['initialized', 'draft', 'new'],\r\n        scheduled: ['scheduled', 'send-ready'],\r\n        queue: ['ready_to_process', 'processing', 'sending'],\r\n        sent: ['completed'],\r\n        error: ['error']\r\n    };\r\n\r\n    const status = current.getValue('status');\r\n    const emailGr = current.email.getRefRecord();\r\n\r\n    var relatedSendStatuses = [];\r\n    var relatedSends = new GlideRecord('x_cadso_automate_email_send');\r\n    relatedSends.addQuery('email', current.getValue('email'));\r\n    relatedSends.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    relatedSends.query();\r\n    while (relatedSends.next()) {\r\n        relatedSendStatuses.push(relatedSends.getValue('status'));\r\n    }\r\n\r\n    if (emailGr.isValidRecord()) {\r\n        var value = Object.keys(emailStatusObj).find(function(key) {\r\n            const emailStatuses = emailStatusObj[key];\r\n            return emailStatuses.includes(status);\r\n        });\r\n\r\n\r\n        // Parent email status is dependent on all related email send records.\r\n        // If any other email sends for this email are errored, the parent email status should be error.\r\n        if (relatedSendStatuses.includes('error')) {\r\n            value = 'error';\r\n        }\r\n        // if only one email has been sent, and others are not yet sent, the parent email should not yet be set to completed.\r\n        else if (value == 'sent' &&\r\n            (relatedSendStatuses.includes('ready_to_process') ||\r\n                relatedSendStatuses.includes('processing') ||\r\n                relatedSendStatuses.includes('sending'))\r\n        ) {\r\n            value = 'queue';\r\n        }\r\n\r\n        emailGr.setValue('status', value);\r\n        emailGr.update();\r\n    }\r\n\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const emailStatusObj = {\r\n        draft: ['initialized', 'draft', 'new'],\r\n        scheduled: ['scheduled', 'send-ready'],\r\n        queue: ['ready_to_process', 'processing', 'sending'],\r\n        sent: ['completed'],\r\n        error: ['error']\r\n    };\r\n\r\n    const status = current.getValue('status');\r\n    const emailGr = current.email.getRefRecord();\r\n\r\n    var relatedSendStatuses = [];\r\n    var relatedSends = new GlideRecord('x_cadso_automate_email_send');\r\n    relatedSends.addQuery('email', current.getValue('email'));\r\n    relatedSends.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    relatedSends.query();\r\n    while (relatedSends.next()) {\r\n        relatedSendStatuses.push(relatedSends.getValue('status'));\r\n    }\r\n\r\n    if (emailGr.isValidRecord()) {\r\n        var value = Object.keys(emailStatusObj).find(function(key) {\r\n            const emailStatuses = emailStatusObj[key];\r\n            return emailStatuses.includes(status);\r\n        });\r\n\r\n\r\n        // Parent email status is dependent on all related email send records.\r\n        // If any other email sends for this email are errored, the parent email status should be error.\r\n        if (relatedSendStatuses.includes('error')) {\r\n            value = 'error';\r\n        }\r\n        // if only one email has been sent, and others are not yet sent, the parent email should not yet be set to completed.\r\n        else if (value == 'sent' &&\r\n            (relatedSendStatuses.includes('ready_to_process') ||\r\n                relatedSendStatuses.includes('processing') ||\r\n                relatedSendStatuses.includes('sending'))\r\n        ) {\r\n            value = 'queue';\r\n        }\r\n\r\n        emailGr.setValue('status', value);\r\n        emailGr.update();\r\n    }\r\n\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 47,
      "char_count": 1824,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const emailStatusObj = {\r\n        draft: ['initialized', 'draft', 'new'],\r\n        scheduled: ['scheduled', 'send-ready'],\r\n       ...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const emailStatusObj = {\r\n        draft: ['initialized', 'draft', 'new'],\r\n        scheduled: ['scheduled', 'send-ready'],\r\n        queue: ['ready_to_process', 'processing', 'sending'],\r\n        sent: ['completed'],\r\n        error: ['error']\r\n    };\r\n\r\n    const status = current.getValue('status');\r\n    const emailGr = current.email.getRefRecord();\r\n\r\n    var relatedSendStatuses = [];\r\n    var relatedSends = new GlideRecord('x_cadso_automate_email_send');\r\n    relatedSends.addQuery('email', current.getValue('email'));\r\n    relatedSends.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    relatedSends.query();\r\n    while (relatedSends.next()) {\r\n        relatedSendStatuses.push(relatedSends.getValue('status'));\r\n    }\r\n\r\n    if (emailGr.isValidRecord()) {\r\n        var value = Object.keys(emailStatusObj).find(function(key) {\r\n            const emailStatuses = emailStatusObj[key];\r\n            return emailStatuses.includes(status);\r\n        });\r\n\r\n\r\n        // Parent email status is dependent on all related email send records.\r\n        // If any other email sends for this email are errored, the parent email status should be error.\r\n        if (relatedSendStatuses.includes('error')) {\r\n            value = 'error';\r\n        }\r\n        // if only one email has been sent, and others are not yet sent, the parent email should not yet be set to completed.\r\n        else if (value == 'sent' &&\r\n            (relatedSendStatuses.includes('ready_to_process') ||\r\n                relatedSendStatuses.includes('processing') ||\r\n                relatedSendStatuses.includes('sending'))\r\n        ) {\r\n            value = 'queue';\r\n        }\r\n\r\n        emailGr.setValue('status', value);\r\n        emailGr.update();\r\n    }\r\n\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "statusVALCHANGES^type!=automated^EQ",
    "display_value": "statusVALCHANGES^type!=automated^EQ"
  },
  "sys_package": {
    "value": "5e9f5f8b87420250369f33373cbb3559",
    "display_value": "Tenon Marketing Automation"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_b198edd3c3985a5085b196c4e401311e",
    "display_value": "sys_script_b198edd3c3985a5085b196c4e401311e"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Update Email Status",
    "display_value": "Update Email Status"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
