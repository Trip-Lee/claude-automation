{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "43d41bbb33c5a2107b18bc534d5c7b1e",
    "extracted_at": "2025-09-19T21:48:37.611Z",
    "display_value": "Unique Name (Option)",
    "application": "Tenon_-_Core",
    "scope": {
      "display_value": "Tenon - Core",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/608cd026c374e250d4ddf1db050131bb",
      "value": "608cd026c374e250d4ddf1db050131bb"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-05-20 18:39:29",
    "display_value": "2025-05-20 11:39:29 AM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-04-28 21:08:20",
    "display_value": "2025-04-28 02:08:20 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Unique Name (Option)",
    "display_value": "Unique Name (Option)"
  },
  "sys_scope": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "sys_created_by": {
    "value": "admin",
    "display_value": "admin"
  },
  "order": {
    "value": "-100",
    "display_value": "-100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "2",
    "display_value": "2"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_core_option",
    "display_value": "x_cadso_core_option"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const category = current.getValue('category');\r\n    const subcategory = current.getValue('subcategory');\r\n    var optionGr = new GlideRecord('x_cadso_core_option');\r\n    optionGr.addQuery('name', current.getValue('name'));\r\n    optionGr.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    if (category) {\r\n        optionGr.addQuery('category', category);\r\n        if (subcategory) {\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        }\r\n    } else {\r\n        optionGr.addEncodedQuery('categoryISEMPTY');\r\n        if (subcategory) {\r\n\t\t\t// Should not happen but incase it does.\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        } else {\r\n            optionGr.addEncodedQuery('subcategoryISEMPTY');\r\n        }\r\n    }\r\n    optionGr.setLimit(1);\r\n    optionGr.query();\r\n\r\n    while (optionGr.next()) {\r\n        gs.addErrorMessage('Name is already in use on the record: ' + current.getDisplayValue());\r\n        gs.addErrorMessage('Name must be unique to the category / subcategory combination');\r\n        current.setAbortAction(true);\r\n    }\r\n\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const category = current.getValue('category');\r\n    const subcategory = current.getValue('subcategory');\r\n    var optionGr = new GlideRecord('x_cadso_core_option');\r\n    optionGr.addQuery('name', current.getValue('name'));\r\n    optionGr.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    if (category) {\r\n        optionGr.addQuery('category', category);\r\n        if (subcategory) {\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        }\r\n    } else {\r\n        optionGr.addEncodedQuery('categoryISEMPTY');\r\n        if (subcategory) {\r\n\t\t\t// Should not happen but incase it does.\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        } else {\r\n            optionGr.addEncodedQuery('subcategoryISEMPTY');\r\n        }\r\n    }\r\n    optionGr.setLimit(1);\r\n    optionGr.query();\r\n\r\n    while (optionGr.next()) {\r\n        gs.addErrorMessage('Name is already in use on the record: ' + current.getDisplayValue());\r\n        gs.addErrorMessage('Name must be unique to the category / subcategory combination');\r\n        current.setAbortAction(true);\r\n    }\r\n\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 30,
      "char_count": 1173,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const category = current.getValue('category');\r\n    const subcategory = current.getValue('subcategory');\r\n    var optionGr = new Gl...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    const category = current.getValue('category');\r\n    const subcategory = current.getValue('subcategory');\r\n    var optionGr = new GlideRecord('x_cadso_core_option');\r\n    optionGr.addQuery('name', current.getValue('name'));\r\n    optionGr.addQuery('sys_id', '!=', current.getUniqueValue());\r\n    if (category) {\r\n        optionGr.addQuery('category', category);\r\n        if (subcategory) {\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        }\r\n    } else {\r\n        optionGr.addEncodedQuery('categoryISEMPTY');\r\n        if (subcategory) {\r\n\t\t\t// Should not happen but incase it does.\r\n            optionGr.addQuery('subcategory', subcategory);\r\n        } else {\r\n            optionGr.addEncodedQuery('subcategoryISEMPTY');\r\n        }\r\n    }\r\n    optionGr.setLimit(1);\r\n    optionGr.query();\r\n\r\n    while (optionGr.next()) {\r\n        gs.addErrorMessage('Name is already in use on the record: ' + current.getDisplayValue());\r\n        gs.addErrorMessage('Name must be unique to the category / subcategory combination');\r\n        current.setAbortAction(true);\r\n    }\r\n\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "nameVALCHANGES^ORcategoryVALCHANGES^ORsubcategoryVALCHANGES^EQ",
    "display_value": "nameVALCHANGES^ORcategoryVALCHANGES^ORsubcategoryVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "608cd026c374e250d4ddf1db050131bb",
    "display_value": "Tenon - Core"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_43d41bbb33c5a2107b18bc534d5c7b1e",
    "display_value": "sys_script_43d41bbb33c5a2107b18bc534d5c7b1e"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Unique Name (Option)",
    "display_value": "Unique Name (Option)"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
