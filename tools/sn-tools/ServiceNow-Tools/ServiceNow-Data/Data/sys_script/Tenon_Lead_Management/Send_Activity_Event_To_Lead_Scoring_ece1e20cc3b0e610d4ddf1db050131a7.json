{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "ece1e20cc3b0e610d4ddf1db050131a7",
    "extracted_at": "2025-09-19T21:48:37.657Z",
    "display_value": "Send Activity Event To Lead Scoring",
    "application": "Tenon_Lead_Management",
    "scope": {
      "display_value": "Tenon Lead Management",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/d7d2017bc3646610d4ddf1db050131db",
      "value": "d7d2017bc3646610d4ddf1db050131db"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "false",
    "display_value": "false"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2025-07-07 23:34:00",
    "display_value": "2025-07-07 04:34:00 PM"
  },
  "when": {
    "value": "after",
    "display_value": "after"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2025-04-04 15:25:40",
    "display_value": "2025-04-04 08:25:40 AM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Send Activity Event To Lead Scoring",
    "display_value": "Send Activity Event To Lead Scoring"
  },
  "sys_scope": {
    "value": "d7d2017bc3646610d4ddf1db050131db",
    "display_value": "Tenon Lead Management"
  },
  "sys_created_by": {
    "value": "will.mcgill",
    "display_value": "will.mcgill"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "19",
    "display_value": "19"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "sn_actsub_activity",
    "display_value": "sn_actsub_activity"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    //Check core setting if tenon lead scoring is enabled\r\n    var scoringEnabled = false;\r\n\tvar settingGR = new GlideRecord('x_cadso_core_setting');\r\n\tsettingGR.addQuery('name', 'x_cadso_lead.tenon_marketing_lead_scoring');\r\n\tsettingGR.addQuery(\"active\", \"true\");\r\n\tsettingGR.query();\r\n\tif(settingGR.next()){\r\n\t\tscoringEnabled = settingGR.getValue('value');\r\n\t}\r\n\t\r\n    if (scoringEnabled == 'true') {\r\n        // Check which features are installed\r\n        var featureAPI = new x_cadso_core.FeatureAvailability();\r\n        var leadEnabled = featureAPI.isLeadEnabled();\r\n        var contactEnabled = featureAPI.isContactEnabled();\r\n        var consumerEnabled = featureAPI.isConsumerEnabled();\r\n\r\n        //Check for contact, consumer, and lead and add score to lead event table\r\n        if (leadEnabled || contactEnabled || consumerEnabled) {\r\n\t\t\tvar typeID = current.getValue('activity_type_id');\r\n            var scoreAPI = new LeadScoring();\r\n            var activityID = current.getValue();\r\n            var table = current.actor_name.getValue();\r\n\r\n            var actorRefRecord = current.actor_id.getRefRecord();\r\n            var actor = current.actor_id.getValue();\r\n            var eventType = 'custom';\r\n            var score = scoreAPI.getScore(typeID, eventType);\r\n            if (score != 0 && actorRefRecord.isValidRecord()) {\r\n                var eventTableGR = new GlideRecord('x_cadso_lead_event');\r\n                eventTableGR.initialize();\r\n                eventTableGR.newRecord();\r\n                eventTableGR.setValue('event', typeID);\r\n                eventTableGR.setValue('score', score);\r\n                if (leadEnabled && table == 'sn_lead_mgmt_core_lead') {\r\n                    var lead = actor;\r\n                    eventTableGR.setValue('lead', lead);\r\n                } else {\r\n                    if (contactEnabled && table == 'customer_contact') {\r\n                        var contact = actor;\r\n                        if (leadEnabled) {\r\n                            var contactLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            contactLeadGR.addQuery('contact', contact);\r\n                            contactLeadGR.query();\r\n\r\n                            if (contactLeadGR.next()) {\r\n                                var contactLead = contactLeadGR.getValue('sys_id');\r\n                                if (contactLead) {\r\n                                    eventTableGR.setValue('lead', contactLead);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        eventTableGR.setValue('contact', contact);\r\n                    }\r\n                    if (consumerEnabled && table == 'csm_consumer') {\r\n                        var consumer = actor;\r\n                        if (leadEnabled) {\r\n                            var consumerLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            consumerLeadGR.addQuery('consumer', consumer);\r\n                            consumerLeadGR.query();\r\n\r\n                            if (consumerLeadGR.next()) {\r\n                                var consumerLead = consumerLeadGR.getValue('sys_id');\r\n                                if (consumerLead) {\r\n                                    eventTableGR.setValue('lead', consumerLead);\r\n                                }\r\n                            }\r\n                        }\r\n                        eventTableGR.setValue('consumer', consumer);\r\n                    }\r\n                }\r\n\r\n                eventTableGR.setValue('event_type', eventType);\r\n                eventTableGR.insert();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/ ) {\r\n    //Check core setting if tenon lead scoring is enabled\r\n    var scoringEnabled = false;\r\n\tvar settingGR = new GlideRecord('x_cadso_core_setting');\r\n\tsettingGR.addQuery('name', 'x_cadso_lead.tenon_marketing_lead_scoring');\r\n\tsettingGR.addQuery(\"active\", \"true\");\r\n\tsettingGR.query();\r\n\tif(settingGR.next()){\r\n\t\tscoringEnabled = settingGR.getValue('value');\r\n\t}\r\n\t\r\n    if (scoringEnabled == 'true') {\r\n        // Check which features are installed\r\n        var featureAPI = new x_cadso_core.FeatureAvailability();\r\n        var leadEnabled = featureAPI.isLeadEnabled();\r\n        var contactEnabled = featureAPI.isContactEnabled();\r\n        var consumerEnabled = featureAPI.isConsumerEnabled();\r\n\r\n        //Check for contact, consumer, and lead and add score to lead event table\r\n        if (leadEnabled || contactEnabled || consumerEnabled) {\r\n\t\t\tvar typeID = current.getValue('activity_type_id');\r\n            var scoreAPI = new LeadScoring();\r\n            var activityID = current.getValue();\r\n            var table = current.actor_name.getValue();\r\n\r\n            var actorRefRecord = current.actor_id.getRefRecord();\r\n            var actor = current.actor_id.getValue();\r\n            var eventType = 'custom';\r\n            var score = scoreAPI.getScore(typeID, eventType);\r\n            if (score != 0 && actorRefRecord.isValidRecord()) {\r\n                var eventTableGR = new GlideRecord('x_cadso_lead_event');\r\n                eventTableGR.initialize();\r\n                eventTableGR.newRecord();\r\n                eventTableGR.setValue('event', typeID);\r\n                eventTableGR.setValue('score', score);\r\n                if (leadEnabled && table == 'sn_lead_mgmt_core_lead') {\r\n                    var lead = actor;\r\n                    eventTableGR.setValue('lead', lead);\r\n                } else {\r\n                    if (contactEnabled && table == 'customer_contact') {\r\n                        var contact = actor;\r\n                        if (leadEnabled) {\r\n                            var contactLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            contactLeadGR.addQuery('contact', contact);\r\n                            contactLeadGR.query();\r\n\r\n                            if (contactLeadGR.next()) {\r\n                                var contactLead = contactLeadGR.getValue('sys_id');\r\n                                if (contactLead) {\r\n                                    eventTableGR.setValue('lead', contactLead);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        eventTableGR.setValue('contact', contact);\r\n                    }\r\n                    if (consumerEnabled && table == 'csm_consumer') {\r\n                        var consumer = actor;\r\n                        if (leadEnabled) {\r\n                            var consumerLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            consumerLeadGR.addQuery('consumer', consumer);\r\n                            consumerLeadGR.query();\r\n\r\n                            if (consumerLeadGR.next()) {\r\n                                var consumerLead = consumerLeadGR.getValue('sys_id');\r\n                                if (consumerLead) {\r\n                                    eventTableGR.setValue('lead', consumerLead);\r\n                                }\r\n                            }\r\n                        }\r\n                        eventTableGR.setValue('consumer', consumer);\r\n                    }\r\n                }\r\n\r\n                eventTableGR.setValue('event_type', eventType);\r\n                eventTableGR.insert();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 80,
      "char_count": 3757,
      "preview": "(function executeRule(current, previous /*null when async*/ ) {\r\n    //Check core setting if tenon lead scoring is enabled\r\n    var scoringEnabled = false;\r\n\tvar settingGR = new GlideRecord('x_cadso_c...",
      "full_script": "(function executeRule(current, previous /*null when async*/ ) {\r\n    //Check core setting if tenon lead scoring is enabled\r\n    var scoringEnabled = false;\r\n\tvar settingGR = new GlideRecord('x_cadso_core_setting');\r\n\tsettingGR.addQuery('name', 'x_cadso_lead.tenon_marketing_lead_scoring');\r\n\tsettingGR.addQuery(\"active\", \"true\");\r\n\tsettingGR.query();\r\n\tif(settingGR.next()){\r\n\t\tscoringEnabled = settingGR.getValue('value');\r\n\t}\r\n\t\r\n    if (scoringEnabled == 'true') {\r\n        // Check which features are installed\r\n        var featureAPI = new x_cadso_core.FeatureAvailability();\r\n        var leadEnabled = featureAPI.isLeadEnabled();\r\n        var contactEnabled = featureAPI.isContactEnabled();\r\n        var consumerEnabled = featureAPI.isConsumerEnabled();\r\n\r\n        //Check for contact, consumer, and lead and add score to lead event table\r\n        if (leadEnabled || contactEnabled || consumerEnabled) {\r\n\t\t\tvar typeID = current.getValue('activity_type_id');\r\n            var scoreAPI = new LeadScoring();\r\n            var activityID = current.getValue();\r\n            var table = current.actor_name.getValue();\r\n\r\n            var actorRefRecord = current.actor_id.getRefRecord();\r\n            var actor = current.actor_id.getValue();\r\n            var eventType = 'custom';\r\n            var score = scoreAPI.getScore(typeID, eventType);\r\n            if (score != 0 && actorRefRecord.isValidRecord()) {\r\n                var eventTableGR = new GlideRecord('x_cadso_lead_event');\r\n                eventTableGR.initialize();\r\n                eventTableGR.newRecord();\r\n                eventTableGR.setValue('event', typeID);\r\n                eventTableGR.setValue('score', score);\r\n                if (leadEnabled && table == 'sn_lead_mgmt_core_lead') {\r\n                    var lead = actor;\r\n                    eventTableGR.setValue('lead', lead);\r\n                } else {\r\n                    if (contactEnabled && table == 'customer_contact') {\r\n                        var contact = actor;\r\n                        if (leadEnabled) {\r\n                            var contactLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            contactLeadGR.addQuery('contact', contact);\r\n                            contactLeadGR.query();\r\n\r\n                            if (contactLeadGR.next()) {\r\n                                var contactLead = contactLeadGR.getValue('sys_id');\r\n                                if (contactLead) {\r\n                                    eventTableGR.setValue('lead', contactLead);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        eventTableGR.setValue('contact', contact);\r\n                    }\r\n                    if (consumerEnabled && table == 'csm_consumer') {\r\n                        var consumer = actor;\r\n                        if (leadEnabled) {\r\n                            var consumerLeadGR = new GlideRecord('sn_lead_mgmt_core_lead');\r\n                            consumerLeadGR.addQuery('consumer', consumer);\r\n                            consumerLeadGR.query();\r\n\r\n                            if (consumerLeadGR.next()) {\r\n                                var consumerLead = consumerLeadGR.getValue('sys_id');\r\n                                if (consumerLead) {\r\n                                    eventTableGR.setValue('lead', consumerLead);\r\n                                }\r\n                            }\r\n                        }\r\n                        eventTableGR.setValue('consumer', consumer);\r\n                    }\r\n                }\r\n\r\n                eventTableGR.setValue('event_type', eventType);\r\n                eventTableGR.insert();\r\n            }\r\n        }\r\n    }\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "",
    "display_value": ""
  },
  "sys_package": {
    "value": "d7d2017bc3646610d4ddf1db050131db",
    "display_value": "Tenon Lead Management"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_ece1e20cc3b0e610d4ddf1db050131a7",
    "display_value": "sys_script_ece1e20cc3b0e610d4ddf1db050131a7"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Send Activity Event To Lead Scoring",
    "display_value": "Send Activity Event To Lead Scoring"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
