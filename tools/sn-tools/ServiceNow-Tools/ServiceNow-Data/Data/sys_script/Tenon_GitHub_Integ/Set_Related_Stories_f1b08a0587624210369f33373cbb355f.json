{
  "_metadata": {
    "table": "sys_script",
    "sys_id": "f1b08a0587624210369f33373cbb355f",
    "extracted_at": "2025-09-19T21:48:41.900Z",
    "display_value": "Set Related Stories",
    "application": "Tenon_GitHub_Integ",
    "scope": {
      "display_value": "Tenon GitHub Integ",
      "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/16cd7041872e0210369f33373cbb35d3",
      "value": "16cd7041872e0210369f33373cbb35d3"
    }
  },
  "client_callable": {
    "value": "false",
    "display_value": "false"
  },
  "template": {
    "value": "",
    "display_value": ""
  },
  "access": {
    "value": "package_private",
    "display_value": "This application scope only"
  },
  "action_insert": {
    "value": "true",
    "display_value": "true"
  },
  "action_update": {
    "value": "true",
    "display_value": "true"
  },
  "advanced": {
    "value": "true",
    "display_value": "true"
  },
  "action_delete": {
    "value": "false",
    "display_value": "false"
  },
  "change_fields": {
    "value": "false",
    "display_value": "false"
  },
  "description": {
    "value": "",
    "display_value": ""
  },
  "action_query": {
    "value": "false",
    "display_value": "false"
  },
  "sys_updated_on": {
    "value": "2024-08-09 14:25:08",
    "display_value": "2024-08-09 07:25:08 AM"
  },
  "when": {
    "value": "before",
    "display_value": "before"
  },
  "sys_class_name": {
    "value": "sys_script",
    "display_value": "Business Rule"
  },
  "is_rest": {
    "value": "false",
    "display_value": "false"
  },
  "rest_method_text": {
    "value": "",
    "display_value": ""
  },
  "sys_updated_by": {
    "value": "nathan.long",
    "display_value": "nathan.long"
  },
  "rest_service_text": {
    "value": "",
    "display_value": ""
  },
  "sys_created_on": {
    "value": "2024-05-31 23:08:21",
    "display_value": "2024-05-31 04:08:21 PM"
  },
  "sys_domain": {
    "value": "global",
    "display_value": "global"
  },
  "sys_name": {
    "value": "Set Related Stories",
    "display_value": "Set Related Stories"
  },
  "sys_scope": {
    "value": "16cd7041872e0210369f33373cbb35d3",
    "display_value": "Tenon GitHub Integ"
  },
  "sys_created_by": {
    "value": "nathan.long",
    "display_value": "nathan.long"
  },
  "order": {
    "value": "100",
    "display_value": "100"
  },
  "rest_method": {
    "value": "",
    "display_value": ""
  },
  "rest_service": {
    "value": "",
    "display_value": ""
  },
  "add_message": {
    "value": "false",
    "display_value": "false"
  },
  "sys_mod_count": {
    "value": "23",
    "display_value": "23"
  },
  "active": {
    "value": "true",
    "display_value": "true"
  },
  "sys_overrides": {
    "value": "",
    "display_value": ""
  },
  "collection": {
    "value": "x_cadso_ti_gitint_pull_request",
    "display_value": "x_cadso_ti_gitint_pull_request"
  },
  "message": {
    "value": "",
    "display_value": null
  },
  "priority": {
    "value": "100",
    "display_value": "100"
  },
  "sys_domain_path": {
    "value": "/",
    "display_value": "/"
  },
  "sys_tags": {
    "value": "",
    "display_value": ""
  },
  "script": {
    "value": "(function executeRule(current, previous /*null when async*/) {\r\n\tgs.info('firing Set Related Stories BR');\r\n\tvar relStryIds = [];\r\n\tvar stryNumRegEx = /STRY[0-9]{7}/g;  // Regex to match story number format in github pull request desc.\r\n\tvar contentToMatch = current.body + current.title;\r\n\tvar stryNumArr = contentToMatch.match(stryNumRegEx);\r\n\tvar uniqStryNumArr = [...new Set(stryNumArr)];  // Flip to set and back to de-dup.\r\n\r\n\tif (uniqStryNumArr) {\r\n\t\tvar stryGr = new GlideRecord('rm_story');\r\n\t\tstryGr.addQuery('number', 'IN', uniqStryNumArr.join());\r\n\t\tstryGr.query();\r\n\r\n\t\twhile (stryGr.next()) {\r\n\t\t\trelStryIds.push(stryGr.getUniqueValue());\r\n\t\t}\r\n\t}\r\n\r\n\tif (previous.stories) {\r\n\t\trelStryIds = relStryIds.concat(previous.stories.split(','));\r\n\t}\r\n\r\n\tvar cleanCurrentStryIds = [...new Set(relStryIds)];  // Flip to set and back to de-dup\r\n\t\r\n\tcurrent.stories = cleanCurrentStryIds.join();\r\n\r\n})(current, previous);",
    "display_value": "(function executeRule(current, previous /*null when async*/) {\r\n\tgs.info('firing Set Related Stories BR');\r\n\tvar relStryIds = [];\r\n\tvar stryNumRegEx = /STRY[0-9]{7}/g;  // Regex to match story number format in github pull request desc.\r\n\tvar contentToMatch = current.body + current.title;\r\n\tvar stryNumArr = contentToMatch.match(stryNumRegEx);\r\n\tvar uniqStryNumArr = [...new Set(stryNumArr)];  // Flip to set and back to de-dup.\r\n\r\n\tif (uniqStryNumArr) {\r\n\t\tvar stryGr = new GlideRecord('rm_story');\r\n\t\tstryGr.addQuery('number', 'IN', uniqStryNumArr.join());\r\n\t\tstryGr.query();\r\n\r\n\t\twhile (stryGr.next()) {\r\n\t\t\trelStryIds.push(stryGr.getUniqueValue());\r\n\t\t}\r\n\t}\r\n\r\n\tif (previous.stories) {\r\n\t\trelStryIds = relStryIds.concat(previous.stories.split(','));\r\n\t}\r\n\r\n\tvar cleanCurrentStryIds = [...new Set(relStryIds)];  // Flip to set and back to de-dup\r\n\t\r\n\tcurrent.stories = cleanCurrentStryIds.join();\r\n\r\n})(current, previous);",
    "formatted_script": {
      "line_count": 27,
      "char_count": 925,
      "preview": "(function executeRule(current, previous /*null when async*/) {\r\n\tgs.info('firing Set Related Stories BR');\r\n\tvar relStryIds = [];\r\n\tvar stryNumRegEx = /STRY[0-9]{7}/g;  // Regex to match story number ...",
      "full_script": "(function executeRule(current, previous /*null when async*/) {\r\n\tgs.info('firing Set Related Stories BR');\r\n\tvar relStryIds = [];\r\n\tvar stryNumRegEx = /STRY[0-9]{7}/g;  // Regex to match story number format in github pull request desc.\r\n\tvar contentToMatch = current.body + current.title;\r\n\tvar stryNumArr = contentToMatch.match(stryNumRegEx);\r\n\tvar uniqStryNumArr = [...new Set(stryNumArr)];  // Flip to set and back to de-dup.\r\n\r\n\tif (uniqStryNumArr) {\r\n\t\tvar stryGr = new GlideRecord('rm_story');\r\n\t\tstryGr.addQuery('number', 'IN', uniqStryNumArr.join());\r\n\t\tstryGr.query();\r\n\r\n\t\twhile (stryGr.next()) {\r\n\t\t\trelStryIds.push(stryGr.getUniqueValue());\r\n\t\t}\r\n\t}\r\n\r\n\tif (previous.stories) {\r\n\t\trelStryIds = relStryIds.concat(previous.stories.split(','));\r\n\t}\r\n\r\n\tvar cleanCurrentStryIds = [...new Set(relStryIds)];  // Flip to set and back to de-dup\r\n\t\r\n\tcurrent.stories = cleanCurrentStryIds.join();\r\n\r\n})(current, previous);"
    }
  },
  "abort_action": {
    "value": "false",
    "display_value": "false"
  },
  "execute_function": {
    "value": "false",
    "display_value": "false"
  },
  "filter_condition": {
    "value": "bodyVALCHANGES^EQ",
    "display_value": "bodyVALCHANGES^EQ"
  },
  "sys_package": {
    "value": "16cd7041872e0210369f33373cbb35d3",
    "display_value": "Tenon GitHub Integ"
  },
  "condition": {
    "value": "",
    "display_value": ""
  },
  "sys_update_name": {
    "value": "sys_script_f1b08a0587624210369f33373cbb355f",
    "display_value": "sys_script_f1b08a0587624210369f33373cbb355f"
  },
  "rest_variables": {
    "value": "",
    "display_value": ""
  },
  "name": {
    "value": "Set Related Stories",
    "display_value": "Set Related Stories"
  },
  "role_conditions": {
    "value": "",
    "display_value": ""
  },
  "sys_policy": {
    "value": "",
    "display_value": null
  }
}
