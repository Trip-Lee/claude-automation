{
  "short_description": {
    "display_value": "",
    "value": ""
  },
  "operation_script": {
    "display_value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    let {\r\n        sysId\r\n    } = request.body.data;\r\n    let title = 'People in this List...';\r\n    let encodedQuery = '';\r\n    let count = 0;\r\n    let type = '';\r\n    let view = '';\r\n    let orderByField = '';\r\n    let table = '';\r\n    let staticView = '';\r\n    let filters = [];\r\n    const query = {};\r\n\r\n    const audienceGr = new GlideRecord('x_cadso_automate_audience');\r\n    if (audienceGr.get(sysId)) {\r\n        title = audienceGr.getDisplayValue('source') + 's in this List';\r\n        encodedQuery = audienceGr.getDisplayValue('conditions');\r\n        type = audienceGr.getDisplayValue('type');\r\n        count = audienceGr.getValue('count');\r\n        view = audienceGr.getValue('view');\r\n        staticView = audienceGr.getValue('static_view');\r\n        orderByField = audienceGr.getValue('order_by');\r\n        table = audienceGr.getDisplayValue('table');\r\n        filters = JSON.parse(audienceGr.getValue('filter_object')) || [];\r\n\r\n    }\r\n\r\n    const isStatic = type === 'Static';\r\n\r\n    if (isStatic) {\r\n        var hashEncodedQuery = '';\r\n        var audHashGR = new GlideRecord('x_cadso_automate_audience_hash');\r\n        audHashGR.addQuery('audience', sysId);\r\n        audHashGR.setLimit(10);\r\n        audHashGR.query();\r\n\r\n        while (audHashGR.next()) {\r\n            var hashArr = JSON.parse(audHashGR.getValue('member_hash')) || [];\r\n            var idArr = [];\r\n\r\n            for (var x = 0; x < hashArr.length; x++) {\r\n                if (!hashArr[x]) {\r\n\t\t\t\t\t//Do nothing\r\n                } else {\r\n                    idArr.push(hashArr[x].sysId);\r\n                }\r\n\r\n            }\r\n            if (idArr.length > 0) {\r\n                hashEncodedQuery += 'sys_idIN' + idArr.join(',');\r\n            }\r\n        }\r\n    }\r\n    response.setBody({\r\n        title,\r\n        encodedQuery,\r\n        type,\r\n        filters,\r\n        query,\r\n        count,\r\n        table,\r\n        view,\r\n        orderByField,\r\n        staticObj: isStatic ? {\r\n            orderByField: 'name',\r\n            table,\r\n            encodedQuery: hashEncodedQuery,\r\n            view: staticView\r\n        } : {},\r\n        isStatic\r\n    });\r\n\r\n\r\n})(request, response);",
    "value": "(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {\r\n    let {\r\n        sysId\r\n    } = request.body.data;\r\n    let title = 'People in this List...';\r\n    let encodedQuery = '';\r\n    let count = 0;\r\n    let type = '';\r\n    let view = '';\r\n    let orderByField = '';\r\n    let table = '';\r\n    let staticView = '';\r\n    let filters = [];\r\n    const query = {};\r\n\r\n    const audienceGr = new GlideRecord('x_cadso_automate_audience');\r\n    if (audienceGr.get(sysId)) {\r\n        title = audienceGr.getDisplayValue('source') + 's in this List';\r\n        encodedQuery = audienceGr.getDisplayValue('conditions');\r\n        type = audienceGr.getDisplayValue('type');\r\n        count = audienceGr.getValue('count');\r\n        view = audienceGr.getValue('view');\r\n        staticView = audienceGr.getValue('static_view');\r\n        orderByField = audienceGr.getValue('order_by');\r\n        table = audienceGr.getDisplayValue('table');\r\n        filters = JSON.parse(audienceGr.getValue('filter_object')) || [];\r\n\r\n    }\r\n\r\n    const isStatic = type === 'Static';\r\n\r\n    if (isStatic) {\r\n        var hashEncodedQuery = '';\r\n        var audHashGR = new GlideRecord('x_cadso_automate_audience_hash');\r\n        audHashGR.addQuery('audience', sysId);\r\n        audHashGR.setLimit(10);\r\n        audHashGR.query();\r\n\r\n        while (audHashGR.next()) {\r\n            var hashArr = JSON.parse(audHashGR.getValue('member_hash')) || [];\r\n            var idArr = [];\r\n\r\n            for (var x = 0; x < hashArr.length; x++) {\r\n                if (!hashArr[x]) {\r\n\t\t\t\t\t//Do nothing\r\n                } else {\r\n                    idArr.push(hashArr[x].sysId);\r\n                }\r\n\r\n            }\r\n            if (idArr.length > 0) {\r\n                hashEncodedQuery += 'sys_idIN' + idArr.join(',');\r\n            }\r\n        }\r\n    }\r\n    response.setBody({\r\n        title,\r\n        encodedQuery,\r\n        type,\r\n        filters,\r\n        query,\r\n        count,\r\n        table,\r\n        view,\r\n        orderByField,\r\n        staticObj: isStatic ? {\r\n            orderByField: 'name',\r\n            table,\r\n            encodedQuery: hashEncodedQuery,\r\n            view: staticView\r\n        } : {},\r\n        isStatic\r\n    });\r\n\r\n\r\n})(request, response);"
  },
  "sys_updated_on": {
    "display_value": "2025-08-14 10:02:45 AM",
    "value": "2025-08-14 17:02:45"
  },
  "enforce_acl": {
    "display_value": "Tenon Automate UI API Access",
    "value": "003a5109c3ee021085b196c4e40131ab"
  },
  "web_service_version": {
    "display_value": "",
    "value": ""
  },
  "sys_class_name": {
    "display_value": "Scripted REST Resource",
    "value": "sys_ws_operation"
  },
  "requires_acl_authorization": {
    "display_value": "true",
    "value": "true"
  },
  "request_example": {
    "display_value": "",
    "value": ""
  },
  "sys_id": {
    "display_value": "05afff0087ab0a10369f33373cbb3586",
    "value": "05afff0087ab0a10369f33373cbb3586"
  },
  "http_method": {
    "display_value": "POST",
    "value": "POST"
  },
  "sys_updated_by": {
    "display_value": "will.mcgill",
    "value": "will.mcgill"
  },
  "operation_uri": {
    "display_value": "/api/x_cadso_automate/ui/audienceBuilder/fetch",
    "value": "/api/x_cadso_automate/ui/audienceBuilder/fetch"
  },
  "sys_created_on": {
    "display_value": "2024-07-17 03:44:21 PM",
    "value": "2024-07-17 22:44:21"
  },
  "sys_name": {
    "display_value": "Audience Builder - Fetch",
    "value": "Audience Builder - Fetch"
  },
  "sys_scope": {
    "display_value": "Tenon Marketing Automation",
    "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_scope/5e9f5f8b87420250369f33373cbb3559",
    "value": "5e9f5f8b87420250369f33373cbb3559"
  },
  "sys_created_by": {
    "display_value": "admin",
    "value": "admin"
  },
  "web_service_definition": {
    "display_value": "Tenon Automate UI API",
    "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_ws_definition/4a222358c3aa425085b196c4e401318e",
    "value": "4a222358c3aa425085b196c4e401318e"
  },
  "consumes": {
    "display_value": "application/json,application/xml,text/xml",
    "value": "application/json,application/xml,text/xml"
  },
  "x_cadso_api_docs_request_body_schema": {
    "display_value": "",
    "value": ""
  },
  "requires_snc_internal_role": {
    "display_value": "true",
    "value": "true"
  },
  "requires_authentication": {
    "display_value": "true",
    "value": "true"
  },
  "sys_mod_count": {
    "display_value": "59",
    "value": "59"
  },
  "active": {
    "display_value": "true",
    "value": "true"
  },
  "x_cadso_api_docs_tags": {
    "display_value": "Audiences",
    "value": "Audiences"
  },
  "sys_tags": {
    "display_value": "",
    "value": ""
  },
  "sys_package": {
    "display_value": "Tenon Marketing Automation",
    "link": "https://tenonworkstudio.service-now.com/api/now/table/sys_package/5e9f5f8b87420250369f33373cbb3559",
    "value": "5e9f5f8b87420250369f33373cbb3559"
  },
  "sys_update_name": {
    "display_value": "sys_ws_operation_05afff0087ab0a10369f33373cbb3586",
    "value": "sys_ws_operation_05afff0087ab0a10369f33373cbb3586"
  },
  "consumes_customized": {
    "display_value": "false",
    "value": "false"
  },
  "name": {
    "display_value": "Audience Builder - Fetch",
    "value": "Audience Builder - Fetch"
  },
  "produces": {
    "display_value": "application/json,application/xml,text/xml",
    "value": "application/json,application/xml,text/xml"
  },
  "relative_path": {
    "display_value": "/audienceBuilder/fetch",
    "value": "/audienceBuilder/fetch"
  },
  "produces_customized": {
    "display_value": "false",
    "value": "false"
  },
  "default_operation_uri": {
    "display_value": "",
    "value": ""
  },
  "sys_policy": {
    "display_value": null,
    "value": ""
  }
}